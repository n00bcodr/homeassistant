- platform: template
  sensors:
    washing_machine_state:
      friendly_name: "Washing Machine State"
      value_template: >
        {% set state = states.sensor.bob_sub_state.state %}
        {% if state == 'WASHER_SUBSTATE_PROGRAM_STARTED' or state == 'unavailable' %}
          Idle
        {% elif state == 'WASHER_SUBSTATE_WASHING' %}
          Washing
        {% elif state == 'WASHER_SUBSTATE_DRYING' %}
          Drying
        {% elif state == 'WASHER_SUBSTATE_RINSING' %}
          Rinsing
        {% elif state == 'WASHER_SUBSTATE_SPIN' %}
          Spinning
        {% elif state == 'WASHER_SUBSTATE_REMOVE_LAUNDRY' %}
          Cycle Complete
        {% else %}
          {{ state }}
        {% endif %}
      icon_template: >
        {% set state = states.sensor.bob_sub_state.state %}
        {% if state == 'WASHER_SUBSTATE_PROGRAM_STARTED' %}
          mdi:washing-machine-off
        {% elif state == 'unavailable' %}
          mdi:washing-machine-alert
        {% elif state == 'WASHER_SUBSTATE_DRYING' %}
          mdi:tumble-dryer
        {% elif state == 'WASHER_SUBSTATE_WASHING' %}
          mdi:water
        {% elif state == 'WASHER_SUBSTATE_RINSING' %}
          mdi:water-circle
        {% elif state == 'WASHER_SUBSTATE_SPIN' %}
          fas:spinner
        {% elif state == 'WASHER_SUBSTATE_REMOVE_LAUNDRY' %}
          mdi:washing-machine
        {% else %}
          mdi:washing-machine-alert
        {% endif %}

    magic_cube_active_face:
      friendly_name: "Magic Cube Active Face"
      value_template: "{{states.sensor.magic_cube_action.attributes.side}}"

    formula_1: !include formula1.yaml

    count_automations:
      value_template: "{{ states.automation | count }}"
    count_scripts:
      value_template: "{{ states.script | count }}"
    count_device_trackers:
      value_template: "{{ states.device_tracker | count }}"
    count_binary_sensors:
      value_template: "{{ states.binary_sensor | count }}"
    count_sensors:
      value_template: "{{ states.sensor | count }}"
    count_switches:
      value_template: "{{ states.switch | count }}"
    count_lights:
      value_template: "{{ states.light | count }}"
    count_fans:
      value_template: "{{ states.fan | count }}"
    count_zones:
      value_template: "{{ states.zone | count }}"
    count_scenes:
      value_template: "{{ states.scene | count }}"
    count_media_players:
      value_template: "{{ states.media_player | count }}"
    count_input_booleans:
      value_template: "{{ states.input_boolean | count }}"

    #----- Speedtest Download
    download_speed:
      value_template: "{{ float ('%.1f'%(states('sensor.speedtest_download') | float) ) + 50 }}"
      friendly_name: "Download Speed"
      unit_of_measurement: "Mbps"
      icon_template: "mdi:download"

    #----- Speedtest Upload
    upload_speed:
      value_template: "{{ float ('%.1f'%(states('sensor.speedtest_upload') | float) ) + 50 }}"
      friendly_name: "Upload Speed"
      unit_of_measurement: "Mbps"
      icon_template: "mdi:upload"

    moon_phase:
      friendly_name: "Moon Phase"
      value_template: "{{ states.sensor.moon.state | replace ('_', ' ') | title}}"
      entity_picture_template: /local/moon_phases/{{ states.sensor.moon.state }}.png

    chair_occupancy:
      friendly_name: "Chair Occupancy"
      value_template: "{{ iif(is_state('binary_sensor.vibration_vibration', 'on'), 'Away', 'At Desk') }}"
      icon_template: "{{ iif(is_state('binary_sensor.vibration_vibration', 'on'), 'mdi:account-off', 'mdi:table-chair') }}"

    harddisk_total_space:
      friendly_name: "Hard Disk Total Space"
      unique_id: harddisk_total_space
      unit_of_measurement: "GB"
      icon_template: mdi:harddisk
      value_template: >
        {{ state_attr('sensor.sonarr_disk_space', '/')|regex_findall_index(find='(/.*G)') | replace ("G", "")| replace ("/", "")}}

    harddisk_free_space:
      friendly_name: "Hard Disk Free Space"
      unique_id: harddisk_free_space
      unit_of_measurement: "GB"
      icon_template: mdi:harddisk
      value_template: >
        {{ state_attr('sensor.sonarr_disk_space', '/')|regex_findall_index(find='(.*/)')  | replace ("G", "")| replace ("/", "")}}

    harddisk_used_space:
      friendly_name: "Hard Disk Used Space"
      unique_id: harddisk_used_space
      unit_of_measurement: "GB"
      icon_template: mdi:harddisk
      value_template: >
        {{ ((states('sensor.harddisk_total_space') | float) - (states('sensor.harddisk_free_space') | float) | round(2))}}

    1tb_total_space:
      friendly_name: "1TB Hard Disk Total Space"
      unique_id: 1tb_harddisk_total_space
      unit_of_measurement: "GB"
      icon_template: mdi:harddisk
      value_template: >
        {{ state_attr('sensor.sonarr_disk_space', '/home/pt/media/1TB') |regex_findall_index(find='(/.*G)') | replace ("G", "")| replace ("/", "")}}

    1tb_free_space:
      friendly_name: "1TB Hard Disk Free Space"
      unique_id: 1tb_harddisk_free_space
      unit_of_measurement: "GB"
      icon_template: mdi:harddisk
      value_template: >
        {{ state_attr('sensor.sonarr_disk_space', '/home/pt/media/1TB') |regex_findall_index(find='(.*/)') | replace ("G", "")| replace ("/", "")}}

    1tb_used_space:
      friendly_name: "1TB Hard Disk Used Space"
      unique_id: 1tb_harddisk_used_space
      unit_of_measurement: "GB"
      icon_template: mdi:harddisk
      value_template: >
        {{ ((states('sensor.1tb_total_space') | float) - ( states('sensor.1tb_free_space') | float ) | round(2)) }}

    5tb_total_space:
      friendly_name: "5TB Hard Disk Total Space"
      unique_id: 5tb_harddisk_total_space
      unit_of_measurement: "GB"
      icon_template: mdi:harddisk
      value_template: >
        {{ state_attr('sensor.sonarr_disk_space', '/home/pt/media/5TB') |regex_findall_index(find='(/.*G)') | replace ("G", "")| replace ("/", "")}}

    5tb_free_space:
      friendly_name: "5TB Hard Disk Free Space"
      unique_id: 5tb_harddisk_free_space
      unit_of_measurement: "GB"
      icon_template: mdi:harddisk
      value_template: >
        {{ state_attr('sensor.sonarr_disk_space', '/home/pt/media/5TB') |regex_findall_index(find='(.*/)') | replace ("G", "")| replace ("/", "")}}

    5tb_used_space:
      friendly_name: "5TB Hard Disk Used Space"
      unique_id: 5tb_harddisk_used_space
      unit_of_measurement: "GB"
      icon_template: mdi:harddisk
      value_template: >
        {{ ((states('sensor.5tb_total_space') | float) - ( states('sensor.5tb_free_space') | float) | round(2)) }}

    server_last_boot:
      value_template: >
        {% set lb = states('sensor.last_boot') %}
          {% if lb != 'unknown' %}
            {% set seconds = (as_timestamp(now()) - as_timestamp(lb))|int %}
            {% set days = (seconds / 86400)|int %}
            {% set seconds = seconds % 86400 %}
            {% set hours = (seconds / 3600)|int %}
            {% set seconds = seconds % 3600 %}
            {% set minutes = (seconds / 60)|int %}
            {% set seconds = seconds % 60 %}
            {% if hours == 0 and minutes == 0 %}
              {{ time }} seconds
            {% else %}
              {%- if days > 0 -%}
                {%- if days == 1 -%}
                  1 day
                {%- else -%}
                  {{ days }} days
                {%- endif -%}
              {%- endif -%}
              {%- if hours > 0 and days < 7 -%}
                {%- if days > 0 -%}
                  {{ ', ' }}
                {%- endif -%}
                {%- if hours == 1 -%}
                  1 hour
                {%- else -%}
                  {{ hours }} hours
                {%- endif -%}
              {%- endif -%}
              {%- if days == 0 and minutes > 0 -%}
                {%- if hours > 0 -%}
                  {{ ', ' }}{{ minutes }} min
                {%- else -%}
                  {%- if minutes == 1 -%}
                    1 minute
                  {%- else -%}
                    {{ minutes }} minutes
                  {%- endif -%}
                {%- endif -%}
              {%- endif -%}
            {% endif %}
          {% else %}
            unknown
          {% endif %}

    black_bin:
      friendly_name: Black Bin Pickup
      value_template: >
        {{ as_timestamp(state_attr("calendar.allied_recycling_black_bin", "start_time")) | timestamp_custom('%B %-d') }}
      attribute_templates:
        next_collection: >
          {{ ((as_timestamp(state_attr("calendar.allied_recycling_black_bin", "start_time")) | as_datetime | as_local).date() - now().date()).days }}
        icon: >
          mdi:numeric-{{ ((as_timestamp(state_attr("calendar.allied_recycling_black_bin", "start_time")) | as_datetime | as_local).date() - now().date()).days }}

    blue_bin:
      friendly_name: Blue Bin Pickup
      value_template: >
        {{ as_timestamp(state_attr("calendar.allied_recycling_blue_bin", "start_time")) | timestamp_custom('%B %-d') }}
      attribute_templates:
        next_collection: >
          {{ ((as_timestamp(state_attr("calendar.allied_recycling_blue_bin", "start_time")) | as_datetime | as_local).date() - now().date()).days }}
        icon: >
          mdi:numeric-{{ ((as_timestamp(state_attr("calendar.allied_recycling_blue_bin", "start_time")) | as_datetime | as_local).date() - now().date()).days }}

- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /
    - type: disk_use
      arg: /
    - type: memory_free
    - type: memory_use
    - type: memory_use_percent
    - type: processor_temperature
    - type: processor_use
    - type: last_boot

- platform: ics
  name: Formula1
  url: https://files-f1.motorsportcalendars.com/f1-calendar_qualifying_sprint_gp.ics?t=1674387381463
  id: 1
  timeformat: "%A, %-d.%b.%y"
  icon: mdi:keyboard-f1

- platform: formulaone_api

- platform: plex_recently_added
  name: Recently Added Movies # will create sensor.recently_added_movies
  token: !secret plex_token
  host: !secret plex_host
  port: 32400
  section_types:
    - movie

- platform: plex_recently_added
  name: Recently Added TV # will create sensor.recently_added_tv
  token: !secret plex_token
  host: !secret plex_host
  port: 32400
  section_types:
    - show
