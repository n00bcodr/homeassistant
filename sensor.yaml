- platform: template
  sensors:
    washing_machine_state:
      unique_id: washing_machine_state
      friendly_name: "Washing Machine State"
      value_template: >
        {% set state = states.sensor.bob_sub_state.state %}
        {% if state == 'washer_substate_program_started' or state == 'unavailable' %}
          Idle
        {% elif state == 'washer_substate_washing' %}
          Washing
        {% elif state == 'washer_substate_drying' %}
          Drying
        {% elif state == 'washer_substate_rinsing' %}
          Rinsing
        {% elif state == 'washer_substate_spin' %}
          Spinning
        {% elif state == 'washer_substate_paused' %}
          Paused
        {% elif state == 'washer_substate_remove_laundry' %}
          Cycle Complete
        {% else %}
          {{ state }}
        {% endif %}
      icon_template: >
        {% set state = states.sensor.bob_sub_state.state %}
        {% if state == 'washer_substate_program_started' %}
          mdi:washing-machine-off
        {% elif state == 'unavailable' %}
          mdi:washing-machine-alert
        {% elif state == 'washer_substate_drying' %}
          mdi:tumble-dryer
        {% elif state == 'washer_substate_washing' %}
          mdi:water
        {% elif state == 'washer_substate_rinsing' %}
          mdi:water-circle
        {% elif state == 'washer_substate_spin' %}
          fas:spinner
        {% elif state == 'washer_substate_paused' %}
          mdi:pause-box-outline
        {% elif state == 'washer_substate_remove_laundry' %}
          mdi:washing-machine
        {% else %}
          mdi:washing-machine-alert
        {% endif %}

    magic_cube_active_face:
      unique_id: magic_cube_active_face
      friendly_name: "Magic Cube Active Face"
      value_template: "{{states.sensor.magic_cube_action.attributes.side}}"

    count_automations:
      friendly_name: "Automation Count"
      value_template: "{{ states.automation | count }}"
      icon_template: mdi:robot
      unique_id: count_automations
      attribute_templates:
        on: >
          {{ states.automation | selectattr('state', 'eq', 'on') | map(attribute='name') | list | join(', ') }}
        off: >
          {{ states.automation | selectattr('state', 'eq', 'off') | map(attribute='name') | list | join(', ') }}

    count_scripts:
      friendly_name: "Script Count"
      value_template: "{{ states.script | count }}"
      icon_template: mdi:script-text-outline
      unique_id: count_scripts
      attribute_templates:
        on: >
          {{ states.script | selectattr('state', 'eq', 'on') | map(attribute='name') | list | join(', ') }}
        off: >
          {{ states.script | selectattr('state', 'eq', 'off') | map(attribute='name') | list | join(', ') }}

    count_device_trackers:
      friendly_name: "Device Tracker Count"
      value_template: "{{ states.device_tracker | count }}"
      icon_template: mdi:lan-connect
      unique_id: count_device_trackers
      attribute_templates:
        on: >
          {{ states.device_tracker | selectattr('state', 'eq', 'home') | map(attribute='name') | list | join(', ') }}
        off: >
          {{ states.device_tracker | selectattr('state', 'eq', 'not_home') | map(attribute='name') | list | join(', ') }}

    count_binary_sensors:
      friendly_name: "Binary Sensor Count"
      value_template: "{{ states.binary_sensor | count }}"
      icon_template: mdi:checkbox-multiple-blank-outline
      unique_id: count_binary_sensors
      attribute_templates:
        on: >
          {{ states.binary_sensor | selectattr('state', 'eq', 'on') | map(attribute='name') | list | join(', ') }}
        off: >
          {{ states.binary_sensor | selectattr('state', 'eq', 'off') | map(attribute='name') | list | join(', ') }}

    count_sensors:
      friendly_name: "Sensor Count"
      value_template: "{{ states.sensor | count }}"
      icon_template: mdi:eye
      unique_id: count_sensors
      attribute_templates:
        list: >
          {{ states.sensor | selectattr('state') | map(attribute='name') | list | join(', ') }}

    count_switches:
      friendly_name: "Switch Count"
      value_template: "{{ states.switch | count }}"
      icon_template: mdi:toggle-switch-outline
      unique_id: count_switches
      attribute_templates:
        on: >
          {{ states.switch | selectattr('state', 'eq', 'on') | map(attribute='name') | list | join(', ') }}
        off: >
          {{ states.switch | selectattr('state', 'eq', 'off') | map(attribute='name') | list | join(', ') }}

    count_lights:
      friendly_name: "Light Count"
      value_template: "{{ states.light | count }}"
      icon_template: mdi:lightbulb-outline
      unique_id: count_lights
      attribute_templates:
        on: >
          {{ states.light | selectattr('state', 'eq', 'on') | map(attribute='name') | list | join(', ') }}
        off: >
          {{ states.light | selectattr('state', 'eq', 'off') | map(attribute='name') | list | join(', ') }}

    count_zones:
      friendly_name: "Zone Count"
      value_template: "{{ states.zone | count }}"
      icon_template: mdi:map-clock
      unique_id: count_zones
      attribute_templates:
        list: >
          {{ states.zone | selectattr('state') | map(attribute='name') | list | join(', ') }}

    count_scenes:
      friendly_name: "Scene Count"
      value_template: "{{ states.scene | count }}"
      icon_template: mdi:palette-outline
      unique_id: count_scenes
      attribute_templates:
        list: >
          {{ states.scene | selectattr('state') | map(attribute='name') | list | join(', ') }}

    count_media_players:
      friendly_name: "Media Player Count"
      value_template: "{{ states.media_player | count }}"
      icon_template: mdi:cast-audio
      unique_id: count_media_players
      attribute_templates:
        on: >
          {{ states.media_player | selectattr('state', 'eq', 'on') | map(attribute='name') | list | join(', ') }}
        off: >
          {{ states.media_player | selectattr('state', 'eq', 'off') | map(attribute='name') | list | join(', ') }}

    count_input_booleans:
      friendly_name: "Input Boolean Count"
      value_template: "{{ states.input_boolean | count }}"
      icon_template: mdi:toggle-switch-off-outline
      unique_id: count_input_booleans
      attribute_templates:
        on: >
          {{ states.input_boolean | selectattr('state', 'eq', 'on') | map(attribute='name') | list | join(', ') }}
        off: >
          {{ states.input_boolean | selectattr('state', 'eq', 'off') | map(attribute='name') | list | join(', ') }}

    moon_phase:
      friendly_name: "Moon Phase"
      unique_id: moon_phase_image
      value_template: "{{ states.sensor.moon.state | replace ('_', ' ') | title}}"
      entity_picture_template: /local/moon_phases/{{ states.sensor.moon.state }}.png

    chair_occupancy:
      friendly_name: "Chair Occupancy"
      unique_id: chair_occupancy
      value_template: "{{ iif(is_state('binary_sensor.vibration_vibration', 'on'), 'Away', 'At Desk') }}"
      icon_template: "{{ iif(is_state('binary_sensor.vibration_vibration', 'on'), 'mdi:account-off', 'mdi:table-chair') }}"

    harddisk_total_space:
      friendly_name: "Hard Disk Total Space"
      unique_id: harddisk_total_space
      unit_of_measurement: "GB"
      icon_template: mdi:harddisk
      value_template: >
        {{ state_attr('sensor.sonarr_disk_space', '/')|regex_findall_index(find='(/.*G)') | replace ("G", "")| replace ("/", "")}}

    harddisk_free_space:
      friendly_name: "Hard Disk Free Space"
      unique_id: harddisk_free_space
      unit_of_measurement: "GB"
      icon_template: mdi:harddisk
      value_template: >
        {{ state_attr('sensor.sonarr_disk_space', '/')|regex_findall_index(find='(.*/)')  | replace ("G", "")| replace ("/", "")}}

    harddisk_used_space:
      friendly_name: "Hard Disk Used Space"
      unique_id: harddisk_used_space
      unit_of_measurement: "GB"
      icon_template: mdi:harddisk
      value_template: >
        {{ ((states('sensor.harddisk_total_space') | float) - (states('sensor.harddisk_free_space') | float) | round(2))}}

    1tb_total_space:
      friendly_name: "1TB Hard Disk Total Space"
      unique_id: 1tb_harddisk_total_space
      unit_of_measurement: "GB"
      icon_template: mdi:harddisk
      value_template: >
        {{ state_attr('sensor.sonarr_disk_space', '/media/pt/1TB') |regex_findall_index(find='(/.*G)') | replace ("G", "")| replace ("/", "")}}

    1tb_free_space:
      friendly_name: "1TB Hard Disk Free Space"
      unique_id: 1tb_harddisk_free_space
      unit_of_measurement: "GB"
      icon_template: mdi:harddisk
      value_template: >
        {{ state_attr('sensor.sonarr_disk_space', '/media/pt/1TB') |regex_findall_index(find='(.*/)') | replace ("G", "")| replace ("/", "")}}

    1tb_used_space:
      friendly_name: "1TB Hard Disk Used Space"
      unique_id: 1tb_harddisk_used_space
      unit_of_measurement: "GB"
      icon_template: mdi:harddisk
      value_template: >
        {{ ((states('sensor.1tb_total_space') | float) - ( states('sensor.1tb_free_space') | float ) | round(2)) }}

    5tb_total_space:
      friendly_name: "5TB Hard Disk Total Space"
      unique_id: 5tb_harddisk_total_space
      unit_of_measurement: "GB"
      icon_template: mdi:harddisk
      value_template: >
        {{ state_attr('sensor.sonarr_disk_space', '/media/pt/5TB') |regex_findall_index(find='(/.*G)') | replace ("G", "")| replace ("/", "")}}

    5tb_free_space:
      friendly_name: "5TB Hard Disk Free Space"
      unique_id: 5tb_harddisk_free_space
      unit_of_measurement: "GB"
      icon_template: mdi:harddisk
      value_template: >
        {{ state_attr('sensor.sonarr_disk_space', '/media/pt/5TB') |regex_findall_index(find='(.*/)') | replace ("G", "")| replace ("/", "")}}

    5tb_used_space:
      friendly_name: "5TB Hard Disk Used Space"
      unique_id: 5tb_harddisk_used_space
      unit_of_measurement: "GB"
      icon_template: mdi:harddisk
      value_template: >
        {{ ((states('sensor.5tb_total_space') | float) - ( states('sensor.5tb_free_space') | float) | round(2)) }}

    black_bin:
      friendly_name: Black Bin Pickup
      unique_id: black_bin_pickup
      value_template: >
        {{ as_timestamp(state_attr("calendar.allied_recycling_black_bin", "start_time")) | timestamp_custom('%B %-d') }}
      attribute_templates:
        next_collection: >
          {{ ((as_timestamp(state_attr("calendar.allied_recycling_black_bin", "start_time")) | as_datetime | as_local).date() - now().date()).days }}
        icon: >
          mdi:numeric-{{ ((as_timestamp(state_attr("calendar.allied_recycling_black_bin", "start_time")) | as_datetime | as_local).date() - now().date()).days }}

    blue_bin:
      friendly_name: Blue Bin Pickup
      unique_id: blue_bin_pickup
      value_template: >
        {{ as_timestamp(state_attr("calendar.allied_recycling_blue_bin", "start_time")) | timestamp_custom('%B %-d') }}
      attribute_templates:
        next_collection: >
          {{ ((as_timestamp(state_attr("calendar.allied_recycling_blue_bin", "start_time")) | as_datetime | as_local).date() - now().date()).days }}
        icon: >
          mdi:numeric-{{ ((as_timestamp(state_attr("calendar.allied_recycling_blue_bin", "start_time")) | as_datetime | as_local).date() - now().date()).days }}

- platform: formulaone_api

- platform: plex_recently_added
  name: Recently Added Movies # will create sensor.recently_added_movies
  token: !secret plex_token
  host: !secret plex_host
  port: 32400
  section_types:
    - movie

- platform: plex_recently_added
  name: Recently Added TV # will create sensor.recently_added_tv
  token: !secret plex_token
  host: !secret plex_host
  port: 32400
  section_types:
    - show
