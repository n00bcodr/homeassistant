spotify_start:
  alias: 'Spotify: Start Playback'
  sequence:
  - service: spotcast.start
    data:
      device_name: '{{ states(''input_select.speakers_spotify'') }}'
      force_playback: true
  mode: single
  icon: mdi:spotify
add_shopping_list:
  alias: Add Shopping Item
  sequence:
  - service: shopping_list.add_item
    data:
      name: '{{ states(''input_text.shopping_list'') }}'
  mode: single
check_shopping_list:
  alias: Check all Shopping Item
  sequence:
  - service: shopping_list.complete_all
    data: {}
  mode: single
clear_shopping_list:
  alias: Clear all Shopping Item
  sequence:
  - service: shopping_list.clear_completed_items
    data: {}
  mode: single
update_all_phone_sensors:
  alias: Update all phone sensors
  sequence:
  - service: notify.all_phones_android
    data:
      message: command_update_sensors
  - service: notify.all_phones_ios
    data:
      message: request_location_update
  mode: single
  icon: mdi:cellphone-arrow-down
git_push:
  alias: Git Push
  sequence:
  - service: shell_command.git_commit_push
    data: {}
  mode: single
  icon: mdi:git
git_push_ha_version:
  alias: Git Push - Core Update
  sequence:
  - service: shell_command.git_core_update_push
    data: {}
  mode: single
  icon: mdi:git
git_commit_copy:
  alias: Git Commit Message Copy
  sequence:
  - service: input_text.set_value
    data:
      value: "\U0001F4C1 files on {{ now().timestamp() | timestamp_custom('%b %d,
        %Y - %-I:%M %p') }}"
    target:
      entity_id: input_text.git_commit_message
  mode: single
  icon: fas:paste
load_share_url_googletv:
  alias: Load Content from Shared URL - Google TV
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ states(''input_text.ccgtv_share_url'') is match(''http.*primevideo'',
          ignorecase=False) }}'
      sequence:
      - service: androidtv.adb_command
        data:
          entity_id: media_player.google_tv
          command: am start -a android.intent.action.VIEW -n com.amazon.amazonvideo.livingroom/com.amazon.ignition.IgnitionActivity
            -d {{ states('input_text.ccgtv_share_url') }}
    - conditions:
      - condition: template
        value_template: '{{ states(''input_text.ccgtv_share_url'') is match(''http.*netflix.com'',
          ignorecase=False) }}'
      sequence:
      - service: androidtv.adb_command
        data:
          entity_id: media_player.google_tv
          command: am start -n com.netflix.ninja/.MainActivity -a android.intent.action.VIEW
            -d netflix://title/{{ states('input_text.ccgtv_share_url')|regex_findall_index(find='netflix.com(?:.*?)([0-9]+)',
            index=0, ignorecase=False) }} -f 0x10000020 -e "amzn_deeplink_data" "{{
            states('input_text.ccgtv_share_url')|regex_findall_index(find='netflix.com(?:.*?)([0-9]+)',
            index=0, ignorecase=False) }}"
    - conditions:
      - condition: template
        value_template: '{{ states(''input_text.ccgtv_share_url'') is match(''http.*youtu*'',
          ignorecase=False) }}'
      sequence:
      - service: androidtv.adb_command
        data:
          entity_id: media_player.google_tv
          command: am start -a android.intent.action.VIEW -d "{{states('input_text.ccgtv_share_url')
            }}" com.google.android.youtube.tv
    default: []
  mode: single
  icon: mdi:monitor-share
bed_routine_script:
  alias: Bed Routine Script
  sequence:
  - variables:
      action_yes: '{{ ''YES_'' ~ context.id }}'
      action_no: '{{ ''NO_'' ~ context.id }}'
  - service: notify.mobile_app_pixel8pro
    data:
      message: Going to Bed?
      data:
        notification_icon: mdi:bed-clock
        tag: bed
        icon_url: https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/325/bed_1f6cf-fe0f.png?raw=true
        color: blue
        actions:
        - action: '{{ action_yes }}'
          title: 'Yes'
        - action: '{{ action_no }}'
          title: 'No'
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_yes }}'
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_no }}'
    continue_on_timeout: true
    timeout:
      hours: 0
      minutes: 15
      seconds: 0
      milliseconds: 0
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == action_yes }}'
      sequence:
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id:
          - light.light
          - light.shapes
          - light.chandelier
          - light.led_strip
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == action_no }}'
      sequence:
      - stop: ''
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id:
      - light.light
      - light.shapes
      - light.chandelier
      - light.led_strip
  - service: notify.mobile_app_pixel8pro
    data:
      message: clear_notification
      data:
        tag: bed
  mode: single
  icon: mdi:bed-clock
play_ocean_sounds:
  alias: Play Ocean Sounds
  sequence:
  - service: google_assistant_sdk.send_text_command
    data:
      media_player: media_player.pavan_s_nest_hub
      command: Play ocean sounds on Pavan's Nest Hub
  - service: media_player.volume_set
    data:
      volume_level: 0.35
    target:
      entity_id:
      - media_player.pavan_s_nest_hub
  - delay:
      hours: 8
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: media_player.media_stop
    data: {}
    target:
      entity_id: media_player.pavan_s_nest_hub
  mode: single
  icon: mdi:beach
play_forest_sounds:
  alias: Play Forest Sounds
  sequence:
  - service: google_assistant_sdk.send_text_command
    data:
      media_player: media_player.pavan_s_nest_hub
      command: Play forest sounds on Pavan's Nest Hub
  - service: media_player.volume_set
    data:
      volume_level: 0.35
    target:
      entity_id:
      - media_player.pavan_s_nest_hub
  - delay:
      hours: 8
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: media_player.media_stop
    data: {}
    target:
      entity_id:
      - media_player.pavan_s_nest_hub
  mode: single
  icon: mdi:forest-outline
play_river_sounds:
  alias: Play River Sounds
  sequence:
  - service: google_assistant_sdk.send_text_command
    data:
      media_player: media_player.pavan_s_nest_hub
      command: Play river sounds on Pavan's Nest Hub
  - service: media_player.volume_set
    data:
      volume_level: 0.35
    target:
      entity_id: media_player.pavan_s_nest_hub
  - delay:
      hours: 8
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: media_player.media_stop
    data: {}
    target:
      entity_id: media_player.pavan_s_nest_hub
  mode: single
  icon: mdi:waves
play_white_noise:
  alias: Play White Noise
  sequence:
  - service: google_assistant_sdk.send_text_command
    data:
      media_player: media_player.pavan_s_nest_hub
      command: Play white noise on Pavan's Nest Hub
  - service: media_player.volume_set
    data:
      volume_level: 0.35
    target:
      entity_id: media_player.pavan_s_nest_hub
  - delay:
      hours: 8
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: media_player.media_stop
    data: {}
    target:
      entity_id: media_player.pavan_s_nest_hub
  mode: single
  icon: mdi:waveform
play_night_sounds:
  alias: Play Night Sounds
  sequence:
  - service: google_assistant_sdk.send_text_command
    data:
      media_player: media_player.pavan_s_nest_hub
      command: Play Country night sounds on Pavan's Nest Hub
  - service: media_player.volume_set
    data:
      volume_level: 0.35
    target:
      entity_id:
      - media_player.pavan_s_nest_hub
  - delay:
      hours: 8
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: media_player.media_stop
    data: {}
    target:
      entity_id:
      - media_player.pavan_s_nest_hub
  mode: single
  icon: mdi:weather-night
plex_library_refresh:
  alias: Plex Library Refresh
  sequence:
  - service: plex.refresh_library
    data:
      library_name: Movies
  - service: plex.refresh_library
    data:
      library_name: Music
  - service: plex.refresh_library
    data:
      library_name: TV Shows
  mode: single
  icon: mdi:plex
play_spotify_on_phone:
  alias: Play Spotify on phone
  sequence:
  - condition: template
    value_template: '{{ state_attr(''sensor.pixel8pro_bluetooth_connection'', ''connected_paired_devices'')
      | regex_search(''Galaxy Buds|Pixel Buds'', ignorecase=True) }}

      '
  - service: notify.mobile_app_pixel8pro
    data:
      message: command_launch_app
      data:
        package_name: com.spotify.music
    alias: Open App
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - alias: Play Music
    service: notify.mobile_app_pixel8pro
    data:
      message: command_media
      data:
        media_package_name: com.spotify.music
        media_command: play
  mode: single
  icon: mdi:headphones-bluetooth
play_thunderstorm_sounds:
  alias: Play Thunderstorm Sounds
  sequence:
  - service: google_assistant_sdk.send_text_command
    data:
      media_player: media_player.pavan_s_nest_hub
      command: Play thunderstorm sounds on Pavan's Nest Hub
  - service: media_player.volume_set
    data:
      volume_level: 0.35
    target:
      entity_id:
      - media_player.pavan_s_nest_hub
  - delay:
      hours: 8
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: media_player.media_stop
    data: {}
    target:
      entity_id:
      - media_player.pavan_s_nest_hub
  mode: single
  icon: mdi:lightning-bolt-outline
google_tell_me_a_joke:
  alias: Google, Tell me a Joke
  sequence:
  - service: google_assistant_sdk.send_text_command
    data:
      command: tell me a joke
    response_variable: response
  - service: notify.mobile_app_pixel8pro
    metadata: {}
    data:
      message: '{{ response.responses[0].text }}'
      data:
        car_ui: true
        tag: joke
        notification_icon: mdi:emoticon-happy-outline
  mode: single
  icon: mdi:emoticon-happy-outline
delete_camera_files:
  alias: Delete Camera Files
  sequence:
  - variables:
      service_data: "{\n  \"folder\": \"/config/www/doorbell/\"\n  {% if days is defined
        %}, \"time\": \"{{ days * 86400 }}\" {% endif %}\n  {% if only_extensions
        is defined %}, \"only_extensions\": \"{{ only_extensions }}\" {% endif %}\n
        \ {% if except_extensions is defined %}, \"except_extensions\": \"{{ except_extensions
        }}\" {% endif %}\n  {% if except_files is defined %}, \"except_files\": \"{{
        except_files }}\" {% endif %}\n  {% if size is defined %}, \"size\": \"{{
        size }}\" {% endif %}\n  {% if no_warn is defined %}, \"no_warn\": {{ no_warn
        }} {% endif %}\n}\n"
  - service: delete.files_in_folder
    data: '{{ service_data }}'
  mode: single
  fields:
    folder:
      selector:
        text:
      name: Folder
      description: Folder to be scanned for the files
      required: true
      default: /config/www/doorbell/
    days:
      selector:
        number:
          min: 1
          max: 30
      name: Days
      description: Number of days to retain the snapshots
      required: false
    only_extensions:
      selector:
        text:
      name: Only Extensions
      description: List of extensions that are allowed to be deleted (comma separated,
        e.g., ".png,.jpg")
      required: false
    except_extensions:
      selector:
        text:
      name: Except Extensions
      description: List of extensions that are not allowed to be deleted (comma separated,
        e.g., ".zip,.tar")
      required: false
    except_files:
      selector:
        text:
      name: Except Files
      description: List of specific files that are not allowed to be deleted (comma
        separated, e.g., "important_file.zip,backup.tar")
      required: false
    size:
      selector:
        number:
      name: Size (MB)
      description: Maximum folder size in MB
      required: false
    no_warn:
      selector:
        boolean:
      name: No Warnings
      description: Disable warnings in logs
      required: false
      default: false
  icon: mdi:delete-circle-outline
new_script:
  alias: New Script
  sequence:
  - service: google_generative_ai_conversation.generate_content
    data:
      prompt: Very briefly describe what you see in this image from my doorbell camera.
        Your message needs to be short to fit in a phone notification. Don't describe
        stationary objects or buildings.
      image_filename: /config/www/doorbell/2024-06-08_16-24-46.jpg
    response_variable: generated_content
  - service: notify.mobile_app_pixel8pro
    metadata: {}
    data:
      message: '{{ generated_content.text }}'
      data:
        ttl: 0
        tag: doorbell
        entity_id: camera.doorbell_fluent
        notification_icon: mdi:doorbell-video
        activationMode: foreground
        car_ui: true
        push:
          interruption-level: time-sensitive
          category: camera
        actions:
        - action: URI
          title: Open
          uri: /lovelace/camera
          icon: sfsymbols:camera.viewfinder
        - action: package
          title: Package
          icon: sfsymbols:cube.box
        - action: be_there
          title: Will be there
          icon: sfsymbols:person.crop.circle.badge.checkmark
        image: /local/doorbell/2024-06-08_16-24-46.jpg
      title: "Someone's at the front door \U0001F464"
  description: ''
new_scripta:
  alias: New Scripta
  sequence:
  - service: google_generative_ai_conversation.generate_content
    data:
      prompt: Very briefly describe what you see in this image from my doorbell camera.
        Your message needs to be short to fit in a phone notification. Don't describe
        stationary objects or buildings.
      image_filename: /config/www/doorbell/2024-06-08_16-24-46.jpg
    response_variable: generated_content
  - service: notify.mobile_app_pixel8pro
    metadata: {}
    data:
      message: "Someone's at the front door \U0001F464"
      data:
        ttl: 0
        tag: doorbell
        entity_id: camera.doorbell_fluent
        notification_icon: mdi:doorbell-video
        activationMode: foreground
        car_ui: true
        push:
          interruption-level: time-sensitive
          category: camera
        actions:
        - action: URI
          title: Open
          uri: /lovelace/camera
          icon: sfsymbols:camera.viewfinder
        - action: package
          title: Package
          icon: sfsymbols:cube.box
        - action: be_there
          title: Will be there
          icon: sfsymbols:person.crop.circle.badge.checkmark
        image: /local/doorbell/{{camera_snapshot}}
      title: '{{ generated_content.responses[0].text }}'
  description: ''
