button_card_templates:
  header:
    styles:
      card:
      - background-color: '#FFFFFF'
      - box-shadow: none
      - border-radius: 0%
      - padding: 0%
      - color: white
      - font-size: 10px
      - text-shadow: 0px 0px 0px black
      - text-transform: capitalize
      icon:
      - width: 15%
      - margin-top: 0%
      - margin-left: 0%
      - color: white
      name:
      - font-size: 16px
      - color: '#253B56'
      - text-transform: capitalize
      - justify-self: start
      - margin-left: 1%
  logo_button:
    aspect_ratio: 21/9
    color: rgb(255,255,255)
    color_type: card
    hold_action:
      action: none
    layout: vertical
    show_entity_picture: true
    show_label: false
    show_name: false
    show_state: false
    styles:
      card:
      - border-radius: 5px
      - border: solid 0.5px var(--primary-color)
      - box-shadow: none
      - padding: 0px 0px
      - margin: 0px 0px
      entity_picture:
      - width: 55%
      icon:
      - width: 50px
    tap_action:
      action: call-service
  standard_button:
    styles:
      card:
      - font-size: 10px
      icon:
      - width: 30%
      name:
      - font-size: 12px
      - color: '#E0E0E0'
      state:
      - justify-self: start
      - font-size: 10px
      - padding: 0px 5px
      - color: '#E0E0E0'
swipe_nav:
  animate: fade
  enable_mouse_swipe: true
title: Mad House
views:
- badges: []
  cards: []
  dense_section_placement: true
  icon: mdi:view-dashboard-outline
  max_columns: 3
  path: dashboard
  sections:
  - cards:
    - card_mod:
        style: "ha-card {\n  height: 200px !important;\n  border-style: dotted;\n\
          \  border-width: 2px;\n}\n"
      cards:
      - badge_color: ''
        badge_icon: ''
        card_mod:
          style:
            .: "ha-card {\n  border: 0px !important;\n  box-shadow: none !important;\n\
              \  background: none;\n}\n:host {\n  --mush-icon-size: 160px;\n}\n"
            mushroom-shape-icon$: ".shape {\n  position: relative;\n  left: -40px;\n\
              \  top: 60px;\n}\n"
            mushroom-state-info$: ".primary {\n  font-size: 20px !important;\n  position:\
              \ relative;\n  top: -60px;\n  left: -160px;\n  overflow: visible !important;\n\
              }\n.secondary {\n  font-size: 15px !important;\n  position: relative;\n\
              \  overflow: visible !important;\n  top: -50px;\n  left: -160px;\n}\n"
        icon: mdi:face-woman-shimmer-outline
        icon_color: "{% if is_state('media_player.samsung_tv', 'on') or is_state('device_tracker.hilary_s_phone',\
          \ 'home') %}\n  light-blue\n{% else %}\n  disabled\n{% endif %}"
        layout: horizontal
        primary: My Room
        tap_action:
          action: navigate
          navigation_path: /lovelace/hilary
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -190px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
            mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity, 'on')\
              \ %}\n    {% if state_attr(config.entity, 'rgb_color') == none %}\n\
              \      --icon-color: rgb(255,190,137) !important;\n      --shape-color:\
              \ rgb(255,190,137, 0.2 ) !important;\n      --icon-animation: illumination\
              \ 1s infinite;\n       }\n      @keyframes illumination {\n        0%,\
              \ 100% { clip-path: inset(0 0 0 0); }\n        80% { clip-path: polygon(0%\
              \ 99%, 20% 55%, 22% 37%, 39% 20%, 61% 21%, 77% 35%, 79% 57%, 99% 100%);\
              \ }\n      }\n    {% else %}\n      {% set r = state_attr(config.entity,\
              \ 'rgb_color')[0] %}\n      {% set g = state_attr(config.entity, 'rgb_color')[1]\
              \ %}\n      {% set b = state_attr(config.entity, 'rgb_color')[2] %}\n\
              \      --icon-color: rgb( {{r}}, {{g}}, {{b}} ) !important;\n      --shape-color:\
              \ rgba( {{r}}, {{g}}, {{b}}, 0.2 ) !important;\n    {% endif %}\n  {%\
              \ endif %}\n}\n"
        entity: light.bed_lamp
        hold_action:
          action: more-info
        icon: mdi:lamp
        icon_color: disabled
        primary: null
        secondary: null
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -200px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
        entity: switch.heater
        hold_action:
          action: more-info
        icon: '{{ ''mdi:radiator'' if is_state(config.entity, ''on'') else ''mdi:radiator-off''
          }}'
        icon_color: '{{ ''red'' if is_state(config.entity, ''on'') else ''disabled''
          }}'
        primary: null
        secondary: null
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -210px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
            mushroom-shape-icon$: ''
        entity: switch.heating_blanket
        hold_action:
          action: more-info
        icon: phu:elec_blanket
        icon_color: '{{ ''red'' if is_state(config.entity, ''on'') else ''disabled''
          }}'
        primary: null
        secondary: null
        type: custom:mushroom-template-card
      grid_options:
        columns: 6
        rows: 200px
      mode: vertical
      type: custom:stack-in-card
      visibility:
      - condition: user
        users:
        - e07f5c6a76fd4886ad5d945ed22f6d4b
    - card_mod:
        style: "ha-card {\n  height: 200px !important;\n  border-style: dotted;\n\
          \  border-width: 2px;\n}\n"
      cards:
      - badge_color: ''
        badge_icon: ''
        card_mod:
          style:
            .: "ha-card {\n\n  border: 0px !important;\n  box-shadow: none !important;\n\
              \  background: none;\n}\n:host {\n  --mush-icon-size: 160px;\n}\n"
            mushroom-shape-icon$: ".shape {\n  position: relative;\n  left: -40px;\n\
              \  top: 60px;\n}\n"
            mushroom-state-info$: ".primary {\n  font-size: 20px !important;\n  position:\
              \ relative;\n  top: -60px;\n  left: -160px;\n  overflow: visible !important;\n\
              }\n.secondary {\n  font-size: 15px !important;\n  position: relative;\n\
              \  overflow: visible !important;\n  top: -50px;\n  left: -160px;\n}\n"
        icon: mdi:sofa
        icon_color: "{% if is_state('binary_sensor.living_room_presence', 'on') %}\n\
          \  yellow\n{%else%}\n  disabled\n{% endif %}"
        layout: horizontal
        primary: Living Room
        secondary: "\U0001F321\uFE0F {{states.sensor.living_room_temperature.state\
          \ | round }} \xB0C | \U0001F4A7 {{states.sensor.living_room_humidity.state\
          \ | round}} %\n"
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=livingroom
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -190px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
            mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity, 'on')\
              \ %}\n    {% if state_attr(config.entity, 'rgb_color') == none %}\n\
              \      --icon-color: rgb(255,190,137) !important;\n      --shape-color:\
              \ rgb(255,190,137, 0.2 ) !important;\n      --icon-animation: illumination\
              \ 1s infinite;\n       }\n      @keyframes illumination {\n        0%,\
              \ 100% { clip-path: inset(0 0 0 0); }\n        80% { clip-path: polygon(0%\
              \ 99%, 20% 55%, 22% 37%, 39% 20%, 61% 21%, 77% 35%, 79% 57%, 99% 100%);\
              \ }\n      }\n    {% else %}\n      {% set r = state_attr(config.entity,\
              \ 'rgb_color')[0] %}\n      {% set g = state_attr(config.entity, 'rgb_color')[1]\
              \ %}\n      {% set b = state_attr(config.entity, 'rgb_color')[2] %}\n\
              \      --icon-color: rgb( {{r}}, {{g}}, {{b}} ) !important;\n      --shape-color:\
              \ rgba( {{r}}, {{g}}, {{b}}, 0.2 ) !important;\n    {% endif %}\n  {%\
              \ endif %}\n}\n"
        entity: light.living_room_lamp
        hold_action:
          action: more-info
        icon: mdi:lamp
        icon_color: disabled
        primary: null
        secondary: null
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -200px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
            mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity, 'on')\
              \ %}\n    {% if state_attr(config.entity, 'rgb_color') == none %}\n\
              \      --icon-color: rgb(255,190,137) !important;\n      --shape-color:\
              \ rgb(255,190,137, 0.2 ) !important;\n      --icon-animation: illumination\
              \ 1s infinite;\n       }\n      @keyframes illumination {\n        0%,\
              \ 100% { clip-path: inset(0 0 0 0); }\n        80% { clip-path: polygon(0%\
              \ 99%, 20% 55%, 22% 37%, 39% 20%, 61% 21%, 77% 35%, 79% 57%, 99% 100%);\
              \ }\n      }\n    {% else %}\n      {% set r = state_attr(config.entity,\
              \ 'rgb_color')[0] %}\n      {% set g = state_attr(config.entity, 'rgb_color')[1]\
              \ %}\n      {% set b = state_attr(config.entity, 'rgb_color')[2] %}\n\
              \      --icon-color: rgb( {{r}}, {{g}}, {{b}} ) !important;\n      --shape-color:\
              \ rgba( {{r}}, {{g}}, {{b}}, 0.2 ) !important;\n    {% endif %}\n  {%\
              \ endif %}\n}\n"
        entity: light.led_strip
        hold_action:
          action: more-info
        icon: mdi:led-strip-variant
        icon_color: disabled
        primary: null
        secondary: null
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -210px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
            mushroom-shape-icon$: ".shape {\n    {% if not is_state(config.entity,\
              \ 'off') and not is_state(config.entity, 'unavailable') %}\n      --icon-color:\
              \ rgba(var(--rgb-purple)) !important;\n      --shape-color: rgba(var(--rgb-purple),\
              \ 0.2) !important;\n      --icon-animation: refresh 500ms linear infinite;\n\
              \    {% endif %}\n  }\n\n  @keyframes refresh {\n    0% { background:\
              \ linear-gradient(180deg, rgba(var(--rgb-purple), 1.2) 0%, transparent\
              \ 50%, transparent 100%); }\n    25% { background: linear-gradient(180deg,\
              \ transparent 0%, rgba(var(--rgb-purple), 1.2) 25%, transparent 100%);\
              \ }\n    50% { background: linear-gradient(180deg, transparent 0%, rgba(var(--rgb-purple),\
              \ 1.2) 50%, transparent 100%); }\n    75% { background: linear-gradient(180deg,\
              \ transparent 0%, rgba(var(--rgb-purple), 1.2) 75%, transparent 100%);\
              \ }\n    100% { background: linear-gradient(180deg, transparent 0%,\
              \ transparent 50%, rgba(var(--rgb-purple), 1.2) 100%); }\n  }   \n"
        entity: media_player.google_tv_streamer
        hold_action:
          action: more-info
        icon: mdi:monitor
        icon_color: disabled
        primary: null
        secondary: null
        type: custom:mushroom-template-card
      grid_options:
        columns: 6
        rows: 200px
      mode: vertical
      type: custom:stack-in-card
    - card_mod:
        style: "ha-card {\n  height: 200px !important;\n  border-style: dotted;\n\
          \  border-width: 2px;\n}\n"
      cards:
      - badge_color: ''
        badge_icon: ''
        card_mod:
          style:
            .: "ha-card {\n\n  border: 0px !important;\n  box-shadow: none !important;\n\
              \  background: none;\n}\n:host {\n  --mush-icon-size: 160px;\n}\n"
            mushroom-shape-icon$: ".shape {\n  position: relative;\n  left: -40px;\n\
              \  top: 60px;\n}\n"
            mushroom-state-info$: ".primary {\n  font-size: 20px !important;\n  position:\
              \ relative;\n  top: -60px;\n  left: -160px;\n  overflow: visible !important;\n\
              }\n.secondary {\n  font-size: 15px !important;\n  position: relative;\n\
              \  overflow: visible !important;\n  top: -50px;\n  left: -160px;\n}\n"
        icon: mdi:countertop-outline
        icon_color: "{% if is_state('binary_sensor.kitchen_presence', 'on') %}\n \
          \ green\n{%else%}\n  disabled\n{% endif %}"
        layout: horizontal
        primary: Kitchen
        secondary: "\U0001F321\uFE0F {{states.sensor.kitchen_temperature_and_humidity_temperature.state}}\
          \ \xB0C | \U0001F4A7 {{states.sensor.kitchen_temperature_and_humidity_humidity.state\
          \ | round}} %\n"
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=kitchen
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -190px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
            mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity, 'on')\
              \ %}\n    {% if state_attr(config.entity, 'rgb_color') == none %}\n\
              \      --icon-color: rgb(255,190,137) !important;\n      --shape-color:\
              \ rgb(255,190,137, 0.2 ) !important;\n      --icon-animation: illumination\
              \ 1s infinite;\n       }\n      @keyframes illumination {\n        0%,\
              \ 100% { clip-path: inset(0 0 0 0); }\n        80% { clip-path: polygon(0%\
              \ 99%, 20% 55%, 22% 37%, 39% 20%, 61% 21%, 77% 35%, 79% 57%, 99% 100%);\
              \ }\n      }\n    {% else %}\n      {% set r = state_attr(config.entity,\
              \ 'rgb_color')[0] %}\n      {% set g = state_attr(config.entity, 'rgb_color')[1]\
              \ %}\n      {% set b = state_attr(config.entity, 'rgb_color')[2] %}\n\
              \      --icon-color: rgb( {{r}}, {{g}}, {{b}} ) !important;\n      --shape-color:\
              \ rgba( {{r}}, {{g}}, {{b}}, 0.2 ) !important;\n    {% endif %}\n  {%\
              \ endif %}\n}\nha-icon {\n  \n"
        entity: light.kitchen_light
        hold_action:
          action: more-info
        icon: mdi:dome-light
        icon_color: disabled
        primary: null
        secondary: null
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -200px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
            mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity, 'on')\
              \ %}\n    {% if state_attr(config.entity, 'rgb_color') == none %}\n\
              \      --icon-color: rgb(255,190,137) !important;\n      --shape-color:\
              \ rgb(255,190,137, 0.2 ) !important;\n      --icon-animation: illumination\
              \ 1s infinite;\n       }\n      @keyframes illumination {\n        0%,\
              \ 100% { clip-path: inset(0 0 0 0); }\n        80% { clip-path: polygon(0%\
              \ 99%, 20% 55%, 22% 37%, 39% 20%, 61% 21%, 77% 35%, 79% 57%, 99% 100%);\
              \ }\n      }\n    {% else %}\n      {% set r = state_attr(config.entity,\
              \ 'rgb_color')[0] %}\n      {% set g = state_attr(config.entity, 'rgb_color')[1]\
              \ %}\n      {% set b = state_attr(config.entity, 'rgb_color')[2] %}\n\
              \      --icon-color: rgb( {{r}}, {{g}}, {{b}} ) !important;\n      --shape-color:\
              \ rgba( {{r}}, {{g}}, {{b}}, 0.2 ) !important;\n    {% endif %}\n  {%\
              \ endif %}\n}\n"
        entity: light.backyard_lights
        hold_action:
          action: more-info
        icon: mdi:string-lights
        icon_color: disabled
        primary: null
        secondary: null
        type: custom:mushroom-template-card
      - card_mod:
          style: "ha-state-icon {\n  {{'animation: boil 600ms 1000;' if is_state(config.entity,'on')}}\n\
            \  }\n@keyframes boil {\n  0%, 100% { transform: translate({{ range(-20,\
            \ 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{\
            \ range(-15, 15) | random }}deg); }\n  10% { transform: translate({{ range(-20,\
            \ 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{\
            \ range(-15, 15) | random }}deg); clip-path: polygon(0 0, 66% 10%, 67%\
            \ 30%, 88% 52%, 100% 100%, 0 100%); }\n  20% { transform: translate({{\
            \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
            \ rotate({{ range(-15, 15) | random }}deg); }\n  30% { transform: translate({{\
            \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
            \ rotate({{ range(-15, 15) | random }}deg); }\n  40% { transform: translate({{\
            \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
            \ rotate({{ range(-15, 15) | random }}deg); }\n  50% { transform: translate({{\
            \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
            \ rotate({{ range(-15, 15) | random }}deg); }\n  60% { transform: translate({{\
            \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
            \ rotate({{ range(-15, 15) | random }}deg); }\n  70% { transform: translate({{\
            \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
            \ rotate({{ range(-15, 15) | random }}deg); }\n  80% { transform: translate({{\
            \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
            \ rotate({{ range(-15, 15) | random }}deg); }\n  90% { transform: translate({{\
            \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
            \ rotate({{ range(-15, 15) | random }}deg); }\n}\nha-card {\n  width:\
            \ px;\n  margin-left: 65%;\n  top: -210px;\n  background: none;\n}\n:host\
            \ {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n}\nha-card:active\
            \ {\n  transform: rotateX(25deg);\n  transform-origin: center bottom;\n\
            \  transition: 0s;\n}\n"
        entity: switch.kettle
        hold_action:
          action: more-info
        icon: "{{ iif(is_state(config.entity, 'on'), 'mdi:kettle-steam',\n      'mdi:kettle-off')}}\n"
        icon_color: '{{ iif(is_state(config.entity, ''on''), ''red'', ''disabled'')}}'
        primary: null
        secondary: null
        type: custom:mushroom-template-card
      grid_options:
        columns: 6
        rows: 200px
      type: custom:stack-in-card
    - card_mod:
        style: "ha-card {\n  height: 200px !important;\n  border-style: dotted;\n\
          \  border-width: 2px;\n}\n"
      cards:
      - badge_color: ''
        badge_icon: ''
        card_mod:
          style:
            .: "ha-card {\n  border: 0px !important;\n  box-shadow: none !important;\n\
              \  background: none;\n}\n:host {\n  --mush-icon-size: 160px;\n}\n"
            mushroom-shape-icon$: ".shape {\n  position: relative;\n  left: -40px;\n\
              \  top: 60px;\n}\n"
            mushroom-state-info$: ".primary {\n  font-size: 20px !important;\n  position:\
              \ relative;\n  top: -60px;\n  left: -160px;\n  overflow: visible !important;\n\
              }\n.secondary {\n  font-size: 15px !important;\n  position: relative;\n\
              \  overflow: visible !important;\n  top: -50px;\n  left: -160px;\n}\n"
        icon: mdi:key-chain-variant
        icon_color: "{% if is_state('binary_sensor.hallway_motion_occupancy', 'on')\
          \ %}\n  pink\n{%else%}\n  disabled\n{% endif %}"
        layout: horizontal
        primary: Hallway
        secondary: "\U0001F321\uFE0F {{states.sensor.hallway_motion_device_temperature.state}}\
          \ \xB0C"
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=hallway
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -190px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
            mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity, 'on')\
              \ %}\n    {% if state_attr(config.entity, 'rgb_color') == none %}\n\
              \      --icon-color: rgb(255,190,137) !important;\n      --shape-color:\
              \ rgb(255,190,137, 0.2 ) !important;\n      --icon-animation: illumination\
              \ 1s infinite;\n       }\n      @keyframes illumination {\n        0%,\
              \ 100% { clip-path: inset(0 0 0 0); }\n        80% { clip-path: polygon(0%\
              \ 99%, 20% 55%, 22% 37%, 39% 20%, 61% 21%, 77% 35%, 79% 57%, 99% 100%);\
              \ }\n      }\n    {% else %}\n      {% set r = state_attr(config.entity,\
              \ 'rgb_color')[0] %}\n      {% set g = state_attr(config.entity, 'rgb_color')[1]\
              \ %}\n      {% set b = state_attr(config.entity, 'rgb_color')[2] %}\n\
              \      --icon-color: rgb( {{r}}, {{g}}, {{b}} ) !important;\n      --shape-color:\
              \ rgba( {{r}}, {{g}}, {{b}}, 0.2 ) !important;\n    {% endif %}\n  {%\
              \ endif %}\n}\n"
        entity: light.string_lights
        hold_action:
          action: more-info
        icon: mdi:string-lights
        icon_color: disabled
        primary: null
        secondary: null
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -200px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
            mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity, 'on')\
              \ %}\n    {% if state_attr(config.entity, 'rgb_color') == none %}\n\
              \      --icon-color: rgb(255,190,137) !important;\n      --shape-color:\
              \ rgb(255,190,137, 0.2 ) !important;\n      --icon-animation: illumination\
              \ 1s infinite;\n       }\n      @keyframes illumination {\n        0%,\
              \ 100% { clip-path: inset(0 0 0 0); }\n        80% { clip-path: polygon(0%\
              \ 99%, 20% 55%, 22% 37%, 39% 20%, 61% 21%, 77% 35%, 79% 57%, 99% 100%);\
              \ }\n      }\n    {% else %}\n      {% set r = state_attr(config.entity,\
              \ 'rgb_color')[0] %}\n      {% set g = state_attr(config.entity, 'rgb_color')[1]\
              \ %}\n      {% set b = state_attr(config.entity, 'rgb_color')[2] %}\n\
              \      --icon-color: rgb( {{r}}, {{g}}, {{b}} ) !important;\n      --shape-color:\
              \ rgba( {{r}}, {{g}}, {{b}}, 0.2 ) !important;\n    {% endif %}\n  {%\
              \ endif %}\n}\n"
        entity: light.hallway_chandelier
        hold_action:
          action: more-info
        icon: mdi:chandelier
        icon_color: disabled
        primary: null
        secondary: null
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -210px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
            mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity, 'on')\
              \ %}\n    {% if state_attr(config.entity, 'rgb_color') == none %}\n\
              \      --icon-color: rgb(255,190,137) !important;\n      --shape-color:\
              \ rgb(255,190,137, 0.2 ) !important;\n      --icon-animation: illumination\
              \ 1s infinite;\n       }\n      @keyframes illumination {\n        0%,\
              \ 100% { clip-path: inset(0 0 0 0); }\n        80% { clip-path: polygon(0%\
              \ 99%, 20% 55%, 22% 37%, 39% 20%, 61% 21%, 77% 35%, 79% 57%, 99% 100%);\
              \ }\n      }\n    {% else %}\n      {% set r = state_attr(config.entity,\
              \ 'rgb_color')[0] %}\n      {% set g = state_attr(config.entity, 'rgb_color')[1]\
              \ %}\n      {% set b = state_attr(config.entity, 'rgb_color')[2] %}\n\
              \      --icon-color: rgb( {{r}}, {{g}}, {{b}} ) !important;\n      --shape-color:\
              \ rgba( {{r}}, {{g}}, {{b}}, 0.2 ) !important;\n    {% endif %}\n  {%\
              \ endif %}\n}\n"
        entity: camera.doorbell_clear
        hold_action:
          action: more-info
        icon: mdi:doorbell
        icon_color: black
        primary: null
        secondary: null
        tap_action:
          action: more-info
        type: custom:mushroom-template-card
      grid_options:
        columns: 6
        rows: 200px
      mode: vertical
      type: custom:stack-in-card
    - card_mod:
        style: "ha-card {\n  height: 200px !important;\n  border-style: dotted;\n\
          \  border-width: 2px;\n}\n"
      cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 0px !important;\n  box-shadow: none !important;\n\
              \  background: none;\n}\n:host {\n  --mush-icon-size: 160px;\n}\n"
            mushroom-shape-avatar$: ".picture {\n  position: relative;\n  left: -30px;\n\
              \  top: 50px;\n}\n"
            mushroom-state-info$: ".primary {\n  font-size: 20px !important;\n  position:\
              \ relative;\n  top: -60px;\n  left: -160px;\n  overflow: visible !important;\n\
              }\n.secondary {\n  font-size: 13px !important;\n  position: relative;\n\
              \  top: -60px;\n  left: -160px;\n  overflow: visible !important;\n}\n"
        entity: camera.doorbell_fluent
        hold_action:
          action: more-info
        layout: horizontal
        picture: '{{state_attr(''camera.doorbell_snapshot'', ''entity_picture'')}}

          '
        primary: Doorbell
        secondary: '{{relative_time(states.binary_sensor.porch_motion_occupancy.last_changed)
          }} ago

          '
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=doorbell
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -190px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
        entity: binary_sensor.porch_motion_occupancy
        hold_action:
          action: more-info
        primary_info: none
        secondary_info: none
        tap_action:
          action: more-info
        type: custom:mushroom-entity-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -200px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
            mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity, 'on')\
              \ %}\n    {% if state_attr(config.entity, 'rgb_color') == none %}\n\
              \      --icon-color: rgb(255,190,137) !important;\n      --shape-color:\
              \ rgb(255,190,137, 0.2 ) !important;\n      --icon-animation: illumination\
              \ 1s infinite;\n       }\n      @keyframes illumination {\n        0%,\
              \ 100% { clip-path: inset(0 0 0 0); }\n        80% { clip-path: polygon(0%\
              \ 99%, 20% 55%, 22% 37%, 39% 20%, 61% 21%, 77% 35%, 79% 57%, 99% 100%);\
              \ }\n      }\n    {% else %}\n      {% set r = state_attr(config.entity,\
              \ 'rgb_color')[0] %}\n      {% set g = state_attr(config.entity, 'rgb_color')[1]\
              \ %}\n      {% set b = state_attr(config.entity, 'rgb_color')[2] %}\n\
              \      --icon-color: rgb( {{r}}, {{g}}, {{b}} ) !important;\n      --shape-color:\
              \ rgba( {{r}}, {{g}}, {{b}}, 0.2 ) !important;\n    {% endif %}\n  {%\
              \ endif %}\n}\n"
        entity: light.porch_light
        hold_action:
          action: more-info
        icon: mdi:ceiling-light
        icon_color: disabled
        primary: null
        secondary: null
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -210px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
            mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity, 'on')\
              \ %}\n    {% if state_attr(config.entity, 'rgb_color') == none %}\n\
              \      --icon-color: rgb(255,190,137) !important;\n      --shape-color:\
              \ rgb(255,190,137, 0.2 ) !important;\n      --icon-animation: illumination\
              \ 1s infinite;\n       }\n      @keyframes illumination {\n        0%,\
              \ 100% { clip-path: inset(0 0 0 0); }\n        80% { clip-path: polygon(0%\
              \ 99%, 20% 55%, 22% 37%, 39% 20%, 61% 21%, 77% 35%, 79% 57%, 99% 100%);\
              \ }\n      }\n    {% else %}\n      {% set r = state_attr(config.entity,\
              \ 'rgb_color')[0] %}\n      {% set g = state_attr(config.entity, 'rgb_color')[1]\
              \ %}\n      {% set b = state_attr(config.entity, 'rgb_color')[2] %}\n\
              \      --icon-color: rgb( {{r}}, {{g}}, {{b}} ) !important;\n      --shape-color:\
              \ rgba( {{r}}, {{g}}, {{b}}, 0.2 ) !important;\n    {% endif %}\n  {%\
              \ endif %}\n}\n"
        entity: camera.doorbell_clear
        hold_action:
          action: more-info
        icon: mdi:doorbell
        icon_color: black
        primary: null
        secondary: null
        tap_action:
          action: more-info
        type: custom:mushroom-template-card
      grid_options:
        columns: 6
        rows: 200px
      type: custom:stack-in-card
    - card_mod:
        style: "ha-card {\n  height: 200px !important;\n  border-style: dotted;\n\
          \  border-width: 2px;\n}\n"
      cards:
      - badge_color: transparent
        badge_icon: none
        card_mod:
          style:
            .: "ha-card {\n\n  border: 0px !important;\n  box-shadow: none !important;\n\
              \  background: none;\n}\n:host {\n  --mush-icon-size: 160px;\n}\nmushroom-badge-icon:after\
              \ {\n  content: \"{% if is_state('input_boolean.bin', 'on') %}\u2714\
              {% else %}{% set black_next_collection = state_attr('sensor.black_bin',\
              \ 'next_collection') %}{% set blue_next_collection = state_attr('sensor.blue_bin',\
              \ 'next_collection') %}{% if black_next_collection < blue_next_collection\
              \ %}{{ black_next_collection }}{% else %}{{ blue_next_collection }}{%\
              \ endif %}{% endif %}\";\n  background: {% if is_state('input_boolean.bin',\
              \ 'on') %}rgb(var(--rgb-green)){% else %}{% set black_next_collection\
              \ = state_attr('sensor.black_bin', 'next_collection') %}{% set blue_next_collection\
              \ = state_attr('sensor.blue_bin', 'next_collection') %}{% set next_collection\
              \ = black_next_collection if black_next_collection < blue_next_collection\
              \ else blue_next_collection %}{% if next_collection > 5 %}rgb(var(--rgb-green)){%\
              \ elif next_collection > 2 %}rgb(var(--rgb-yellow)){% else %}rgb(var(--rgb-red)){%\
              \ endif %}{% endif %};\n  position: absolute;\n  font-size: 1.3em;\n\
              \  display: flex;\n  justify-content: center;\n  align-items: center;\n\
              \  color: black;\n  font-weight: bolder;\n  border-radius: 50%;\n  width:\
              \ 30px;\n  height: 30px;\n  top: 60px;\n  right: 50px;\n}\n"
            mushroom-shape-avatar$: ".picture {\n  position: relative;\n  left: -30px;\n\
              \  top: 60px;\n  filter: brightness(1) contrast(3);\n}       \n"
            mushroom-state-info$: ".primary {\n  font-size: 20px !important;\n  position:\
              \ relative;\n  top: -60px;\n  left: -160px;\n  overflow: visible !important;\n\
              }\n.secondary {\n  font-size: 12px !important;\n  position: relative;\n\
              \  overflow: visible !important;\n  top: -50px;\n  left: -160px;\n}\n"
        icon: mdi:package-up
        layout: horizontal
        picture: "{% set black_next_collection = state_attr('sensor.black_bin', 'next_collection')\
          \ %}\n  {% set blue_next_collection = state_attr('sensor.blue_bin', 'next_collection')\
          \ %}\n  \n  {% if black_next_collection < blue_next_collection %}\n    /local/images/black_bin.png\n\
          \  {% else %}\n    /local/images/blue_bin.png\n  {% endif %}"
        primary: "{% set black_next_collection = state_attr('sensor.black_bin', 'next_collection')\
          \ %} {% set blue_next_collection = state_attr('sensor.blue_bin', 'next_collection')\
          \ %}\n{% if black_next_collection < blue_next_collection %}\n  Black Bin\n\
          {% else %}\n  Blue Bin\n{% endif %}\n"
        secondary: "{% set black_next_collection = state_attr('sensor.black_bin',\
          \ 'next_collection') %} {% set blue_next_collection = state_attr('sensor.blue_bin',\
          \ 'next_collection') %}\n{% if black_next_collection < blue_next_collection\
          \ %}\n  on {{ states.sensor.black_bin.state}}\n{% else %}\n  on {{ states.sensor.blue_bin.state}}\n\
          {% endif %}\n"
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=bins
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -190px;\n  background:\
              \ none;\n  filter: brightness(1) contrast(3)\n  \n}\n:host {\n  --mush-icon-size:\
              \ 50px;\n  perspective: 900px;\n}\n"
        entity: sensor.blue_bin
        hold_action:
          action: more-info
        picture: /local/images/blue_bin.png
        tap_action:
          action: more-info
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -200px;\n  background:\
              \ none;\n  filter: brightness(2) contrast(3)\n}\n:host {\n  --mush-icon-size:\
              \ 55px;\n  perspective: 900px;\n}\n"
        entity: sensor.black_bin
        hold_action:
          action: more-info
        picture: /local/images/black_bin.png
        tap_action:
          action: more-info
        type: custom:mushroom-template-card
      - badge_color: "{% if is_state(config.entity, 'on') %}\n  green\n{% else %}\n\
          \  red\n{% endif %}      "
        badge_icon: "{% if state_attr(\"sensor.black_bin\", \"next_collection\") <=\
          \ 2 or state_attr(\"sensor.blue_bin\", \"next_collection\") <= 2 %}\n  {%\
          \ if is_state(config.entity, 'on') %}\n    mdi:check\n  {% else %}\n   \
          \ mdi:arrow-down\n  {% endif %}\n{% endif %}  "
        card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -210px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 40px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
        double_tap_action:
          action: toggle
        entity: input_boolean.bin
        hold_action:
          action: more-info
        icon: "{% if is_state(config.entity, 'on') %}\n  fas:trash-can-arrow-up\n\
          {% else %}\n  mdi:delete-off-outline\n{% endif %}"
        icon_color: "{% if is_state(config.entity, 'on') %}\n  {% if state_attr(\"\
          sensor.black_bin\", \"next_collection\") <= 1 %}black{% elif state_attr(\"\
          sensor.blue_bin\", \"next_collection\") <= 1 %}blue{% else %}disabled{%\
          \ endif %}\n{% else %}\n  disabled\n{% endif %}"
        picture: ''
        tap_action:
          action: none
        type: custom:mushroom-template-card
      grid_options:
        columns: 6
        rows: 200px
      type: custom:stack-in-card
    - card_mod:
        style: "ha-card {\n  height: 200px !important;\n  border-style: dotted;\n\
          \  border-width: 2px;\n}\n"
      cards:
      - custom_fields:
          cards:
            card:
              cards:
              - card_mod:
                  style:
                    .: "ha-card {\n  width: px;\n  top: -50px;\n  background: none;\n\
                      }\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
                      }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
                      \ center bottom;\n  transition: 0s;\n}\n"
                    mushroom-shape-icon$: ".shape {\n  {{'--shape-animation: ping\
                      \ 2s 1000;' if is_state ('switch.boiler', 'on')}}\n}\nha-state-icon\
                      \ {\n  {{'animation: boil 600ms 1000;' if is_state('switch.boiler','off')}}\n\
                      }\n@keyframes ping {\n  0% { box-shadow: 0 0 0 0 rgba(var(--rgb-red),\
                      \ 1); }\n  100% { box-shadow: 0 0 5px 15px transparent; }\n\
                      }      \n@keyframes boil {\n  0%, 100% { transform: translate({{\
                      \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random\
                      \ / 10 }}px) rotate({{ range(-15, 15) | random }}deg); }\n \
                      \ 10% { transform: translate({{ range(-20, 20) | random / 10\
                      \ }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{ range(-15,\
                      \ 15) | random }}deg); clip-path: polygon(0 0, 66% 10%, 67%\
                      \ 30%, 88% 52%, 100% 100%, 0 100%); }\n  20% { transform: translate({{\
                      \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random\
                      \ / 10 }}px) rotate({{ range(-15, 15) | random }}deg); }\n \
                      \ 30% { transform: translate({{ range(-20, 20) | random / 10\
                      \ }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{ range(-15,\
                      \ 15) | random }}deg); }\n  40% { transform: translate({{ range(-20,\
                      \ 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
                      \ rotate({{ range(-15, 15) | random }}deg); }\n  50% { transform:\
                      \ translate({{ range(-20, 20) | random / 10 }}px, {{ range(-20,\
                      \ 20) | random / 10 }}px) rotate({{ range(-15, 15) | random\
                      \ }}deg); }\n  60% { transform: translate({{ range(-20, 20)\
                      \ | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
                      \ rotate({{ range(-15, 15) | random }}deg); }\n  70% { transform:\
                      \ translate({{ range(-20, 20) | random / 10 }}px, {{ range(-20,\
                      \ 20) | random / 10 }}px) rotate({{ range(-15, 15) | random\
                      \ }}deg); }\n  80% { transform: translate({{ range(-20, 20)\
                      \ | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
                      \ rotate({{ range(-15, 15) | random }}deg); }\n  90% { transform:\
                      \ translate({{ range(-20, 20) | random / 10 }}px, {{ range(-20,\
                      \ 20) | random / 10 }}px) rotate({{ range(-15, 15) | random\
                      \ }}deg); }\n} \n"
                entity: switch.boiler
                hold_action:
                  action: more-info
                icon: '{{ iif(is_state(''switch.boiler'', ''on''), ''mdi:water-boiler'',
                  ''mdi:water-boiler-off'')}}'
                icon_color: '{{ iif(is_state(''switch.boiler'', ''on''), ''red'',
                  ''disabled'')}}'
                primary: null
                secondary: null
                tap_action:
                  action: toggle
                type: custom:mushroom-template-card
              type: vertical-stack
          switch:
            card:
              badge_color: ''
              badge_icon: ''
              card_mod:
                style:
                  .: "ha-card {\n  border: 0px !important;\n  box-shadow: none !important;\n\
                    \  background: none;\n}\n:host {\n  --mush-icon-size: 160px;\n\
                    }\n"
                  mushroom-shape-icon$: ".shape {\n  position: relative;\n  left:\
                    \ -25px;\n  top: -45px;\n}\n"
              entity: switch.heating
              icon: '{{ iif(is_state(config.entity, ''on''), ''mdi:radiator'', ''mdi:radiator-off'')}}'
              icon_color: '{{ iif(is_state(config.entity, ''on''), ''red'', ''disabled'')}}'
              type: custom:mushroom-template-card
          timer:
            card:
              default: name
              entity: timer.heating
              states:
                active:
                  bar_radius: 10px
                  card_mod:
                    style: "ha-card {\n  background: none;\n  top: -20px;\n  margin-left:\
                      \ -15px;\n  font-size: 30px !important;\n}\n.primary {\n  font-size:\
                      \ 20px !important;\n  font-weight: 1 !important;\n  margin-left:\
                      \ 3px;\n  margin-top: px !important;\n}\n.bar-container {\n\
                      \  padding: 0px !important;\n  margin-top: 5px !important;\n\
                      }\n"
                  entity: timer.heating
                  invert: true
                  mushroom:
                    color: red
                    icon_type: none
                  name: Heating
                  text_width: 0px
                  type: custom:timer-bar-card
                name:
                  card_mod:
                    style:
                      .: "ha-card {\n  background: none;\n}\n"
                      mushroom-state-info$: ".primary {\n  font-size: 20px !important;\n\
                        \  position: relative;\n  top: -25px;\n  overflow: visible\
                        \ !important;\n}\n.secondary {\n  font-size: 12px !important;\n\
                        \  position: relative;\n  top: -15px;\n  overflow: visible\
                        \ !important;\n}\n"
                  entity: switch.heating
                  primary: Heating
                  secondary: 'Turned {{ states.switch.heating.state }} at {{ (as_timestamp(states.switch.heating.last_changed)
                    | timestamp_custom(''%-I:%M %p'')) }}

                    '
                  type: custom:mushroom-template-card
              type: custom:state-switch
        styles:
          grid:
          - grid-template-areas: '"timer cards" "switch cards"'
          - grid-template-columns: 70% 30%
          - grid-template-rows: 95px
          - text-align: left
        tap_action:
          action: call-service
          service: switch.toggle
          service_data:
            entity_id: switch.heating
        type: custom:button-card
      grid_options:
        columns: 6
        rows: 200px
      type: custom:stack-in-card
      visibility:
      - condition: user
        users:
        - e07f5c6a76fd4886ad5d945ed22f6d4b
        - 03fac29e97844166b40187a8b4c09ded
    - card_mod:
        style: "ha-card {\n  height: 200px !important;\n  border-style: dotted;\n\
          \  border-width: 2px;\n}\n"
      cards:
      - custom_fields:
          cards:
            card:
              cards:
              - card_mod:
                  style:
                    .: "ha-card {\n  width: px;\n  top: -40px;\n  background: none;\n\
                      }\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
                      }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
                      \ center bottom;\n  transition: 0s;\n}\n"
                    mushroom-shape-icon$: ".shape {\n  {{'--shape-animation: ping\
                      \ 2s 1000;' if is_state ('switch.boiler', 'on')}}\n}\nha-state-icon\
                      \ {\n  {{'animation: boil 600ms 1000;' if is_state('switch.boiler','off')}}\n\
                      }\n@keyframes ping {\n  0% { box-shadow: 0 0 0 0 rgba(var(--rgb-red),\
                      \ 1); }\n  100% { box-shadow: 0 0 5px 15px transparent; }\n\
                      }      \n@keyframes boil {\n  0%, 100% { transform: translate({{\
                      \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random\
                      \ / 10 }}px) rotate({{ range(-15, 15) | random }}deg); }\n \
                      \ 10% { transform: translate({{ range(-20, 20) | random / 10\
                      \ }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{ range(-15,\
                      \ 15) | random }}deg); clip-path: polygon(0 0, 66% 10%, 67%\
                      \ 30%, 88% 52%, 100% 100%, 0 100%); }\n  20% { transform: translate({{\
                      \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random\
                      \ / 10 }}px) rotate({{ range(-15, 15) | random }}deg); }\n \
                      \ 30% { transform: translate({{ range(-20, 20) | random / 10\
                      \ }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{ range(-15,\
                      \ 15) | random }}deg); }\n  40% { transform: translate({{ range(-20,\
                      \ 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
                      \ rotate({{ range(-15, 15) | random }}deg); }\n  50% { transform:\
                      \ translate({{ range(-20, 20) | random / 10 }}px, {{ range(-20,\
                      \ 20) | random / 10 }}px) rotate({{ range(-15, 15) | random\
                      \ }}deg); }\n  60% { transform: translate({{ range(-20, 20)\
                      \ | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
                      \ rotate({{ range(-15, 15) | random }}deg); }\n  70% { transform:\
                      \ translate({{ range(-20, 20) | random / 10 }}px, {{ range(-20,\
                      \ 20) | random / 10 }}px) rotate({{ range(-15, 15) | random\
                      \ }}deg); }\n  80% { transform: translate({{ range(-20, 20)\
                      \ | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
                      \ rotate({{ range(-15, 15) | random }}deg); }\n  90% { transform:\
                      \ translate({{ range(-20, 20) | random / 10 }}px, {{ range(-20,\
                      \ 20) | random / 10 }}px) rotate({{ range(-15, 15) | random\
                      \ }}deg); }\n} \n"
                entity: switch.boiler
                hold_action:
                  action: more-info
                icon: '{{ iif(is_state(''switch.boiler'', ''on''), ''mdi:water-boiler'',
                  ''mdi:water-boiler-off'')}}'
                icon_color: '{{ iif(is_state(''switch.boiler'', ''on''), ''red'',
                  ''disabled'')}}'
                primary: null
                secondary: null
                tap_action:
                  action: toggle
                type: custom:mushroom-template-card
              - card_mod:
                  style:
                    .: "ha-card {\n  width: px;\n  top: -50px;\n  background: none;\n\
                      }\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
                      }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
                      \ center bottom;\n  transition: 0s;\n}\nha-state-icon {\n  {%\
                      \ if is_state(config.entity, 'heat_cool') %}\n    animation:\
                      \ fire 1.5s infinite;\n    transform-origin: 50% 85%;\n  {%\
                      \ endif %}\n}\n@keyframes fire {\n  0% { transform: rotate({{range(-20,\
                      \ 20) | random / 10}}deg) scaleY({{range(9, 12) | random / 10}});\
                      \ color: rgb(var(--rgb-red)); opacity: {{range(7, 10) | random\
                      \ / 10}}; }\n  5% { transform: rotate({{range(-20, 20) | random\
                      \ / 10}}deg) scaleY({{range(9, 12) | random / 10}}); color:\
                      \ rgb(var(--rgb-deep-orange)); opacity: {{range(7, 10) | random\
                      \ / 10}}; }\n  10% { transform: rotate({{range(-20, 20) | random\
                      \ / 10}}deg) scaleY({{range(9, 12) | random / 10}}); color:\
                      \ rgb(var(--rgb-red)); opacity: {{range(7, 10) | random / 10}};\
                      \ }\n  15% { transform: rotate({{range(-20, 20) | random / 10}}deg)\
                      \ scaleY({{range(9, 12) | random / 10}}); color: rgb(var(--rgb-deep-orange));\
                      \ opacity: {{range(7, 10) | random / 10}}; }\n  20% { transform:\
                      \ rotate({{range(-20, 20) | random / 10}}deg) scaleY({{range(9,\
                      \ 12) | random / 10}}); color: rgb(var(--rgb-deep-orange));\
                      \ opacity: {{range(7, 10) | random / 10}}; }\n  25% { transform:\
                      \ rotate({{range(-20, 20) | random / 10}}deg) scaleY({{range(9,\
                      \ 12) | random / 10}}); color: rgb(var(--rgb-red)); opacity:\
                      \ {{range(7, 10) | random / 10}}; }\n  30% { transform: rotate({{range(-20,\
                      \ 20) | random / 10}}deg) scaleY({{range(9, 12) | random / 10}});\
                      \ color: rgb(var(--rgb-red)); opacity: {{range(7, 10) | random\
                      \ / 10}}; }\n  35% { transform: rotate({{range(-20, 20) | random\
                      \ / 10}}deg) scaleY({{range(9, 12) | random / 10}}); color:\
                      \ rgb(var(--rgb-deep-orange)); opacity: {{range(7, 10) | random\
                      \ / 10}}; }\n  40% { transform: rotate({{range(-20, 20) | random\
                      \ / 10}}deg) scaleY({{range(9, 12) | random / 10}}); color:\
                      \ rgb(var(--rgb-red)); opacity: {{range(7, 10) | random / 10}};\
                      \ }\n  45% { transform: rotate({{range(-20, 20) | random / 10}}deg)\
                      \ scaleY({{range(9, 12) | random / 10}}); color: rgb(var(--rgb-deep-orange));\
                      \ opacity: {{range(7, 10) | random / 10}}; }\n  50% { transform:\
                      \ rotate({{range(-20, 20) | random / 10}}deg) scaleY({{range(9,\
                      \ 12) | random / 10}}); color: rgb(var(--rgb-deep-orange));\
                      \ opacity: {{range(7, 10) | random / 10}}; }\n  55% { transform:\
                      \ rotate({{range(-20, 20) | random / 10}}deg) scaleY({{range(9,\
                      \ 12) | random / 10}}); color: rgb(var(--rgb-red)); opacity:\
                      \ {{range(7, 10) | random / 10}}; }\n  60% { transform: rotate({{range(-20,\
                      \ 20) | random / 10}}deg) scaleY({{range(9, 12) | random / 10}});\
                      \ color: rgb(var(--rgb-deep-orange)); opacity: {{range(7, 10)\
                      \ | random / 10}}; }\n  65% { transform: rotate({{range(-20,\
                      \ 20) | random / 10}}deg) scaleY({{range(9, 12) | random / 10}});\
                      \ color: rgb(var(--rgb-red)); opacity: {{range(7, 10) | random\
                      \ / 10}}; }\n  70% { transform: rotate({{range(-20, 20) | random\
                      \ / 10}}deg) scaleY({{range(9, 12) | random / 10}}); color:\
                      \ rgb(var(--rgb-deep-orange)); opacity: {{range(7, 10) | random\
                      \ / 10}}; }\n  75% { transform: rotate({{range(-20, 20) | random\
                      \ / 10}}deg) scaleY({{range(9, 12) | random / 10}}); color:\
                      \ rgb(var(--rgb-deep-orange)); opacity: {{range(7, 10) | random\
                      \ / 10}}; }\n  80% { transform: rotate({{range(-20, 20) | random\
                      \ / 10}}deg) scaleY({{range(9, 12) | random / 10}}); color:\
                      \ rgb(var(--rgb-red)); opacity: {{range(7, 10) | random / 10}};\
                      \ }\n  85% { transform: rotate({{range(-20, 20) | random / 10}}deg)\
                      \ scaleY({{range(9, 12) | random / 10}}); color: rgb(var(--rgb-red));\
                      \ opacity: {{range(7, 10) | random / 10}}; }\n  90% { transform:\
                      \ rotate({{range(-20, 20) | random / 10}}deg) scaleY({{range(9,\
                      \ 12) | random / 10}}); color: rgb(var(--rgb-deep-orange));\
                      \ opacity: {{range(7, 10) | random / 10}}; }\n  95% { transform:\
                      \ rotate({{range(-20, 20) | random / 10}}deg) scaleY({{range(9,\
                      \ 12) | random / 10}}); color: rgb(var(--rgb-red)); opacity:\
                      \ {{range(7, 10) | random / 10}}; }\n  100% { transform: rotate({{range(-20,\
                      \ 20) | random / 10}}deg) scaleY({{range(9, 12) | random / 10}});\
                      \ color: rgb(var(--rgb-deep-orange)); opacity: {{range(7, 10)\
                      \ | random / 10}}; }\n}\n"
                entity: climate.heater
                hold_action:
                  action: more-info
                icon: '{{ iif(is_state(''climate.heater'', ''heat_cool''), ''mdi:fire'',
                  ''mdi:fire-off'')}}

                  '
                icon_color: '{{ iif(is_state(''climate.heater'', ''heat_cool''), ''red'',
                  ''disabled'')}}

                  '
                primary: null
                secondary: null
                tap_action:
                  action: toggle
                type: custom:mushroom-template-card
              - card_mod:
                  style:
                    .: "ha-card {\n  width: px;\n  top: -60px;\n  background: none;\n\
                      }\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
                      }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
                      \ center bottom;\n  transition: 0s;\n}\n"
                entity: switch.bed_warmer
                hold_action:
                  action: more-info
                icon: phu:elec_blanket
                icon_color: '{{ iif(is_state(config.entity, ''on''), ''red'', ''disabled'')}}

                  '
                primary: null
                secondary: null
                tap_action:
                  action: toggle
                type: custom:mushroom-template-card
              type: vertical-stack
          switch:
            card:
              badge_color: ''
              badge_icon: ''
              card_mod:
                style:
                  .: "ha-card {\n  border: 0px !important;\n  box-shadow: none !important;\n\
                    \  background: none;\n}\n:host {\n  --mush-icon-size: 160px;\n\
                    }\n"
                  mushroom-shape-icon$: ".shape {\n  position: relative;\n  left:\
                    \ -25px;\n  top: -45px;\n}\n"
              entity: switch.heating
              icon: '{{ iif(is_state(config.entity, ''on''), ''mdi:radiator'', ''mdi:radiator-off'')}}'
              icon_color: '{{ iif(is_state(config.entity, ''on''), ''red'', ''disabled'')}}'
              type: custom:mushroom-template-card
          timer:
            card:
              default: name
              entity: timer.heating
              states:
                active:
                  bar_radius: 10px
                  card_mod:
                    style: "ha-card {\n  background: none;\n  top: -20px;\n  margin-left:\
                      \ -15px;\n  font-size: 30px !important;\n}\n.primary {\n  font-size:\
                      \ 20px !important;\n  font-weight: 1 !important;\n  margin-left:\
                      \ 3px;\n  margin-top: px !important;\n}\n.bar-container {\n\
                      \  padding: 0px !important;\n  margin-top: 5px !important;\n\
                      }\n"
                  entity: timer.heating
                  invert: true
                  mushroom:
                    color: red
                    icon_type: none
                  name: Heating
                  text_width: 0px
                  type: custom:timer-bar-card
                name:
                  card_mod:
                    style:
                      .: "ha-card {\n  background: none;\n}\n"
                      mushroom-state-info$: ".primary {\n  font-size: 20px !important;\n\
                        \  position: relative;\n  top: -25px;\n  overflow: visible\
                        \ !important;\n}\n.secondary {\n  font-size: 12px !important;\n\
                        \  position: relative;\n  top: -15px;\n  overflow: visible\
                        \ !important;\n}\n"
                  entity: switch.heating
                  primary: Heating
                  secondary: 'Turned {{ states.switch.heating.state }} at {{ (as_timestamp(states.switch.heating.last_changed)
                    | timestamp_custom(''%-I:%M %p'')) }}

                    '
                  type: custom:mushroom-template-card
              type: custom:state-switch
        styles:
          grid:
          - grid-template-areas: '"timer cards" "switch cards"'
          - grid-template-columns: 70% 30%
          - grid-template-rows: 95px
          - text-align: left
        tap_action:
          action: call-service
          service: switch.toggle
          service_data:
            entity_id: switch.heating
        type: custom:button-card
      grid_options:
        columns: 6
        rows: 200px
      type: custom:stack-in-card
      visibility:
      - condition: user
        users:
        - 74f7e2ffd3594037b1a2fc4de82d9fea
    - card_mod:
        style: "ha-card {\n  height: 200px !important;\n  border-style: dotted;\n\
          \  border-width: 2px;\n}\n"
      cards:
      - badge_color: ''
        badge_icon: ''
        card_mod:
          style:
            .: "ha-card {\n  border: 0px !important;\n  box-shadow: none !important;\n\
              \  background: none;\n}\nha-state-icon {\n  {% if is_state('sensor.washing_machine_state',\
              \ 'Washing') %}\n  animation: shake-washing 400ms ease-in-out infinite,\
              \ drum-washing 2s ease 1000;\n  transform-origin: 50% 110%;\n  {% elif\
              \ is_state('sensor.washing_machine_state', 'Spinning') %}\n  animation:\
              \ spin 2s linear 1000;\n  {% elif is_state('sensor.washing_machine_state',\
              \ 'Rinsing') %}\n  animation: bounce 1.5s ease-in-out infinite, wash\
              \ 1s ease-in-out 1000;\n  transform-origin: 50% 75%;\n  {% elif is_state('sensor.washing_machine_state',\
              \ 'Drying') %}\n  animation: shake-drying 400ms ease-in-out infinite,\
              \ drum-drying 1s 1000;\n  transform-origin: 50% 65%;\n  {% elif is_state('sensor.washing_machine_state',\
              \ 'Cycle Complete') %}\n  animation: pulse 2s ease-in-out 1000;\n  {%\
              \ endif %}\n}\n@keyframes shake-washing {\n  0%, 100% { transform: translate(0,\
              \ 0) rotate(0); }\n  20% { transform: translate(0.4px, -0.4px) rotate(-4deg);\
              \ }\n  40% { transform: translate(-0.4px, 0.4px) rotate(4deg); }\n \
              \ 60% { transform: translate(0.4px, 0.4px) rotate(-4deg); }\n  80% {\
              \ transform: translate(-0.4px, -0.4px) rotate(4deg); }\n}\n@keyframes\
              \ drum-washing {\n  50% { clip-path: polygon(0 0, 0 100%, 35% 100%,\
              \ 34% 68%, 60% 41%, 71% 56%, 65% 74%, 47% 79%, 32% 69%, 35% 100%, 100%\
              \ 100%, 100% 0); }\n}\n@keyframes bounce {\n  0%, 20%, 50%, 80%, 100%\
              \ { transform: translateY(0); }\n  40% { transform: translateY(-1.2px)\
              \ rotate(5deg); }\n  60% { transform: translateY(-1.1px) rotate(-4deg);\
              \ }\n}\n\n@keyframes wash {\n  50% { clip-path: polygon(0 0, 0 100%,\
              \ 35% 100%, 36% 74%, 31% 43%, 61% 40%, 71% 69%, 62% 78%, 36% 73%, 35%\
              \ 100%, 100% 100%, 100% 0); }\n}\n@keyframes shake-drying {\n  0%, 100%\
              \ { transform: rotate(4deg); }\n  50% { transform: rotate(-4deg); }\n\
              }\n@keyframes drum-drying {\n  50% { clip-path: polygon(0 0, 0 100%,\
              \ 35% 100%, 36% 74%, 31% 43%, 61% 40%, 71% 69%, 62% 78%, 36% 73%, 35%\
              \ 100%, 100% 100%, 100% 0); }\n}\n:host {\n  --mush-icon-size: 160px;\n\
              }\n"
            mushroom-shape-icon$: ".shape {\n  position: relative;\n  left: -40px;\n\
              \  top: 60px;\n}\n"
            mushroom-state-info$: ".primary {\n  font-size: 20px !important;\n  position:\
              \ relative;\n  top: -60px;\n  left: -160px;\n  overflow: visible !important;\n\
              }\n.secondary {\n  font-size: 18px !important;\n  position: relative;\n\
              \  overflow: visible !important;\n  top: -50px;\n  left: -160px;\n}\n"
        icon: '{{ states.sensor.washing_machine_state.attributes.icon }}'
        icon_color: "{{ iif(is_state('sensor.washing_machine_state', 'Idle'), 'blue-grey',\n\
          \  iif(is_state('sensor.washing_machine_state', 'Washing'), 'cyan',\n  iif(is_state('sensor.washing_machine_state',\
          \ 'Spinning'), 'purple',\n  iif(is_state('sensor.washing_machine_state',\
          \ 'Rinsing'), 'blue',\n  iif(is_state('sensor.washing_machine_state', 'Drying'),\
          \ 'deep-orange',\n  iif(is_state('sensor.washing_machine_state', 'Cycle\
          \ Complete'), 'green', 'grey')))))) }}"
        layout: horizontal
        primary: Washing Machine
        secondary: '{{states.sensor.washing_machine_state.state}}'
        tap_action:
          action: navigate
          navigation_path: /lovelace/utilities
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 40%;\n  top: -120px;\n  background:\
              \ none;\n}   \n"
            mushroom-state-info$: ".primary {\n  {{ 'display: none;' if is_state('sensor.bob_duration',\
              \ 'unavailable') or is_state('sensor.washing_machine_state', 'Cycle\
              \ Complete') or is_state('sensor.washing_machine_state', 'Idle') else\
              \ '' }}\n  font-size: 20px !important;\n}\n.secondary {\n  {{ 'display:\
              \ none;' if is_state('sensor.bob_duration', 'unavailable') or is_state('sensor.washing_machine_state',\
              \ 'Cycle Complete') or is_state('sensor.washing_machine_state', 'Idle')\
              \ else '' }}\n  font-size: 13px !important;\n}\n"
        entity: sensor.bob_duration
        icon: none
        icon_color: none
        name: Duration
        primary_info: state
        secondary_info: name
        type: custom:mushroom-entity-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 40%;\n  top: -130px;\n  background:\
              \ none;\n}            \n"
            mushroom-state-info$: ".primary {\n  {{ 'display: none;' if is_state('sensor.bob_duration',\
              \ 'unavailable') or is_state('sensor.washing_machine_state', 'Cycle\
              \ Complete') or is_state('sensor.washing_machine_state', 'Idle') else\
              \ '' }}\n  font-size: 20px !important;\n}\n.secondary {\n  {{ 'display:\
              \ none;' if is_state('sensor.bob_duration', 'unavailable') or is_state('sensor.washing_machine_state',\
              \ 'Cycle Complete') or is_state('sensor.washing_machine_state', 'Idle')\
              \ else '' }}\n  font-size: 13px !important;\n}\n"
        entity: sensor.bob_remaining
        icon: none
        icon_color: none
        name: Remaining
        primary_info: state
        secondary_info: name
        type: custom:mushroom-entity-card
      grid_options:
        columns: 6
        rows: 200px
      type: custom:stack-in-card
    - card_mod:
        style: "ha-card {\n  height: 200px !important;\n  border-style: dotted;\n\
          \  border-width: 2px;\n}\n"
      cards:
      - badge_color: ''
        badge_icon: ''
        card_mod:
          style:
            .: "ha-card {\n  border: 0px !important;\n  box-shadow: none !important;\n\
              \  background: none;\n}\n:host {\n  --mush-icon-size: 160px;\n}\n"
            mushroom-shape-icon$: ".shape {\n  position: relative;\n  left: -40px;\n\
              \  top: 60px;\n}\n"
            mushroom-state-info$: ".primary {\n  font-size: 20px !important;\n  position:\
              \ relative;\n  top: -60px;\n  left: -160px;\n  overflow: visible !important;\n\
              }\n.secondary {\n  font-size: 15px !important;\n  position: relative;\n\
              \  overflow: visible !important;\n  top: -50px;\n  left: -160px;\n}\n"
        icon: mdi:skull
        icon_color: "{% if is_state('binary_sensor.den_motion_occupancy', 'on') %}\n\
          \  light-blue\n{%else%}\n  disabled\n{% endif %}"
        layout: horizontal
        primary: Den
        secondary: "\U0001F321\uFE0F {{states.sensor.den_temperature.state |round}}\
          \ \xB0C | \U0001F4A7 {{states.sensor.den_humidity.state | round}} %\n"
        tap_action:
          action: navigate
          navigation_path: /lovelace/den
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -190px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
            mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity, 'on')\
              \ %}\n    {% if state_attr(config.entity, 'rgb_color') == none %}\n\
              \      --icon-color: rgb(255,190,137) !important;\n      --shape-color:\
              \ rgb(255,190,137, 0.2 ) !important;\n      --icon-animation: illumination\
              \ 1s infinite;\n       }\n      @keyframes illumination {\n        0%,\
              \ 100% { clip-path: inset(0 0 0 0); }\n        80% { clip-path: polygon(0%\
              \ 99%, 20% 55%, 22% 37%, 39% 20%, 61% 21%, 77% 35%, 79% 57%, 99% 100%);\
              \ }\n      }\n    {% else %}\n      {% set r = state_attr(config.entity,\
              \ 'rgb_color')[0] %}\n      {% set g = state_attr(config.entity, 'rgb_color')[1]\
              \ %}\n      {% set b = state_attr(config.entity, 'rgb_color')[2] %}\n\
              \      --icon-color: rgb( {{r}}, {{g}}, {{b}} ) !important;\n      --shape-color:\
              \ rgba( {{r}}, {{g}}, {{b}}, 0.2 ) !important;\n    {% endif %}\n  {%\
              \ endif %}\n}\n"
        entity: light.light
        hold_action:
          action: more-info
        icon: mdi:lightbulb-on
        icon_color: disabled
        primary: null
        secondary: null
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -200px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
            mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity, 'on')\
              \ %}\n    {% if state_attr(config.entity, 'rgb_color') == none %}\n\
              \      --icon-color: rgb(255,190,137) !important;\n      --shape-color:\
              \ rgb(255,190,137, 0.2 ) !important;\n      --icon-animation: illumination\
              \ 1s infinite;\n       }\n      @keyframes illumination {\n        0%,\
              \ 100% { clip-path: inset(0 0 0 0); }\n        80% { clip-path: polygon(0%\
              \ 99%, 20% 55%, 22% 37%, 39% 20%, 61% 21%, 77% 35%, 79% 57%, 99% 100%);\
              \ }\n      }\n    {% else %}\n      {% set r = state_attr(config.entity,\
              \ 'rgb_color')[0] %}\n      {% set g = state_attr(config.entity, 'rgb_color')[1]\
              \ %}\n      {% set b = state_attr(config.entity, 'rgb_color')[2] %}\n\
              \      --icon-color: rgb( {{r}}, {{g}}, {{b}} ) !important;\n      --shape-color:\
              \ rgba( {{r}}, {{g}}, {{b}}, 0.2 ) !important;\n    {% endif %}\n  {%\
              \ endif %}\n}\n"
        entity: light.shapes
        hold_action:
          action: more-info
        icon: mdi:hexagon-multiple
        icon_color: disabled
        primary: null
        secondary: null
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -210px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
            mushroom-shape-icon$: ''
        entity: switch.workstation
        hold_action:
          action: more-info
        icon: mdi:desk
        icon_color: "{% if is_state(config.entity, 'on') %}\n  deep-orange\n{%else%}\n\
          \  disabled\n{% endif %}\n"
        primary: null
        secondary: null
        type: custom:mushroom-template-card
      grid_options:
        columns: 6
        rows: 200px
      mode: vertical
      type: custom:stack-in-card
      visibility:
      - condition: user
        users:
        - 74f7e2ffd3594037b1a2fc4de82d9fea
    - card_mod:
        style: "ha-card {\n  height: 200px !important;\n  border-style: dotted;\n\
          \  border-width: 2px;\n}\n"
      cards:
      - badge_color: ''
        badge_icon: ''
        card_mod:
          style:
            .: "ha-card {\n\n  border: 0px !important;\n  box-shadow: none !important;\n\
              \  background: none;\n}\n:host {\n  --mush-icon-size: 160px;\n}\n"
            mushroom-shape-icon$: ".shape {\n  position: relative;\n  left: -40px;\n\
              \  top: 60px;\n}\n"
            mushroom-state-info$: ".primary {\n  font-size: 20px !important;\n  position:\
              \ relative;\n  top: -60px;\n  left: -160px;\n  overflow: visible !important;\n\
              }\n.secondary {\n  font-size: 15px !important;\n  position: relative;\n\
              \  overflow: visible !important;\n  top: -50px;\n  left: -160px;\n}\n"
        icon: mdi:tent
        icon_color: "{% if is_state('light.backyard_lights', 'on') or is_state('light.alleyway_lights',\
          \ 'on') or is_state('binary_sensor.back_door_contact', 'on') %}\n  purple\n\
          {%else%}\n  disabled\n{% endif %}"
        layout: horizontal
        primary: Backyard
        secondary: "\U0001F321\uFE0F {{states.sensor.hygrometer_temperature.state}}\
          \ \xB0C | \U0001F4A7 {{states.sensor.hygrometer_humidity.state}} %\n"
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=kitchen
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -190px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
            mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity, 'on')\
              \ %}\n    {% if state_attr(config.entity, 'rgb_color') == none %}\n\
              \      --icon-color: rgb(255,190,137) !important;\n      --shape-color:\
              \ rgb(255,190,137, 0.2 ) !important;\n      --icon-animation: illumination\
              \ 1s infinite;\n       }\n      @keyframes illumination {\n        0%,\
              \ 100% { clip-path: inset(0 0 0 0); }\n        80% { clip-path: polygon(0%\
              \ 99%, 20% 55%, 22% 37%, 39% 20%, 61% 21%, 77% 35%, 79% 57%, 99% 100%);\
              \ }\n      }\n    {% else %}\n      {% set r = state_attr(config.entity,\
              \ 'rgb_color')[0] %}\n      {% set g = state_attr(config.entity, 'rgb_color')[1]\
              \ %}\n      {% set b = state_attr(config.entity, 'rgb_color')[2] %}\n\
              \      --icon-color: rgb( {{r}}, {{g}}, {{b}} ) !important;\n      --shape-color:\
              \ rgba( {{r}}, {{g}}, {{b}}, 0.2 ) !important;\n    {% endif %}\n  {%\
              \ endif %}\n} \n"
        entity: light.backyard_lights
        hold_action:
          action: more-info
        icon: mdi:string-lights
        icon_color: disabled
        primary: null
        secondary: null
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -200px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
            mushroom-shape-icon$: ".shape {\n  {% if is_state(config.entity, 'on')\
              \ %}\n    {% if state_attr(config.entity, 'rgb_color') == none %}\n\
              \      --icon-color: rgb(255,190,137) !important;\n      --shape-color:\
              \ rgb(255,190,137, 0.2 ) !important;\n      --icon-animation: illumination\
              \ 1s infinite;\n       }\n      @keyframes illumination {\n        0%,\
              \ 100% { clip-path: inset(0 0 0 0); }\n        80% { clip-path: polygon(0%\
              \ 99%, 20% 55%, 22% 37%, 39% 20%, 61% 21%, 77% 35%, 79% 57%, 99% 100%);\
              \ }\n      }\n    {% else %}\n      {% set r = state_attr(config.entity,\
              \ 'rgb_color')[0] %}\n      {% set g = state_attr(config.entity, 'rgb_color')[1]\
              \ %}\n      {% set b = state_attr(config.entity, 'rgb_color')[2] %}\n\
              \      --icon-color: rgb( {{r}}, {{g}}, {{b}} ) !important;\n      --shape-color:\
              \ rgba( {{r}}, {{g}}, {{b}}, 0.2 ) !important;\n    {% endif %}\n  {%\
              \ endif %}\n}\n"
        entity: light.alleyway_lights
        hold_action:
          action: more-info
        icon: mdi:light-recessed
        icon_color: disabled
        primary: null
        secondary: null
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -210px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
        entity: binary_sensor.back_door_contact
        hold_action:
          action: more-info
        primary_info: none
        secondary_info: none
        tap_action:
          action: more-info
        type: custom:mushroom-entity-card
      grid_options:
        columns: 6
        rows: 200px
      type: custom:stack-in-card
    - card_mod:
        style: "ha-card {\n  height: 200px !important;\n  border-style: dotted;\n\
          \  border-width: 2px;\n}\n"
      cards:
      - card_mod:
          style: "ha-card {\n  height: 200px !important;\n}\n"
        cards:
        - card_mod:
            style:
              mushroom-state-info$: ".primary {\n  font-size: 20px !important;\n \
                \ position: relative;\n  overflow: visible !important;\n}\n.secondary\
                \ {\n  font-size: 13px !important;\n  position: relative;\n  overflow:\
                \ visible !important;\n  top: 10px;\n}\n"
          entity: ''
          primary: Internet Speed
          secondary: "\u2B06\uFE0F {{states.sensor.speedtest_download.state}} Mbps\
            \ |  \u2B07\uFE0F {{states.sensor.speedtest_upload.state}} Mbps\n"
          tap_action:
            action: call-service
            data:
              addon: 6b87c29e_speedtest_addon
            service: hassio.addon_start
            target: {}
          type: custom:mushroom-template-card
        - entities:
          - color: '#f24d1b'
            entity: sensor.speedtest_download
          hours_to_show: 24
          line_width: 5
          show:
            fill: fade
            icon: false
            legend: false
            name: false
            state: false
          type: custom:mini-graph-card
        - entities:
          - color: '#0960eb'
            entity: sensor.speedtest_upload
          hours_to_show: 24
          line_width: 5
          show:
            fill: fade
            icon: false
            legend: false
            name: false
            state: false
          type: custom:mini-graph-card
        mode: vertical
        type: custom:stack-in-card
      - card_mod:
          style: "ha-card {\n  height: 200px !important;\n}\n"
        cards:
        - card_mod:
            style: "ha-card { \npadding: 20px !important; height: 45px !important;\
              \ top: 5px; }\n"
          double_tap_action:
            action: none
          entity: sensor.system_monitor_disk_use
          fill_container: false
          hold_action:
            action: none
          icon: mdi:harddisk
          icon_color: "{% set value = states('sensor.system_monitor_disk_use_percent')\
            \ | float %} {% if value >= 0.00 and value <= 50.99 %}\n  green\n{% elif\
            \ value >= 51 and value <= 70.99 %}\n  orange\n{% elif value >= 71.00\
            \ and value <= 100 %}\n  red\n{% endif %}"
          multiline_secondary: true
          primary: '{{states(''sensor.system_monitor_disk_use'')}} GB'
          secondary: Hard Disk
          tap_action:
            action: more-info
          type: custom:mushroom-template-card
        - card_mod:
            style: "ha-card { \npadding: 20px !important; height: 40px !important;\
              \  }\n"
          double_tap_action:
            action: none
          entity: sensor.system_monitor_disk_use_media_1tb
          fill_container: false
          hold_action:
            action: none
          icon: phu:seagate-ssd
          icon_color: "{% set value = states('sensor.system_monitor_disk_usage_media_1tb')\
            \ | float %} {% if value >= 0.00 and value <= 50.99 %}\n  green\n{% elif\
            \ value >= 51 and value <= 70.99 %}\n  orange\n{% elif value >= 71.00\
            \ and value <= 100 %}\n  red\n{% endif %}"
          multiline_secondary: true
          primary: '{{states(''sensor.system_monitor_disk_use_media_1tb'')}} GB'
          secondary: 1 TB
          tap_action:
            action: more-info
          type: custom:mushroom-template-card
        - card_mod:
            style: "ha-card { \npadding: 20px !important; height: 40px !important;\
              \  }\n"
          double_tap_action:
            action: none
          entity: sensor.system_monitor_disk_use_media_1tb_ssd
          fill_container: false
          hold_action:
            action: none
          icon: phu:seagate-ssd-m2
          icon_color: "{% set value = states('sensor.system_monitor_disk_usage_media_1tb_ssd')\
            \ | float %} {% if value >= 0.00 and value <= 50.99 %}\n  green\n{% elif\
            \ value >= 51 and value <= 70.99 %}\n  orange\n{% elif value >= 71.00\
            \ and value <= 100 %}\n  red\n{% endif %}"
          multiline_secondary: true
          primary: '{{states(''sensor.system_monitor_disk_use_media_1tb_ssd'')}} GB'
          secondary: 1 TB SSD
          tap_action:
            action: more-info
          type: custom:mushroom-template-card
        - card_mod:
            style: "ha-card { \npadding: 20px !important; \nheight: 40px !important;\
              \  \n}\n"
          double_tap_action:
            action: none
          entity: sensor.system_monitor_disk_use_media_5tb
          fill_container: false
          hold_action:
            action: none
          icon: phu:seagate-ssd
          icon_color: "{% set value = states('sensor.system_monitor_disk_usage_media_5tb')\
            \ | float %} {% if value >= 0.00 and value <= 50.99 %}\n  green\n{% elif\
            \ value >= 51 and value <= 70.99 %}\n  orange\n{% elif value >= 71.00\
            \ and value <= 100 %}\n  red\n{% endif %}"
          multiline_secondary: true
          primary: '{{states(''sensor.system_monitor_disk_use_media_5tb'')}} GB'
          secondary: 5TB
          tap_action:
            action: more-info
          type: custom:mushroom-template-card
        mode: vertical
        type: custom:stack-in-card
      - card_mod:
          style: "ha-card {\n  height: 200px !important;\n}\n"
        cards:
        - alignment: center
          card_mod:
            style: ".chip-container {\n  --chip-spacing: 6px;\n}\nha-card {\n  --chip-background:\
              \ black;\n  top: 30px !important;\n}\n"
          chips:
          - entity: sensor.processor_use_percent
            icon_color: '#01C852'
            type: entity
          - entity: sensor.memory_use_percent
            icon_color: '#E91E63'
            type: entity
          - entity: sensor.system_monitor_disk_use_percent
            icon_color: '#FF9101'
            type: entity
          - entity: sensor.system_monitor_network_in_enp1s0
            icon_color: grey
            type: entity
          - entity: sensor.processor_temperature
            icon_color: red
            type: entity
          - entity: sensor.system_monitor_last_boot
            icon: mdi:clock
            icon_color: blue
            type: entity
          type: custom:mushroom-chips-card
        mode: vertical
        type: custom:stack-in-card
      grid_options:
        columns: 6
        rows: 200px
      parameters:
        autoplay:
          delay: 7000
          disableOnInteraction: false
        effect: coverflow
        pagination:
          clickable: true
          type: bullets
        speed: 500
      type: custom:swipe-card
      visibility:
      - condition: user
        users:
        - 74f7e2ffd3594037b1a2fc4de82d9fea
    - card_mod:
        style: "ha-card {\n  height: 200px !important;\n  border-style: dotted;\n\
          \  border-width: 2px;\n  font-size: 10px;\n}\n"
      cards:
      - card_type: countdown
        date_locale: in
        f1_font: true
        show_raceinfo: false
        type: custom:formulaone-card
      grid_options:
        columns: 6
        rows: 200px
      type: custom:stack-in-card
    - card_mod:
        style: "ha-card {\n  height: 200px !important;\n  border-style: dotted;\n\
          \  border-width: 2px;\n}\n"
      cards:
      - badge_color: ''
        badge_icon: ''
        card_mod:
          style:
            .: "ha-card {\n  border: 0px !important;\n  box-shadow: none !important;\n\
              \  background: none;\n}\n:host {\n  --mush-icon-size: 160px;\n}\n"
            mushroom-shape-icon$: ".shape {\n  position: relative;\n  left: -40px;\n\
              \  top: 60px;\n}\n"
            mushroom-state-info$: ".primary {\n  font-size: 20px !important;\n  position:\
              \ relative;\n  top: -60px;\n  left: -160px;\n  overflow: visible !important;\n\
              }\n.secondary {\n  font-size: 12px !important;\n  position: relative;\n\
              \  overflow: visible !important;\n  top: -50px;\n  left: -160px;\n}\n"
        icon: mdi:package-up
        icon_color: "{% if is_state('binary_sensor.hacs_updates', 'on') or is_state('binary_sensor.other_updates',\
          \ 'on') or is_state('binary_sensor.addon_updates', 'on') %}\n  red\n{%else%}\n\
          \  disabled\n{% endif %}"
        layout: horizontal
        primary: Updates
        secondary: "{% set hacs_updates = states.update | selectattr('state', 'eq',\
          \ 'on') | selectattr('entity_id', 'in', integration_entities('hacs')) |\
          \ map(attribute='name') | list | count %} {% set addon_updates = states.update\
          \ | selectattr('state', 'eq', 'on') | selectattr('entity_id', 'in', integration_entities('hassio'))\
          \ | rejectattr('entity_id', 'eq', 'update.home_assistant_core_update') |\
          \ map(attribute='name') | list | count %} {% set other_updates = states.update\
          \ | selectattr('state', 'eq', 'on') | rejectattr('entity_id', 'in', integration_entities('hassio'))\
          \ | rejectattr('entity_id', 'in', integration_entities('hacs')) | map(attribute='name')\
          \ | list | count %}\n{% if hacs_updates == 0 and addon_updates == 0 and\
          \ other_updates == 0 %}\n  No updates\n{% else %}\n  {% if hacs_updates\
          \ != 0 %}\n    HACS Updates: {{ hacs_updates }}\n  {% endif %}\n  \n  {%\
          \ if addon_updates != 0 %}\n    Addon Updates: {{ addon_updates }}\n  {%\
          \ endif %}\n  \n  {% if other_updates != 0 %}\n    Other Updates: {{ other_updates\
          \ }}\n  {% endif %}\n{% endif %}\n"
        tap_action:
          action: navigate
          navigation_path: /lovelace/updates
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -190px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
        entity: binary_sensor.hacs_updates
        hold_action:
          action: more-info
        icon: hacs:hacs
        icon_color: "{% if is_state(config.entity, 'on') %}\n  blue\n{% else %}\n\
          \  disabled\n{% endif %}"
        primary: null
        secondary: null
        tap_action:
          action: more-info
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -200px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
        entity: binary_sensor.addon_updates
        hold_action:
          action: more-info
        icon: mdi:home-assistant
        icon_color: "{% if is_state(config.entity, 'on') %}\n  blue\n{% else %}\n\
          \  disabled\n{% endif %}"
        primary: null
        secondary: null
        tap_action:
          action: more-info
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -210px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
        entity: binary_sensor.other_updates
        hold_action:
          action: more-info
        icon: mdi:arrow-up-bold-hexagon-outline
        icon_color: "{% if is_state(config.entity, 'on') %}\n  green\n{% else %}\n\
          \  disabled\n{% endif %}"
        primary: null
        secondary: null
        tap_action:
          action: more-info
        type: custom:mushroom-template-card
      grid_options:
        columns: 6
        rows: 200px
      type: custom:stack-in-card
      visibility:
      - condition: or
        conditions:
        - condition: state
          entity: binary_sensor.addon_updates
          state: 'on'
        - condition: state
          entity: binary_sensor.hacs_updates
          state: 'on'
        - condition: state
          entity: binary_sensor.other_updates
          state: 'on'
      - condition: user
        users:
        - 74f7e2ffd3594037b1a2fc4de82d9fea
    - card:
        grid_options:
          columns: 2
          rows: 200px
        parameters:
          pagination:
            clickable: true
            type: bullets
        type: custom:swipe-card
      card_param: cards
      filter:
        exclude:
        - state: 'off'
        - state: unknown
        - state: unavailable
        - state: idle
        - entity_id: media_player.google_tv_cast
        - entity_id: media_player.google_tv_streamer_cast
        include:
        - domain: media_player
          integration: mediabrowser
          options:
            artwork: material
            card_mod:
              style: ".entity__info {\n  max-width: 100% !important;\n  top: -80px;\n\
                \  flex-direction: column-reverse !important;\n  \n  }\n.entity__info__name\
                \ {\n    font-size: 16px !important;\n    font-family: Ubuntu;\n \
                \ }\n.entity__info__media {\n    font-size: 18px !important;\n   \
                \ font-weight: bold;\n    font-family: Ubuntu;\n  }\n.entity__icon\
                \ {\n    top: -80px !important;\n    color: #AA5CC3 !important;\n\
                \  }\n:host {\n  --mini-media-player-background-opacity: 1;\n  --mini-media-player-progress-height:\
                \ 10px;\n  --mini-media-player-name-font-weight: 800;\n  --mini-media-player-scale:1.1;\n\
                \  }\n  @media screen and (max-width: 600px) {\n    :host {\n    \
                \  --mini-media-player-scale: 1.2;\n    }   \n  }\nha-card {\n   \
                \ border: 0px !important;\n    box-shadow: none !important;\n    height:\
                \ 200px !important;\n    --mdc-icon-size: 40px  !important;\n  }\n"
            entities:
            - this.entity_id
            grid_options:
              columns: 12
              rows: 200px
            icon: mdi:jellyfish-outline
            info: scroll
            sound_mode: icon
            source: icon
            toggle_power: true
            type: custom:mini-media-player
            volume_stateless: true
        - domain: media_player
          integration: spotify
          options:
            artwork: material
            card_mod:
              style: ".entity__info {\n  max-width: 100% !important;\n  top: -80px;\n\
                \  flex-direction: column-reverse !important;\n  \n  }\n.entity__info__name\
                \ {\n    font-size: 16px !important;\n    font-family: Ubuntu;\n \
                \ }\n.entity__info__media {\n    font-size: 18px !important;\n   \
                \ font-weight: bold;\n    font-family: Ubuntu;\n  }\n.entity__icon\
                \ {\n    top: -80px !important;\n    color: #1DB954 !important;\n\
                \  }\n:host {\n  --mini-media-player-background-opacity: 1;\n  --mini-media-player-progress-height:\
                \ 10px;\n  --mini-media-player-name-font-weight: 800;\n  --mini-media-player-scale:1.1;\n\
                \  }\n  @media screen and (max-width: 600px) {\n    :host {\n    \
                \  --mini-media-player-scale: 1.2;\n    }   \n  }\nha-card {\n   \
                \ border: 0px !important;\n    box-shadow: none !important;\n    height:\
                \ 200px !important;\n    --mdc-icon-size: 40px  !important;\n  }\n"
            entities:
            - this.entity_id
            info: scroll
            sound_mode: icon
            source: icon
            toggle_power: true
            type: custom:mini-media-player
            volume_stateless: true
        - domain: media_player
          integration: cast
          options:
            artwork: material
            card_mod:
              style: ".entity__info {\n  max-width: 100% !important;\n  top: -80px;\n\
                \  flex-direction: column-reverse !important;\n  \n  }\n.entity__info__name\
                \ {\n    font-size: 16px !important;\n    font-family: Ubuntu;\n \
                \ }\n.entity__info__media {\n    font-size: 18px !important;\n   \
                \ font-weight: bold;\n    font-family: Ubuntu;\n  }\n.entity__icon\
                \ {\n    top: -80px !important;\n  }\n:host {\n  --mini-media-player-background-opacity:\
                \ 1;\n  --mini-media-player-progress-height: 10px;\n  --mini-media-player-name-font-weight:\
                \ 800;\n  --mini-media-player-scale:1.1;\n  }\n  @media screen and\
                \ (max-width: 600px) {\n    :host {\n      --mini-media-player-scale:\
                \ 1.2;\n    }   \n  }\nha-card {\n    border: 0px !important;\n  \
                \  box-shadow: none !important;\n    height: 200px !important;\n \
                \   --mdc-icon-size: 40px  !important;\n  }\n"
            entities:
            - this.entity_id
            grid_options:
              columns: 12
              rows: 200px
            icon: mdi:cast-audio
            info: scroll
            sound_mode: icon
            source: icon
            toggle_power: true
            type: custom:mini-media-player
            volume_stateless: true
        - domain: media_player
          integration: androidtv
          options:
            artwork: material
            card_mod:
              style: ".entity__info {\n  max-width: 100% !important;\n  top: -80px;\n\
                \  flex-direction: column-reverse !important;\n  \n  }\n.entity__info__name\
                \ {\n    font-size: 16px !important;\n    font-family: Ubuntu;\n \
                \ }\n.entity__info__media {\n    font-size: 18px !important;\n   \
                \ font-weight: bold;\n    font-family: Ubuntu;\n  }\n.entity__icon\
                \ {\n    top: -80px !important;\n  }\n:host {\n  --mini-media-player-background-opacity:\
                \ 1;\n  --mini-media-player-progress-height: 10px;\n  --mini-media-player-name-font-weight:\
                \ 800;\n  --mini-media-player-scale:1.1;\n  }\n  @media screen and\
                \ (max-width: 600px) {\n    :host {\n      --mini-media-player-scale:\
                \ 1.2;\n    }   \n  }\nha-card {\n    border: 0px !important;\n  \
                \  box-shadow: none !important;\n    height: 200px !important;\n \
                \   --mdc-icon-size: 40px  !important;\n  }\n"
            entities:
            - this.entity_id
            grid_options:
              columns: 12
              rows: 200px
            icon: mdi:google
            info: scroll
            sound_mode: icon
            source: icon
            toggle_power: true
            type: custom:mini-media-player
            volume_stateless: true
        - domain: media_player
          integration: androidtv_remote
          options:
            artwork: material
            card_mod:
              style: ".entity__info {\n  max-width: 100% !important;\n  top: -80px;\n\
                \  flex-direction: column-reverse !important;\n  \n  }\n.entity__info__name\
                \ {\n    font-size: 16px !important;\n    font-family: Ubuntu;\n \
                \ }\n.entity__info__media {\n    font-size: 18px !important;\n   \
                \ font-weight: bold;\n    font-family: Ubuntu;\n  }\n.entity__icon\
                \ {\n    top: -80px !important;\n  }\n:host {\n  --mini-media-player-background-opacity:\
                \ 1;\n  --mini-media-player-progress-height: 10px;\n  --mini-media-player-name-font-weight:\
                \ 800;\n  --mini-media-player-scale:1.1;\n  }\n  @media screen and\
                \ (max-width: 600px) {\n    :host {\n      --mini-media-player-scale:\
                \ 1.2;\n    }   \n  }\nha-card {\n    border: 0px !important;\n  \
                \  box-shadow: none !important;\n    height: 200px !important;\n \
                \   --mdc-icon-size: 40px  !important;\n  }\n"
            entities:
            - this.entity_id
            grid_options:
              columns: 12
              rows: 200px
            icon: mdi:google
            info: scroll
            sound_mode: icon
            source: icon
            toggle_power: true
            type: custom:mini-media-player
            volume_stateless: true
      show_empty: false
      sort:
        method: state
        reverse: true
      type: custom:auto-entities
      visibility:
      - condition: user
        users:
        - 74f7e2ffd3594037b1a2fc4de82d9fea
    - card_mod:
        style: "ha-card {\n  height: 200px !important;\n}\n"
      cards:
      - card_mod:
          style:
            mushroom-state-info$: ".primary {\n  font-size: 20px !important;\n  position:\
              \ relative;\n  overflow: visible !important;\n}\n.secondary {\n  font-size:\
              \ 13px !important;\n  position: relative;\n  overflow: visible !important;\n\
              \  top: 10px;\n}\n"
        entity: ''
        primary: Internet Speed
        secondary: "\u2B06\uFE0F {{states.sensor.speedtest_download.state}} Mbps |\
          \  \u2B07\uFE0F {{states.sensor.speedtest_upload.state}} Mbps\n"
        tap_action:
          action: call-service
          data:
            addon: 6b87c29e_speedtest_addon
          service: hassio.addon_start
          target: {}
        type: custom:mushroom-template-card
      - entities:
        - color: '#f24d1b'
          entity: sensor.speedtest_download
        hours_to_show: 24
        line_width: 5
        show:
          fill: fade
          icon: false
          legend: false
          name: false
          state: false
        type: custom:mini-graph-card
      - entities:
        - color: '#0960eb'
          entity: sensor.speedtest_upload
        hours_to_show: 24
        line_width: 5
        show:
          fill: fade
          icon: false
          legend: false
          name: false
          state: false
        type: custom:mini-graph-card
      grid_options:
        columns: 6
        rows: 200px
      mode: vertical
      type: custom:stack-in-card
      visibility:
      - condition: user
        users:
        - e07f5c6a76fd4886ad5d945ed22f6d4b
        - 03fac29e97844166b40187a8b4c09ded
    column_span: 3
    type: grid
  - cards:
    - heading: In Test
      heading_style: title
      icon: ''
      type: heading
    type: grid
    visibility:
    - condition: user
      users: []
  type: sections
  visible:
  - user: 74f7e2ffd3594037b1a2fc4de82d9fea
  - user: 03fac29e97844166b40187a8b4c09ded
  - user: e07f5c6a76fd4886ad5d945ed22f6d4b
- cards:
  - alignment: center
    card_mod:
      style:
        mushroom-conditional-chip:nth-child(10):
          mushroom-entity-chip$: "ha-state-icon {\n  --card-mod-icon:;\n  --card-mod-icon-color:\
            \ cyan;\n  animation: bounce .6s cubic-bezier(0.30, .40, 0.85, 2.50) infinite;\n\
            \  transform-origin: 50% 100%;\n}\n@keyframes bounce { \n  0%, 100% {\
            \ transform: translateY(0px) scaleY(0.9); }\n  80% { transform: translateY(-3px);\
            \ }\n}\n"
        mushroom-conditional-chip:nth-child(11):
          mushroom-entity-chip$: "ha-state-icon {\n  --card-mod-icon:;\n  --card-mod-icon-color:\
            \ orange;\n  animation: bounce .6s cubic-bezier(0.30, .40, 0.85, 2.50)\
            \ infinite;\n  transform-origin: 50% 100%;\n}\n@keyframes bounce { \n\
            \  0%, 100% { transform: translateY(0px) scaleY(0.9); }\n  80% { transform:\
            \ translateY(-3px); }\n}     \n"
        mushroom-conditional-chip:nth-child(12):
          mushroom-entity-chip$: "ha-state-icon {\n  --card-mod-icon:;\n  --card-mod-icon-color:\
            \ rgba(var(--rgb-blue), 1.3);\n  animation: bounce .6s cubic-bezier(0.30,\
            \ .40, 0.85, 2.50) infinite;\n  transform-origin: 50% 100%;\n}\n@keyframes\
            \ bounce { \n  0%, 100% { transform: translateY(0px) scaleY(0.9); }\n\
            \  80% { transform: translateY(-3px); }\n}\n"
        mushroom-conditional-chip:nth-child(13):
          mushroom-entity-chip$: "ha-state-icon {\n  --card-mod-icon: mdi:ghost;\n\
            \  --card-mod-icon-color: var(--secondary-text-color);\n  animation: drift\
            \ 10s ease-in-out infinite, blink 4s infinite; \n}\n@keyframes drift {\n\
            \  0%, 100% { transform: translate(3px, 0px); }\n  30% { transform: translate(-1px,\
            \ 2px); }\n  45% { transform: translate(1.5px, 0px); }\n  75% { transform:\
            \ translate(-3.2px, -3px); }\n}\n@keyframes blink {\n  0%, 24%, 35%, 74%,\
            \ 85%, 100% { clip-path: inset(0 0 0 0); }\n  25% { clip-path: polygon(0\
            \ 0, 0 100%, 100% 100%, 100% 53%, 25% 52%, 27% 31%, 49% 31%, 49% 54%,\
            \ 100% 54%, 100% 0); }\n  75%  { clip-path: polygon(0 0, 0 100%, 100%\
            \ 100%, 100% 53%, 49% 51%, 52% 30%, 73% 31%, 75% 52%, 100% 54%, 100% 0);\
            \ }\n}\n"
        mushroom-conditional-chip:nth-child(9):
          mushroom-entity-chip$: "ha-state-icon {\n  --card-mod-icon:;\n  --card-mod-icon-color:\
            \ dodgerblue;\n  animation: bounce .6s cubic-bezier(0.30, .40, 0.85, 2.50)\
            \ infinite;\n  transform-origin: 50% 100%;\n}\n@keyframes bounce { \n\
            \  0%, 100% { transform: translateY(0px) scaleY(0.9); }\n  80% { transform:\
            \ translateY(-3px); }\n}\n"
        mushroom-entity-chip:nth-child(1)$: "ha-state-icon {\n  {{ iif(is_state('sun.sun',\
          \ 'above_horizon'), 'animation: spin 3s ease 1.5s infinite;',\n'animation:\
          \ moon 5s linear infinite, stars 5s linear infinite;') }}\n  --card-mod-icon-color:\
          \ {{ iif(is_state('sun.sun', 'above_horizon'), 'orange',\n'grey') }}; \n\
          }\n@keyframes spin {\n  100% { transform: rotate(360deg); }\n}\n@keyframes\
          \ moon {\n0%, 100% { transform: rotate(12deg); }\n30% { transform: rotate(-6deg);\
          \ }\n45% { transform: rotate(8deg); }\n75% { transform: rotate(-10deg);\
          \ }\n}\n@keyframes stars {\n  0%, 3.1%, 14.1% { clip-path: inset(0 0 0 0);\
          \ }\n  3% { clip-path: polygon(1% 1%, 0% 99%, 99% 100%, 99% 62%, 68% 62%,\
          \ 62% 44%, 76% 34%, 100% 34%, 99% 0%); }\n  14% { clip-path: polygon(1%\
          \ 1%, 0% 99%, 99% 100%, 100% 25%, 51% 45%, 38% 34%, 36% 0); }\n} \n"
    chips:
    - content_info: none
      entity: sun.sun
      icon_color: orange
      tap_action:
        action: navigate
        navigation_path: '#sun'
      type: entity
      use_entity_picture: false
    - content_info: none
      entity: sensor.moon_phase
      tap_action:
        action: navigate
        navigation_path: '#moon'
      type: entity
      use_entity_picture: true
    - content_info: none
      entity: binary_sensor.den_motion_occupancy
      icon_color: teal
      type: entity
    - content_info: none
      entity: binary_sensor.chair_occupancy
      icon_color: purple
      type: entity
    - entity: binary_sensor.den_door_contact
      icon: '{{ iif(is_state(''binary_sensor.den_door_contact'', ''on''), ''mdi:door-open'',
        ''mdi:door-closed'') }}'
      icon_color: '{{ iif(is_state(''binary_sensor.den_door_contact'', ''on''), ''green'',
        ''red'') }}'
      tap_action:
        action: more-info
      type: template
    - double_tap_action:
        action: call-service
        service: homeassistant.update_entity
        target:
          entity_id: weather.home
      entity: weather.forecast_home
      show_conditions: true
      show_temperature: true
      tap_action:
        action: navigate
        navigation_path: '#weather'
      type: weather
    - chip:
        content_info: none
        entity: person.darragh_clerkin
        tap_action:
          action: navigate
          navigation_path: /lovelace/darragh
        type: entity
        use_entity_picture: true
      conditions:
      - condition: state
        entity: person.darragh_clerkin
        state: home
      type: conditional
    - chip:
        content_info: none
        entity: person.hilary_harris
        tap_action:
          action: navigate
          navigation_path: /lovelace/hilary
        type: entity
        use_entity_picture: true
      conditions:
      - condition: or
        conditions:
        - condition: state
          entity: media_player.samsung_tv
          state: 'on'
        - condition: state
          entity: device_tracker.hilary_s_phone
          state: home
      type: conditional
    - chip:
        content_info: name
        entity: binary_sensor.hacs_updates
        icon: hacs:hacs
        name: HACS
        tap_action:
          action: navigate
          navigation_path: /lovelace/updates
        type: entity
      conditions:
      - condition: state
        entity: binary_sensor.hacs_updates
        state: 'on'
      type: conditional
    - chip:
        content_info: name
        entity: binary_sensor.addon_updates
        icon: mdi:home-assistant
        name: Addons
        tap_action:
          action: navigate
          navigation_path: /lovelace/updates
        type: entity
      conditions:
      - condition: state
        entity: binary_sensor.addon_updates
        state: 'on'
      type: conditional
    - chip:
        content_info: name
        entity: binary_sensor.other_updates
        icon: ''
        icon_color: light-blue
        name: Other Updates
        tap_action:
          action: navigate
          navigation_path: /lovelace/updates
        type: entity
      conditions:
      - condition: state
        entity: binary_sensor.other_updates
        state: 'on'
      type: conditional
    - chip:
        entity: update.home_assistant_core_update
        hold_action:
          action: more-info
        icon_color: light-blue
        tap_action:
          action: navigate
          navigation_path: /lovelace/updates
        type: entity
      conditions:
      - entity: update.home_assistant_core_update
        state: 'on'
      type: conditional
    - chip:
        entity: binary_sensor.backups_stale
        icon: mdi:cloud-upload
        type: entity
      conditions:
      - entity: binary_sensor.backups_stale
        state: 'on'
      type: conditional
    - icon: mdi:menu
      icon_color: primary
      tap_action:
        action: navigate
        navigation_path: /lovelace/menu
      type: action
    type: custom:mushroom-chips-card
    view_layout:
      column: 2
  - card:
      alignment: center
      card_mod:
        style:
          mushroom-action-chip:nth-child(4)$: "ha-state-icon {  --chip-icon-size:\
            \ 22px; {% if (states.media_player.spotify.attributes.source) == 'Pixel\
            \ 8 Pro' %}\n  animation: ping 1.5s infinite, music 3s ease-in-out infinite\
            \ alternate;\n  transform-origin: 80% 100%\n{% else %} {% endif %}   \
            \        } @keyframes music {\n  0%, 100% { transform: translateY(0px)\
            \ scaleX(1); }\n  20% { transform: translateY(2px) scaleX(0.9); }\n  40%\
            \ { transform: rotateY(10deg) rotateZ(-10deg); }\n  60% { transform: translateY(-4px)\
            \ scaleX(1.1); }\n  80% { transform: rotateY(-10deg) rotateZ(10deg); }\n\
            } @keyframes ping {\n  0% { border-radius: 20px; box-shadow: 0 0 0 0 rgba(var(--rgb-green),\
            \ 0.8); }\n  100% { border-radius: 20px; box-shadow: 0 0 30px 15px transparent;\
            \ }\n}\n"
          mushroom-entity-chip:nth-child(1)$: "ha-state-icon {\n  --chip-icon-size:\
            \ 22px;\n} \n"
          mushroom-entity-chip:nth-child(3)$: 'ha-state-icon {  --chip-icon-size:
            22px; }

            '
          mushroom-entity-chip:nth-child(5)$: "ha-state-icon {  --chip-icon-size:\
            \ 22px; }            \n"
          mushroom-template-chip:nth-child(2)$: "ha-state-icon {\n--chip-icon-size:\
            \ 22px;\n  {% if states.sensor.pixel8pro_remaining_charge_time.state !=\
            \ 'unavailable' and states.sensor.pixel8pro_remaining_charge_time.state\
            \ != '0' %}\n    animation: charge 3s steps(1) 1000;\n  {% elif states.sensor.pixel8pro_remaining_charge_time.state\
            \ == '0' %}\n    --card-mod-icon-color: rgba(var(--rgb-green));\n  {%else%}\n\
            \  {% endif %}\n}\n@keyframes charge {\n  0%  { clip-path: polygon(0%\
            \ 0%, 0% 100%, 34% 100%, 34% 24%, 67% 24%, 67% 84%, 34% 84%, 34% 100%,\
            \ 100% 100%, 100% 0%); }\n  20% { clip-path: polygon(0% 0%, 0% 100%, 34%\
            \ 100%, 34% 24%, 67% 24%, 67% 64%, 34% 64%, 34% 100%, 100% 100%, 100%\
            \ 0%); }\n  40% { clip-path: polygon(0% 0%, 0% 100%, 34% 100%, 34% 24%,\
            \ 67% 24%, 67% 44%, 34% 44%, 34% 100%, 100% 100%, 100% 0%); }\n  60% {\
            \ clip-path: polygon(0% 0%, 0% 100%, 34% 100%, 34% 24%, 67% 24%, 67% 24%,\
            \ 34% 24%, 34% 100%, 100% 100%, 100% 0%); }\n}      \n"
      chips:
      - content_info: state
        double_tap_action:
          action: assist
          pipeline_id: preferred
          start_listening: true
        entity: sensor.pixel8pro_battery_level
        icon: phu:google-pixel
        icon_color: blue
        tap_action:
          action: navigate
          navigation_path: '#phone'
        type: entity
        use_entity_picture: false
      - content: "{% if is_state('sensor.pixel8pro_charger_type', 'none') %}\n\n{%\
          \ else %}\n  {% if is_state('sensor.pixel8pro_battery_level', '100') %}\n\
          \    Charged\n  {% else %}\n    Full in {{states.sensor.pixel8pro_remaining_charge_time.state}}\
          \ Minute(s)\n  {% endif %}\n{% endif %}"
        double_tap_action:
          action: none
        entity: sensor.pixel8pro_remaining_charge_time
        hold_action:
          action: none
        icon: "{% if is_state('sensor.pixel8pro_charger_type', 'none') %}\n  mdi:power-plug-off\n\
          {% elif is_state('sensor.pixel8pro_charger_type', 'wireless') %}\n  mdi:battery-high\n\
          {% elif is_state('sensor.pixel8pro_charger_type', 'ac') %}\n  mdi:battery-high\n\
          {% else %}\n  mdi:help-circle\n{% endif %}"
        icon_color: "{% if is_state('sensor.pixel8pro_charger_type', 'none') %}\n\
          \  white\n{% elif is_state('sensor.pixel8pro_charger_type', 'wireless')\
          \ %}\n  orange\n{% elif is_state('sensor.pixel8pro_charger_type', 'ac')\
          \ %}\n  green\n{% else %}\n  disabled\n{% endif %}"
        picture: ''
        tap_action:
          action: more-info
        type: template
      - entity: sensor.pixel_watch_battery_level
        icon: phu:pixelwatch
        icon_color: deep-orange
        type: entity
      - icon: mdi:music
        icon_color: green
        tap_action:
          action: call-service
          service: script.play_spotify_on_phone
          target: {}
        type: action
      - entity: sensor.toothbrush_battery_plus
        icon: mdi:toothbrush
        icon_color: red
        type: entity
      - entity: sensor.hilary_s_phone_last_update_trigger
        hold_action:
          action: more-info
        tap_action:
          action: call-service
          service: script.update_all_phone_sensors
          target: {}
        type: entity
        use_entity_picture: true
      - chip:
          entity: sensor.sleep
          icon_color: indigo
          tap_action:
            action: navigate
            navigation_path: '#sleep'
          type: entity
        conditions:
        - condition: screen
          media_query: '(min-width: 0px) and (max-width: 767px)'
        type: conditional
      type: custom:mushroom-chips-card
    conditions:
    - condition: screen
      media_query: '(min-width: 0px)'
    type: conditional
    view_layout:
      column: 1
  - content: "<hr>\n<h3>\U0001F4A4Total Sleep: {{ ((states.sensor.sleep.state | float)\
      \ // 3600) | int }} hours, {{ (((states.sensor.sleep.state | float) % 3600)\
      \ // 60) | int }} minutes \U0001F6CC</h3>\n\n**{{ ((states.sensor.light_sleep.state\
      \ | float) + (states.sensor.deep_sleep.state | float) + (states.sensor.rem_sleep.state\
      \ | float)) // 3600 | int }} hours{{ \", \" if (((states.sensor.light_sleep.state\
      \ | float) + (states.sensor.deep_sleep.state | float) + (states.sensor.rem_sleep.state\
      \ | float)) % 3600) // 60 != 0 else \"\" }}{{ (((states.sensor.light_sleep.state\
      \ | float) + (states.sensor.deep_sleep.state | float) + (states.sensor.rem_sleep.state\
      \ | float)) % 3600) // 60 | int if (((states.sensor.light_sleep.state | float)\
      \ + (states.sensor.deep_sleep.state | float) + (states.sensor.rem_sleep.state\
      \ | float)) % 3600) // 60 != 0 else \"\" }} minutes**\n\n  - \U0001F4F1 **Time\
      \ to sleep:**\n\_\_\_\_\U0001F552 {% if ((states.sensor.awake_time.state | float)\
      \ // 3600) | int > 0 %}{{ ((states.sensor.awake_time.state | float) // 3600)\
      \ | int }} hours, {% endif %}{{ (((states.sensor.awake_time.state | float) %\
      \ 3600) // 60) | int }} minutes\n    \n  - \U0001F315 **Light Sleep:**\n\_\_\
      \_\_\U0001F552 {% if ((states.sensor.light_sleep.state | float) // 3600) | int\
      \ > 0 %}{{ ((states.sensor.light_sleep.state | float) // 3600) | int }} hours,\
      \ {% endif %}{{ (((states.sensor.light_sleep.state | float) % 3600) // 60) |\
      \ int }} minutes\n\n  - \U0001F311 **Deep Sleep:**\n\_\_\_\_\U0001F552  {% if\
      \ ((states.sensor.deep_sleep.state | float) // 3600) | int > 0 %}{{ ((states.sensor.deep_sleep.state\
      \ | float) // 3600) | int }} hours, {% endif %}{{ (((states.sensor.deep_sleep.state\
      \ | float) % 3600) // 60) | int }} minutes\n\n  - \U0001F300 **REM Sleep:**\n\
      \_\_\_\_\U0001F552 {% if ((states.sensor.rem_sleep.state | float) // 3600) |\
      \ int > 0 %}{{ ((states.sensor.rem_sleep.state | float) // 3600) | int }} hours,\
      \ {% endif %}{{ (((states.sensor.rem_sleep.state | float) % 3600) // 60) | int\
      \ }} minutes"
    title: "\U0001F319 Last Night's Sleep Summary"
    type: markdown
    view_layout:
      column: 1
    visibility:
    - condition: state
      entity: schedule.card
      state: 'on'
    - condition: state
      entity: sensor.deep_sleep
      state_not: unavailable
    - condition: screen
      media_query: '(min-width: 1024px)'
  - cards:
    - badge_color: '{{ ''deep-orange'' if (now() + timedelta(hours=5, minutes=30)).strftime(''%p'')
        == ''AM'' else ''black'' }}'
      badge_icon: '{{ ''mdi:weather-sunny'' if (now() + timedelta(hours=5, minutes=30)).strftime(''%p'')
        == ''AM'' else ''mdi:weather-night'' }}'
      double_tap_action:
        action: none
      fill_container: false
      hold_action:
        action: none
      icon: ''
      multiline_secondary: true
      picture: /local/images/ind.jpg
      primary: '{{ (now() + timedelta(hours=5, minutes=30)).strftime(''%-I:%M %p'')
        }}'
      secondary: '{{ (now() + timedelta(hours=5, minutes=30)).strftime(''%A, %d %B'')
        }}'
      tap_action:
        action: none
      type: custom:mushroom-template-card
    - badge_color: '{{ ''deep-orange'' if (now() + timedelta(hours=-7)).strftime(''%p'')
        == ''AM'' else ''black'' }}'
      badge_icon: '{{ ''mdi:weather-sunny'' if (now() + timedelta(hours=-7)).strftime(''%p'')
        == ''AM'' else ''mdi:weather-night'' }}'
      double_tap_action:
        action: none
      fill_container: false
      hold_action:
        action: none
      icon: ''
      multiline_secondary: true
      picture: /local/images/can.jpg
      primary: '{{ (now() + timedelta(hours=-7)).strftime(''%-I:%M %p'') }}'
      secondary: '{{ (now() + timedelta(hours=-7)).strftime(''%A, %d %B'') }}'
      tap_action:
        action: none
      type: custom:mushroom-template-card
    - badge_color: '{{ ''deep-orange'' if (now() + timedelta(hours=-8)).strftime(''%p'')
        == ''AM'' else ''black'' }}'
      badge_icon: '{{ ''mdi:weather-sunny'' if (now() + timedelta(hours=-8)).strftime(''%p'')
        == ''AM'' else ''mdi:weather-night'' }}'
      double_tap_action:
        action: none
      fill_container: false
      hold_action:
        action: none
      icon: ''
      multiline_secondary: true
      picture: /local/images/usa.jpg
      primary: '{{ (now() + timedelta(hours=-8)).strftime(''%-I:%M %p'') }}'
      secondary: '{{ (now() + timedelta(hours=-8)).strftime(''%A, %d %B'') }}'
      tap_action:
        action: none
      type: custom:mushroom-template-card
    type: horizontal-stack
    view_layout:
      column: 1
  - badge_color: blue
    badge_icon: mdi:numeric-{{ ((as_timestamp(state_attr(config.entity, "start_time"))
      | as_datetime | as_local).date() - now().date()).days }}
    card_mod:
      style: "ha-state-icon {\n{% if ((as_timestamp(state_attr(\"calendar.birthdays\"\
        , \"start_time\"))\n  | as_datetime | as_local).date() - now().date()).days\
        \ <= 2 %}\n  animation: surprise 5s ease 1000;\n{%endif%}\n}\n@keyframes surprise\
        \ {\n  0%, 20%, 100% { transform: translateY(0); }\n  2.5% { transform: translateY(-6px)\
        \ rotate(-14deg); }\n  5% { transform: translateY(-6px) rotate(11deg); }\n\
        \  7.5% { transform: translateY(-6px) rotate(-8deg); }\n  10% { transform:\
        \ translateY(-6px) rotate(5deg); }\n  12.5% { transform: translateY(0); }\n\
        \  15% { transform: translateY(-3px) }\n}\n"
    double_tap_action:
      action: none
    entity: calendar.birthdays
    hold_action:
      action: none
    icon: mdi:gift
    icon_color: deep-orange
    primary: '{{state_attr(config.entity, "message")}}'
    secondary: '{{state_attr(config.entity, "start_time") | as_timestamp | timestamp_custom(''%-d
      %B'')}}

      '
    tap_action:
      action: none
    type: custom:mushroom-template-card
    view_layout:
      column: 1
  - cards:
    - cards:
      - card_mod:
          style: "ha-card {\n  {% if is_state(config.entity, 'on') %}\n     background:\
            \ rgba(var(--rgb-green), 0.2);\n  {%- else -%}\n  {%- endif %}\n}\n"
        double_tap_action:
          action: perform-action
          perform_action: homeassistant.turn_on
        entity: group.den
        fill_container: false
        hold_action:
          action: none
        icon: '{% if is_state(''group.den'', ''on'') %}

          mdi:account

          {% else %}

          mdi:account-outline

          {% endif %}'
        icon_color: '{% if is_state(''group.den'', ''on'') %}

          green

          {% else %}

          disabled

          {% endif %}'
        layout: horizontal
        primary: Home
        secondary: ''
        tap_action:
          action: none
        type: custom:mushroom-template-card
      - card_mod:
          style: "ha-card {\n  {% if is_state(config.entity, 'off') %}\n     background:\
            \ rgba(var(--rgb-brown), 0.2);\n  {%- else -%}\n  {%- endif %}\n}\n"
        double_tap_action:
          action: call-service
          data: {}
          service: homeassistant.turn_off
          target:
            entity_id: group.den
        entity: group.den
        fill_container: false
        hold_action:
          action: none
        icon: '{% if is_state(''group.den'', ''on'') %}

          mdi:account-off-outline

          {% else %}

          mdi:account-off

          {% endif %}'
        icon_color: '{% if is_state(''group.den'', ''on'') %}

          disabled

          {% else %}

          brown

          {% endif %}'
        layout: horizontal
        primary: Away
        secondary: ''
        tap_action:
          action: none
        type: custom:mushroom-template-card
      - card_mod:
          style: "ha-card {\n  {% if is_state(config.entity, 'on') %}\n     background:\
            \ rgba(var(--rgb-blue), 0.2);\n  {%- else -%}\n  {%- endif %}\n}\nha-state-icon\
            \ {\n  {{ 'animation: bed-animation 2s 1000;' if is_state('binary_sensor.in_bed',\
            \ 'on') }}\n}\n@keyframes bed-animation {\n  0%, 100% { transform: scale(1);\
            \ }\n  50% { transform: scale(.8); }\n}\n"
        double_tap_action:
          action: none
        entity: binary_sensor.in_bed
        fill_container: false
        hold_action:
          action: more-info
        icon: '{{ iif(is_state(''binary_sensor.in_bed'', ''on''), ''mdi:bed'', ''mdi:bed-outline'')
          }}'
        icon_color: '{% if is_state(''binary_sensor.in_bed'', ''on'') %}

          blue

          {% else %}

          disabled

          {% endif %}'
        layout: horizontal
        primary: Sleep
        secondary: ''
        tap_action:
          action: navigate
          navigation_path: '#sleepsounds'
        type: custom:mushroom-template-card
      columns: 3
      square: false
      type: grid
    - card_mod:
        style: "ha-card {\n  {% set r = state_attr(config.entity, 'rgb_color')[0]\
          \ %}\n  {% set g = state_attr(config.entity, 'rgb_color')[1] %}\n  {% set\
          \ b = state_attr(config.entity, 'rgb_color')[2] %}\n  background: rgba(\
          \ {{r}}, {{g}}, {{b}}, 0.2 );\n}\n"
      collapsible_controls: true
      entity: light.light
      fill_container: false
      icon: mdi:ceiling-light
      icon_color: white
      name: Lumos
      show_brightness_control: true
      show_color_control: true
      show_color_temp_control: true
      type: custom:mushroom-light-card
      use_light_color: true
    - card_mod:
        style: "ha-card {\n  {% set r = state_attr(config.entity, 'rgb_color')[0]\
          \ %}\n  {% set g = state_attr(config.entity, 'rgb_color')[1] %}\n  {% set\
          \ b = state_attr(config.entity, 'rgb_color')[2] %}\n  background: rgba(\
          \ {{r}}, {{g}}, {{b}}, 0.2 );\n}\n"
      collapsible_controls: true
      entity: light.lamp
      fill_container: false
      icon: mdi:lamp-outline
      name: Bed Light
      show_brightness_control: true
      show_color_control: true
      show_color_temp_control: true
      type: custom:mushroom-light-card
      use_light_color: true
    - card_mod:
        style: "ha-card {\n   {% set r = state_attr(config.entity, 'rgb_color')[0]\
          \ %}\n   {% set g = state_attr(config.entity, 'rgb_color')[1] %}\n   {%\
          \ set b = state_attr(config.entity, 'rgb_color')[2] %}\n   background: rgba(\
          \ {{r}}, {{g}}, {{b}}, 0.2 );\n }\nha-state-icon {\n {{ 'animation: spin\
          \ 2s linear infinite, blink 1s ease infinite;' if is_state ('light.shapes',\
          \ 'on')}}\n  @keyframes blink {\n    0%, 100% { opacity: 1; }\n    50% {\
          \ opacity: 0; }\n  }\n"
      collapsible_controls: true
      entity: light.shapes
      fill_container: false
      icon: mdi:hexagon-multiple
      show_brightness_control: true
      show_color_control: true
      show_color_temp_control: true
      type: custom:mushroom-light-card
      use_light_color: true
    - card:
        alignment: center
        chips:
        - content_info: name
          entity: light.shapes
          name: Nanoversary
          tap_action:
            action: call-service
            data:
              effect: Nanoversary
            service: light.turn_on
            target:
              entity_id: light.shapes
          type: light
          use_light_color: true
        - content_info: name
          entity: light.shapes
          name: Northern Lights
          tap_action:
            action: call-service
            data:
              effect: Northern Lights
            service: light.turn_on
            target:
              entity_id: light.shapes
          type: light
          use_light_color: true
        - content_info: name
          entity: light.shapes
          name: TV
          tap_action:
            action: call-service
            data:
              effect: TV Simulation
            service: light.turn_on
            target:
              entity_id: light.shapes
          type: light
          use_light_color: true
        - content_info: name
          entity: light.shapes
          name: Lightscape
          tap_action:
            action: call-service
            data:
              effect: Lightscape
            service: light.turn_on
            target:
              entity_id: light.shapes
          type: light
          use_light_color: true
        - content_info: name
          entity: light.shapes
          icon: mdi:music
          name: Lightning
          tap_action:
            action: call-service
            data:
              effect: Lightning
            service: light.turn_on
            target:
              entity_id: light.shapes
          type: light
          use_light_color: true
        - content_info: name
          entity: light.shapes
          icon: mdi:puzzle
          name: Hedgehog
          tap_action:
            action: call-service
            data:
              effect: Catch a Hedgehog
            service: light.turn_on
            target:
              entity_id: light.shapes
          type: light
          use_light_color: true
        - content_info: name
          entity: light.shapes
          icon: mdi:puzzle
          name: Memory
          tap_action:
            action: call-service
            data:
              effect: Memory
            service: light.turn_on
            target:
              entity_id: light.shapes
          type: light
          use_light_color: true
        type: custom:mushroom-chips-card
      conditions:
      - condition: state
        entity: light.shapes
        state: 'on'
      type: conditional
    - badge_color: ''
      badge_icon: ''
      card_mod:
        style: "ha-state-icon:before {\n{% if is_state ('switch.workstation', 'on')\
          \ %}\n  content: \"\";\n  position: absolute;\n  width: 40%;\n  height:\
          \ 30%;\n  margin: 10%;\n  animation: refresh 500ms linear 100;\n{% else\
          \ %}\n{% endif %}\n}\n@keyframes refresh { \n  0% { background: linear-gradient(180deg,\
          \ rgba(var(--rgb-purple), 1.2) 0%, transparent 50%, transparent 100%); }\n\
          \  25% { background: linear-gradient(180deg, transparent 0%, rgba(var(--rgb-purple),\
          \ 1.2) 25%, transparent 100%); }\n  50% { background: linear-gradient(180deg,\
          \ transparent 0%, rgba(var(--rgb-purple), 1.2) 50%, transparent 100%); }\n\
          \  75% { background: linear-gradient(180deg, transparent 0%, rgba(var(--rgb-purple),\
          \ 1.2) 75%, transparent 100%); }\n  100% { background: linear-gradient(180deg,\
          \ transparent 0%, transparent 50%, rgba(var(--rgb-purple), 1.2) 100%); }\n\
          }\n"
      entity: switch.workstation
      icon: '{{ iif(is_state(''switch.workstation'', ''on''), ''mdi:monitor'', ''mdi:monitor-off'')}}'
      icon_color: '{{ iif(is_state(''switch.workstation'', ''on''), ''purple'', ''disabled'')}}'
      primary: Workstation
      secondary: '{{ iif(is_state(''switch.workstation'', ''on''), (states.sensor.workstation_power.state
        + " W"), ''Off'')}}'
      type: custom:mushroom-template-card
    - badge_color: ''
      badge_icon: ''
      card_mod:
        style: "ha-state-icon {\n  {{'animation: charge 1s linear 1000;' if not is_state('sensor.charger_power',\
          \ '0.0')}}\n}\n@keyframes charge {\n  0%, 10%, 20%, 30%, 40%, 50%, 60%,\
          \ 70%, 80%, 90%, 100% { transform: translate(0, 0); }\n  5% { transform:\
          \ translate({{ range(-10, 10) | random / 10 }}px, {{ range(-10, 10) | random\
          \ / 10 }}px); }\n  15% { transform: translate({{ range(-10, 10) | random\
          \ / 10 }}px, {{ range(-10, 10) | random / 10 }}px); }\n  25% { transform:\
          \ translate({{ range(-10, 10) | random / 10 }}px, {{ range(-10, 10) | random\
          \ / 10 }}px); }\n  35% { transform: translate({{ range(-10, 10) | random\
          \ / 10 }}px, {{ range(-10, 10) | random / 10 }}px); }\n  45% { transform:\
          \ translate({{ range(-10, 10) | random / 10 }}px, {{ range(-10, 10) | random\
          \ / 10 }}px); }\n  55% { transform: translate({{ range(-10, 10) | random\
          \ / 10 }}px, {{ range(-10, 10) | random / 10 }}px); }\n  65% { transform:\
          \ translate({{ range(-10, 10) | random / 10 }}px, {{ range(-10, 10) | random\
          \ / 10 }}px); }\n  75% { transform: translate({{ range(-10, 10) | random\
          \ / 10 }}px, {{ range(-10, 10) | random / 10 }}px); }\n  85% { transform:\
          \ translate({{ range(-10, 10) | random / 10 }}px, {{ range(-10, 10) | random\
          \ / 10 }}px); }\n  95% { transform: translate({{ range(-10, 10) | random\
          \ / 10 }}px, {{ range(-10, 10) | random / 10 }}px); }\n}\n"
      double_tap_action:
        action: more-info
      entity: sensor.charger_power
      icon: '{{ iif(is_state(''switch.charger'', ''on''), iif(is_state(''sensor.charger_power'',
        ''0.0''), ''mdi:power-plug'', ''mdi:lightning-bolt''), ''mdi:power-plug-off'')}}'
      icon_color: '{{ iif(is_state(''switch.charger'', ''on''), iif(is_state(''sensor.charger_power'',
        ''0.0''), ''disabled'', ''yellow''), ''disabled'')}}'
      primary: Charger
      secondary: '{{ iif(is_state(''switch.charger'', ''on''), (states.sensor.charger_power.state
        + " W"), ''Off'')}}'
      tap_action:
        action: call-service
        data: {}
        service: homeassistant.toggle
        target:
          entity_id: switch.charger
      type: custom:mushroom-template-card
    - badge_color: ''
      badge_icon: ''
      card_mod:
        style:
          mushroom-shape-icon$: ".shape {\n  {{'--shape-animation: ping 2s 1000;'\
            \ if is_state ('switch.bed_warmer', 'on')}}\n}\n@keyframes ping {\n  0%\
            \ { box-shadow: 0 0 0 0 rgba(var(--rgb-red), 1); }\n  100% { box-shadow:\
            \ 0 0 5px 10px transparent; }\n}\n"
      double_tap_action:
        action: more-info
      entity: switch.bed_warmer
      icon: '{{ iif(is_state(''switch.bed_warmer'', ''on''), ''phu:elec_blanket'',
        ''mdi:power-plug-off-outline'')}}'
      icon_color: '{{ iif(is_state(''switch.bed_warmer'', ''on''), iif(is_state(''sensor.bed_warmer_power'',
        ''0.0''), ''green'', ''red''), ''disabled'')}}'
      primary: Bed Warmer
      secondary: '{{ iif(is_state(''switch.bed_warmer'', ''on''), (states.sensor.bed_warmer_power.state
        + " W"), ''Off'')}}'
      tap_action:
        action: call-service
        data: {}
        service: homeassistant.toggle
        target:
          entity_id: switch.bed_warmer
      type: custom:mushroom-template-card
    - cards:
      - double_tap_action:
          action: more-info
        entity: cover.curtains
        fill_container: false
        hold_action:
          action: more-info
        name: Curtains
        primary_info: name
        secondary_info: state
        show_buttons_control: false
        show_position_control: false
        show_tilt_position_control: false
        type: custom:mushroom-cover-card
      - alignment: end
        card_mod:
          style: "ha-card {\n  padding-top: 12px;\n  padding-right: 25px;\n}\n"
        chips:
        - icon: mdi:curtains-closed
          icon_color: blue
          tap_action:
            action: call-service
            service: cover.close_cover
            target:
              entity_id: cover.curtains
          type: action
        - icon: mdi:curtains
          icon_color: blue
          tap_action:
            action: call-service
            service: cover.open_cover
            target:
              entity_id: cover.curtains
          type: action
        type: custom:mushroom-chips-card
      mode: horizontal
      type: custom:stack-in-card
    - card_mod:
        style: "mushroom-shape-icon {      \n  {% if is_state(config.entity, 'heat_cool')\
          \ %}\n    --card-mod-icon: mdi:fire;\n    animation: heat 2s 1000; \n  {%\
          \ endif %}\n  display: flex;\n}   \n@keyframes heat {\n  0%, 100% { --shape-color:\
          \ rgba(var(--rgb-red), 0.1); --icon-color: rgba(var(--rgb-red), 1); }\n\
          \  10%, 90% { --icon-color: rgba(var(--rgb-red), 0.8); }\n  20%, 80% { --icon-color:\
          \ rgba(var(--rgb-red), 0.6); }\n  30%, 70% { --icon-color: rgba(var(--rgb-red),\
          \ 0.4); }\n  40%, 60% { --icon-color: rgba(var(--rgb-red), 0.2); }\n  50%\
          \ { --icon-color: rgba(var(--rgb-red), 0); }\n}\n"
      collapsible_controls: true
      entity: climate.heater
      fill_container: false
      hvac_modes:
      - heat_cool
      - heat
      show_temperature_control: true
      type: custom:mushroom-climate-card
    - card:
        card_mod:
          style: "ha-card {\n  {% set r = state_attr(config.entity, 'rgb_color')[0]\
            \ %}\n  {% set g = state_attr(config.entity, 'rgb_color')[1] %}\n  {%\
            \ set b = state_attr(config.entity, 'rgb_color')[2] %}\n  background:\
            \ rgba( {{r}}, {{g}}, {{b}}, 0.2 );\n}\n"
        collapsible_controls: true
        entity: light.heater
        name: Heater Light
        show_brightness_control: false
        show_color_control: true
        show_color_temp_control: false
        type: custom:mushroom-light-card
        use_light_color: true
      conditions:
      - entity: climate.heater
        state_not: 'off'
      type: conditional
    - cards:
      - card_mod:
          style: "ha-card {\n  {% set r = state_attr(config.entity, 'rgb_color')[0]\
            \ %}\n  {% set g = state_attr(config.entity, 'rgb_color')[1] %}\n  {%\
            \ set b = state_attr(config.entity, 'rgb_color')[2] %}\n  background:\
            \ rgba( {{r}}, {{g}}, {{b}}, 0.1 );\n}\n"
        entity: light.diffuser_light
        icon: phu:essential-oil-diffuser-alt
        icon_color: blue-grey
        name: Diffuser
        tap_action:
          action: call-service
          data: {}
          service: switch.toggle
          target:
            entity_id: switch.diffuser
        type: custom:mushroom-light-card
        use_light_color: true
      - card:
          alignment: center
          chips:
          - content: High
            entity: select.mist_mode
            icon: mdi:weather-windy
            icon_color: '{{ iif(is_state(''select.mist_mode'', ''High''), ''green'',
              ''disabled'') }}'
            tap_action:
              action: call-service
              data:
                option: High
              service: select.select_option
              target:
                entity_id: select.mist_mode
            type: template
          - content: Low
            entity: select.mist_mode
            icon: mdi:weather-windy
            icon_color: '{{ iif(is_state(''select.mist_mode'', ''Low''), ''blue'',
              ''disabled'') }}'
            tap_action:
              action: call-service
              data:
                option: Low
              service: select.select_option
              target:
                entity_id: select.mist_mode
            type: template
          - content_info: none
            entity: light.diffuser_light
            type: light
            use_light_color: true
          - content_info: name
            entity: light.diffuser_light
            name: Gradient
            tap_action:
              action: call-service
              data:
                option: Gradient
              service: select.select_option
              target:
                entity_id: select.light_mode
            type: light
            use_light_color: true
          - content_info: name
            entity: light.diffuser_light
            name: Fixed
            tap_action:
              action: call-service
              data:
                option: Fixed
              service: select.select_option
              target:
                entity_id: select.light_mode
            type: light
            use_light_color: true
          type: custom:mushroom-chips-card
        conditions:
        - condition: state
          entity: switch.diffuser
          state: 'on'
        type: conditional
      type: vertical-stack
    type: vertical-stack
    view_layout:
      column: 2
  - custom_fields:
      date:
        card:
          alignment: center
          chips:
          - content_info: none
            entity: sensor.calvin_and_hobbes
            icon: mdi:shuffle-variant
            icon_color: accent
            tap_action:
              action: call-service
              service: homeassistant.update_entity
              target:
                entity_id: sensor.calvin_and_hobbes
            type: entity
          - content: '{{ as_timestamp(strptime(states.sensor.calvin_and_hobbes.attributes.publishedDate,
              ''%Y/%m/%d'')) | timestamp_custom(''%-d %b, %Y'') }}'
            double_tap_action:
              action: none
            hold_action:
              action: none
            tap_action:
              action: none
            type: template
          type: custom:mushroom-chips-card
      item:
        card:
          double_tap_action:
            action: url
            url_path: '[[[ return entity.state ]]]'
          entity: sensor.calvin_and_hobbes
          entity_picture: '[[[ return entity.state ]]]'
          hold_action:
            action: url
            url_path: '[[[ return entity.state ]]]'
          show_entity_picture: true
          show_name: false
          size: 100%
          styles:
            card:
            - padding: 0px
            - border-radius: 0px
          tap_action:
            action: navigate
            navigation_path: /lovelace/calvinandhobbes
          type: custom:button-card
    entity: sensor.calvin_and_hobbes
    show_icon: false
    show_name: false
    styles:
      card:
      - padding: 0px
      - border-radius: 0px
      grid:
      - grid-template-areas: '"item item" "date date"'
    type: custom:button-card
    view_layout:
      column: 1
  - styles:
      --mdc-icon-size: 25px
      --mdc-tab-color-default: var(--primary-text-color)
      --mdc-tab-text-label-color-default: var(--primary-text-color)
    tabs:
    - attributes:
        icon: mdi:spotify
      card:
        cards:
        - card:
            collapsible_controls: false
            double_tap_action:
              action: none
            entity: media_player.spotify
            hold_action:
              action: none
            media_controls: []
            secondary_info: none
            show_volume_level: false
            tap_action:
              action: none
            type: custom:mushroom-media-player-card
            use_media_info: false
            volume_controls: []
          conditions:
          - condition: state
            entity: media_player.spotify
            state: idle
          type: conditional
        - card:
            card_mod:
              style: "ha-card:before {\n  content: \"\";\n  position: absolute;\n\
                \  height: 100%;\n  width: 100%;\n  {% if not is_state('media_player.spotify',\
                \ 'idle') %}\n    background: url( '{{ state_attr('media_player.spotify',\
                \ \"entity_picture\") }}' ) center no-repeat;\n  {% endif %} \n  filter:\
                \ blur(250px) saturate(400%);\n  background-size: full;\n}\n"
            cards:
            - card_mod:
                style: "mushroom-shape-icon {\n  \n  display: flex;\n  {% set media_type\
                  \ = state_attr(config.entity, 'media_content_type') %}\n  {% if\
                  \ media_type == 'music' %}\n    --card-mod-icon: mdi:speaker;\n\
                  \    --card-mod-icon-color: rgba(var(--rgb-green));\n    --shape-color:\
                  \ rgba(var(--rgb-green), 0.2);\n    animation: beat 1.3s ease-out\
                  \ infinite both;\n  {% else %}\n    --card-mod-icon: mdi:spotify;\n\
                  \  {% endif %}\n}\n@keyframes flicker {\n  0%, 31.98%, 32.98%, 34.98%,\
                  \ 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%,\
                  \ 100% { --icon-color: rgba(var(--rgb-green), 1); }\n  32%, 33%,\
                  \ 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color:\
                  \ rgba(var(--rgb-green), 0.6); }\n}\n@keyframes beat {\n  0%, 60%\
                  \ { --shape-color: rgba(var(--rgb-green), 0.2);--icon-symbol-size:\
                  \ 21px; }\n  5%, 17%, 57% { --shape-color: rgba(var(--rgb-green),\
                  \ 0.2); --icon-symbol-size: 22px; }\n  10%, 20%, 51% { --shape-color:\
                  \ rgba(var(--rgb-green), 0.2); --icon-symbol-size: 23px; }\n  25%,\
                  \ 45% { --shape-color: rgba(var(--rgb-green), 0.2); --icon-symbol-size:\
                  \ 24px; }\n  30%, 39% { --shape-color: rgba(var(--rgb-green), 0.2);\
                  \ --icon-symbol-size: 25px; }\n  33% { --shape-color: rgba(var(--rgb-green),\
                  \ 0.2); --icon-symbol-size: 26px; }\n  100% {--shape-color: rgba(var(--rgb-green),\
                  \ 0.2);}\n}\nha-card {\n  --ha-card-border-width: 0;\n}\n"
              collapsible_controls: true
              double_tap_action:
                action: none
              entity: media_player.spotify
              fill_container: false
              hold_action:
                action: none
              media_controls:
              - play_pause_stop
              - next
              - previous
              show_volume_level: false
              tap_action:
                action: more-info
              type: custom:mushroom-media-player-card
              use_media_info: true
              volume_controls:
              - volume_set
            - artwork: full-cover
              card_mod:
                style:
                  .: "ha-card {\n  margin: 0px 0px 0px;\n  --mmp-progress-height:\
                    \ 8px !important;\n  --mmp-accent-color: rgb(var(--rgb-green-color));\n\
                    \  --mmp-border-radius: 15px !important;\n  --ha-card-border-width:\
                    \ 0;\n}        \n"
                  mmp-progress$: "paper-progress {\n  {{ '--paper-progress-container-color:\
                    \ rgba(var(--rgb-indigo-color), 0.2) !important;' if is_state(config.entity,\
                    \ 'playing') }}\n}\n"
              entity: media_player.spotify
              group: true
              hide:
                controls: true
                icon: true
                info: true
                name: true
                power: true
                progress: false
                runtime: true
                source: true
                state_label: true
                volume: true
              more_info: false
              type: custom:mini-media-player
            type: custom:stack-in-card
          conditions:
          - condition: state
            entity: media_player.spotify
            state_not: idle
          type: conditional
        type: vertical-stack
      styles:
        --mdc-theme-primary: lightgreen
    - attributes:
        icon: mdi:link
      card:
        content: '{{(states.media_player.spotify.attributes.media_content_id) | replace
          ("spotify:track:", "https://open.spotify.com/track/")}}'
        type: markdown
      styles:
        --mdc-theme-primary: yellow
    - attributes:
        icon: mdi:playlist-music
      card:
        account: default
        always_play_random_song: true
        default_device: Friday
        display_style: list
        grid_center_covers: true
        height: 400
        hide_currently_playing: true
        hide_top_header: true
        hide_warning: true
        limit: 40
        playlist_type: default
        spotify_entity: media_player.spotify
        type: custom:spotify-card-v2
      styles:
        --mdc-theme-primary: '#00cc99'
    - attributes:
        icon: mdi:speaker-multiple
      card:
        cards:
        - artwork: material
          entity: media_player.pavan_s_nest_hub
          group: true
          type: custom:mini-media-player
        - artwork: material
          entity: media_player.friday
          group: true
          type: custom:mini-media-player
        type: vertical-stack
      styles:
        --mdc-theme-primary: '#ff66ff'
    type: custom:tabbed-card
    view_layout:
      column: 3
  - card:
      entity: todo.my_tasks
      type: shopping-list
    conditions:
    - condition: screen
      media_query: '(min-width: 768px)'
    type: conditional
    view_layout:
      column: 3
  - cards:
    - collapsible_controls: true
      double_tap_action:
        action: toggle
      entity: media_player.google_tv
      fill_container: true
      hold_action:
        action: more-info
      icon: ''
      media_controls: []
      name: Google TV
      primary_info: name
      secondary_info: state
      show_volume_level: true
      tap_action:
        action: more-info
      type: custom:mushroom-media-player-card
      use_media_info: true
      volume_controls: []
    - collapsible_controls: true
      entity: light.tv_led_strip
      icon: mdi:led-strip-variant
      name: LED Strip
      show_brightness_control: true
      show_color_control: true
      type: custom:mushroom-light-card
    - card:
        cards:
        - custom_actions:
          - icon: mdi:power
            name: power
            styles: ":host {\n  --icon-color: crimson;\n}"
            tap_action:
              action: key
              key: POWER
            type: button
          - autofill_entity_id: true
            haptics: false
            icon: ''
            label: '{{ (value * 100 ) /4 | int }}'
            name: slider
            range:
            - 0
            - 1
            step: 0.01
            styles: ":host {\n  height: 30px;\n  border-radius: 20px;  \n  --color:\
              \ #4285F4;\n  --background-height: 20px;\n  --thumb-border-radius: 0;\n\
              }\n.icon {\n  display: none;\n}\n.label {\n  {% if not states(config.entity,\
              \ 'on') %}\n  display: none;\n  {% endif %}\n  transform: var(--icon-transform);\n\
              \  font-size: 14px;\n  color: var(--primary-text-color);\n}\n.tooltip\
              \ {\n  display: none;\n}"
            tap_action:
              action: perform-action
              data:
                volume_level: '{{ value | float }}'
              perform_action: media_player.volume_set
            type: slider
            value_attribute: volume_level
            value_from_hass_delay: 100
            vertical: false
          custom_icons: []
          keyboard_id: media_player.google_tv
          media_player_id: media_player.google_tv
          remote_id: remote.google_tv
          rows:
          - - power
            - home
          - - slider
            - volume_mute
          styles: "remote-button {\n  --size: 35px;\n  color: var(--secondary-text-color);\n\
            }\n"
          type: custom:android-tv-card
        - entities:
          - card_type: horizontal-stack
            cards:
            - entity: media_player.google_tv
              entity_picture: /local/icons/netflix.png
              tap_action:
                service: media_player.select_source
                service_data:
                  entity_id: media_player.google_tv
                  source: Netflix
              template: logo_button
              type: custom:button-card
            - entity: media_player.google_tv
              entity_picture: /local/icons/prime.png
              tap_action:
                service: media_player.select_source
                service_data:
                  entity_id: media_player.google_tv
                  source: Prime Video
              template: logo_button
              type: custom:button-card
            - entity: media_player.google_tv
              entity_picture: /local/icons/youtube.png
              tap_action:
                service: media_player.select_source
                service_data:
                  entity_id: media_player.google_tv
                  source: YouTube
              template: logo_button
              type: custom:button-card
            type: custom:hui-element
          - card_type: horizontal-stack
            cards:
            - entity: media_player.google_tv
              entity_picture: /local/icons/plex.png
              tap_action:
                service: media_player.select_source
                service_data:
                  entity_id: media_player.google_tv
                  source: Plex
              template: logo_button
              type: custom:button-card
            - entity: media_player.google_tv
              entity_picture: /local/icons/disney.png
              tap_action:
                service: media_player.select_source
                service_data:
                  entity_id: media_player.google_tv
                  source: Disney+ Hotstar
              template: logo_button
              type: custom:button-card
            - entity: media_player.google_tv
              entity_picture: /local/icons/spotify.png
              tap_action:
                service: media_player.select_source
                service_data:
                  entity_id: media_player.google_tv
                  source: Spotify
              template: logo_button
              type: custom:button-card
            type: custom:hui-element
          - card_type: horizontal-stack
            cards:
            - entity: media_player.google_tv
              entity_picture: /local/icons/JioCinema.png
              styles:
                entity_picture:
                - width: 80%
              tap_action:
                service: media_player.select_source
                service_data:
                  entity_id: media_player.google_tv
                  source: Jio Cinema
              template: logo_button
              type: custom:button-card
            - entity: media_player.google_tv
              entity_picture: /local/icons/jellyfin.png
              styles:
                entity_picture:
                - width: 70%
              tap_action:
                service: media_player.select_source
                service_data:
                  entity_id: media_player.google_tv
                  source: Jellyfin
              template: logo_button
              type: custom:button-card
            - entity: media_player.google_tv
              entity_picture: /local/icons/expressvpn.png
              styles:
                entity_picture:
                - width: 70%
              tap_action:
                service: media_player.select_source
                service_data:
                  entity_id: media_player.google_tv
                  source: Express VPN
              template: logo_button
              type: custom:button-card
            type: custom:hui-element
          show_header_toggle: false
          type: entities
        - custom_actions:
          - icon: mdi:checkbox-blank-circle
            name: center
            styles: ":host {\n  --icon-color: rgb(94, 94, 94);\n  --size: 100px;\n\
              \  background: rgb(31, 31, 31);\n  border-radius: 100px;\n  margin:\
              \ -70px;\n  padding: 70px;\n}"
            tap_action:
              action: key
              key: DPAD_CENTER
            type: button
          - hold_action:
              action: repeat
            icon: mdi:chevron-up
            name: up
            styles: ":host {\n  --icon-color: rgb(197, 199, 197);\n  z-index: 2;\n\
              \  top: 55px;\n  height: 90px;\n  width: 300px;\n}"
            tap_action:
              action: key
              key: DPAD_UP
            type: button
          - hold_action:
              action: repeat
            icon: mdi:chevron-down
            name: down
            styles: ":host {\n  --icon-color: rgb(197, 199, 197);\n  z-index: 2;\n\
              \  bottom: 55px;\n  height: 90px;\n  width: 300px;\n}"
            tap_action:
              action: key
              key: DPAD_DOWN
            type: button
          - hold_action:
              action: repeat
            icon: mdi:chevron-left
            name: left
            styles: ":host {\n  --icon-color: rgb(197, 199, 197);\n  z-index: 2;\n\
              \  left: 30px;\n  height: 170px;\n  width: 90px;\n}"
            tap_action:
              action: key
              key: DPAD_LEFT
            type: button
          - hold_action:
              action: repeat
            icon: mdi:chevron-right
            name: right
            styles: ":host {\n  --icon-color: rgb(197, 199, 197);\n  z-index: 2;\n\
              \  right: 30px;\n  height: 170px;\n  width: 90px;\n}"
            tap_action:
              action: key
              key: DPAD_RIGHT
            type: button
          keyboard_id: media_player.google_tv
          media_player_id: media_player.google_tv
          remote_id: remote.google_tv_remote
          rows:
          - - back
            - keyboard
            - settings
          - - '{{ "navigation_buttons" if match_media("(min-width: 1000px)") else
              "touchpad" }}'
            - - captions
              - null
              - audio_track
              - null
              - info
          - - previous
            - play_pause
            - next
          styles: "#row-1 {\n  justify-content: justify;\n}\n#row-2 {\n  justify-content:\
            \ center;\n}\n#row-3 {\n  justify-content: justify;\n}\n#row-4 {\n  justify-content:\
            \ justify;\n}\n#row-5 {\n  justify-content: right;\n}\n#row-6 {\n  justify-content:\
            \ justify;\n}\nremote-button {\n  --size: 35px;\n  color: var(--secondary-text-color);\n\
            }\n"
          type: custom:android-tv-card
        type: custom:stack-in-card
      conditions:
      - condition: state
        entity: media_player.google_tv
        state_not: 'off'
      - condition: state
        entity: media_player.google_tv
        state_not: unavailable
      type: conditional
    type: vertical-stack
    view_layout:
      column: 3
  - cards:
    - back_open: true
      bg_blur: '40'
      card_type: pop-up
      close_on_click: true
      hash: '#sun'
      hide_backdrop: false
      margin: 18px
      show_header: false
      type: custom:bubble-card
      width_desktop: 800px
    - type: custom:horizon-card
    type: vertical-stack
  - cards:
    - back_open: true
      bg_blur: 0
      card_type: pop-up
      close_on_click: true
      hash: '#sleepsounds'
      margin: 18px
      margin_top_mobile: 00px
      scrolling_effect: false
      show_header: false
      show_icon: false
      show_name: false
      sub_button: []
      type: custom:bubble-card
      width_desktop: 800px
    - cards:
      - entity: script.play_ocean_sounds
        icon: mdi:waves
        icon_color: brown
        primary: Play Ocean Sounds
        secondary: ''
        tap_action:
          action: toggle
        type: custom:mushroom-template-card
      - entity: script.play_thunder_sounds
        icon: mdi:lightning-bolt
        icon_color: yellow
        primary: Play Thunder Sounds
        secondary: ''
        tap_action:
          action: toggle
        type: custom:mushroom-template-card
      - entity: script.play_night_sounds
        icon: mdi:weather-night
        icon_color: black
        primary: Play Night Sounds
        secondary: ''
        tap_action:
          action: toggle
        type: custom:mushroom-template-card
      - entity: script.play_river_sounds
        icon: mdi:water
        icon_color: light-blue
        primary: Play River Sounds
        secondary: ''
        tap_action:
          action: toggle
        type: custom:mushroom-template-card
      - entity: script.play_forest_sounds
        icon: mdi:forest-outline
        icon_color: green
        primary: Play Forest Sounds
        secondary: ''
        tap_action:
          action: toggle
        type: custom:mushroom-template-card
      - entity: script.play_white_noise
        icon: mdi:wave
        icon_color: grey
        primary: Play White Noise
        secondary: ''
        tap_action:
          action: toggle
        type: custom:mushroom-template-card
      type: custom:stack-in-card
    type: vertical-stack
  - cards:
    - back_open: true
      bg_blur: 0
      bg_opacity: '50'
      card_type: pop-up
      close_on_click: true
      hash: '#moon'
      hide_backdrop: false
      margin: 18px
      show_header: false
      type: custom:bubble-card
      width_desktop: 800px
    - card_mod:
        style: "ha-card \n  .moon-img-svg {\n    width: 140px;\n    height: 140px;\n\
          \  }\n  .primary {\n    font-weight: bold;\n  }\n  .secondary {\n    font-weight:\
          \ bold;\n  }\n.entity-row {\n    flex-direction: column;\n}\n"
      entity: sensor.moon
      language: en
      type: custom:tsmoon-card
    type: vertical-stack
  - cards:
    - back_open: true
      bg_blur: 0
      card_type: pop-up
      close_on_click: true
      hash: '#weather'
      margin: 18px
      margin_top_mobile: 00px
      scrolling_effect: false
      show_header: false
      show_icon: false
      show_name: false
      type: custom:bubble-card
      width_desktop: 800px
    - current: true
      details: true
      entity: weather.forecast_home
      forecast: true
      forecast_type: hourly
      hourly_forecast: true
      number_of_forecasts: '7'
      type: custom:weather-card
    type: vertical-stack
  - cards:
    - back_open: true
      bg_blur: '40'
      card_type: pop-up
      close_on_click: false
      hash: '#phone'
      icon: mdi:google
      name: Phone Controls
      shadow_opacity: '0'
      show_header: true
      type: custom:bubble-card
      width_desktop: 800px
    - cards:
      - cards:
        - entity: sensor.pixel8pro_battery_level
          fill_container: true
          icon_color: green
          layout: vertical
          name: Battery
          type: custom:mushroom-entity-card
        - entity: binary_sensor.pixel8pro_is_charging
          fill_container: true
          layout: vertical
          name: Charging
          type: custom:mushroom-entity-card
        - entity: binary_sensor.pixel8pro_wifi_state
          fill_container: true
          layout: vertical
          name: Wi-Fi
          type: custom:mushroom-entity-card
        - entity: binary_sensor.pixel8pro_bluetooth_state
          fill_container: true
          layout: vertical
          name: Bluetooth
          type: custom:mushroom-entity-card
        - entity: binary_sensor.pixel8pro_mobile_data
          fill_container: true
          layout: vertical
          name: Data
          type: custom:mushroom-entity-card
        mode: horizontal
        type: custom:stack-in-card
      - cards:
        - alignment: center
          chips:
          - content: "{% if is_state('device_tracker.pixel_8_pro', 'home') %}\n  Connected\n\
              {% else %}\n  Not Connected\n{% endif %}"
            double_tap_action:
              action: none
            entity: device_tracker.pixel_8_pro
            hold_action:
              action: none
            icon: '{% if is_state(''device_tracker.pixel_8_pro'', ''home'') %}

              mdi:cellphone-wireless

              {% else %}

              mdi:cellphone-off

              {% endif %}'
            icon_color: '{% if is_state(''device_tracker.pixel_8_pro'', ''home'')
              %}

              blue

              {% else %}

              white

              {% endif %}

              '
            tap_action:
              action: none
            type: template
          - entity: button.pixel_8_pro_update_location
            icon_color: light-green
            tap_action:
              action: toggle
            type: entity
          - entity: button.pixel_8_pro_update_sensors
            icon_color: brown
            tap_action:
              action: toggle
            type: entity
          - content_info: none
            entity: button.pixel_8_pro_open_mobile_app
            icon_color: primary
            tap_action:
              action: toggle
            type: entity
          - content_info: name
            entity: device_tracker.pixel8pro
            icon: mdi:volume-high
            icon_color: red
            name: Find My Phone
            tap_action:
              action: call-service
              data:
                data:
                  channel: alarm_stream
                  priority: high
                  ttl: 0
                message: Find My Phone
              service: notify.mobile_app_pixel8pro
            type: entity
          - picture: https://nzb360.com/assets/img/logo.svg
            tap_action:
              action: perform-action
              data:
                data:
                  package_name: com.kevinforeman.nzb360
                message: command_launch_app
              perform_action: notify.mobile_app_pixel8pro
              target: {}
            type: template
          - picture: https://play-lh.googleusercontent.com/NntMALIH4odanPPYSqUOXsX8zy_giiK2olJiqkcxwFIOOspVrhMi9Miv6LYdRnKIg-3R
            tap_action:
              action: perform-action
              data:
                data:
                  package_name: com.google.android.apps.authenticator2
                message: command_launch_app
              perform_action: notify.mobile_app_pixel8pro
              target: {}
            type: template
          type: custom:mushroom-chips-card
        - alignment: center
          chips:
          - icon: mdi:volume-low
            icon_color: '{{ iif(is_state(''sensor.pixel8pro_ringer_mode'', ''silent''),
              ''red'', ''disabled'') }}'
            tap_action:
              action: call-service
              data:
                option: silent
              service: select.select_option
              target:
                entity_id: select.pixel_8_pro_ringer_mode
            type: template
          - icon: mdi:vibrate
            icon_color: '{{ iif(is_state(''sensor.pixel8pro_ringer_mode'', ''vibrate''),
              ''red'', ''disabled'') }}'
            tap_action:
              action: call-service
              data:
                option: vibrate
              service: select.select_option
              target:
                entity_id: select.pixel_8_pro_ringer_mode
            type: template
          - icon: mdi:volume-high
            icon_color: '{{ iif(is_state(''sensor.pixel8pro_ringer_mode'', ''normal''),
              ''red'', ''disabled'') }}'
            tap_action:
              action: call-service
              data:
                option: normal
              service: select.select_option
              target:
                entity_id: select.pixel_8_pro_ringer_mode
            type: template
          type: custom:mushroom-chips-card
        type: vertical-stack
      - entities:
        - entity: number.pixel_8_pro_media_volume
          name: Media Volume
          secondary_info: last-updated
        - entity: number.pixel_8_pro_call_volume
          name: Call Volume
          secondary_info: last-updated
        - entity: number.pixel_8_pro_ringer_volume
          name: Ring Volume
          secondary_info: last-changed
        - entity: number.pixel_8_pro_notification_volume
          name: Notification Volume
          secondary_info: last-updated
        - entity: number.pixel_8_pro_alarm_volume
          name: Alarm Volume
          secondary_info: last-updated
        show_header_toggle: false
        state_color: true
        type: entities
      type: vertical-stack
    type: vertical-stack
  - cards:
    - back_open: true
      bg_blur: 0
      card_type: pop-up
      close_on_click: true
      hash: '#sleep'
      margin: 18px
      margin_top_mobile: 00px
      scrolling_effect: false
      show_header: false
      show_icon: false
      show_name: false
      type: custom:bubble-card
      width_desktop: 800px
    - content: "<hr>\n<h3>\U0001F4A4Total Sleep: {{ ((states.sensor.sleep.state |\
        \ float) // 3600) | int }} hours, {{ (((states.sensor.sleep.state | float)\
        \ % 3600) // 60) | int }} minutes \U0001F6CC</h3>\n\n**{{ ((states.sensor.light_sleep.state\
        \ | float) + (states.sensor.deep_sleep.state | float) + (states.sensor.rem_sleep.state\
        \ | float)) // 3600 | int }} hours{{ \", \" if (((states.sensor.light_sleep.state\
        \ | float) + (states.sensor.deep_sleep.state | float) + (states.sensor.rem_sleep.state\
        \ | float)) % 3600) // 60 != 0 else \"\" }}{{ (((states.sensor.light_sleep.state\
        \ | float) + (states.sensor.deep_sleep.state | float) + (states.sensor.rem_sleep.state\
        \ | float)) % 3600) // 60 | int if (((states.sensor.light_sleep.state | float)\
        \ + (states.sensor.deep_sleep.state | float) + (states.sensor.rem_sleep.state\
        \ | float)) % 3600) // 60 != 0 else \"\" }} minutes**\n\n  - \U0001F4F1 **Time\
        \ to sleep:**\n\_\_\_\_\U0001F552 {% if ((states.sensor.awake_time.state |\
        \ float) // 3600) | int > 0 %}{{ ((states.sensor.awake_time.state | float)\
        \ // 3600) | int }} hours, {% endif %}{{ (((states.sensor.awake_time.state\
        \ | float) % 3600) // 60) | int }} minutes\n    \n  - \U0001F315 **Light Sleep:**\n\
        \_\_\_\_\U0001F552 {% if ((states.sensor.light_sleep.state | float) // 3600)\
        \ | int > 0 %}{{ ((states.sensor.light_sleep.state | float) // 3600) | int\
        \ }} hours, {% endif %}{{ (((states.sensor.light_sleep.state | float) % 3600)\
        \ // 60) | int }} minutes\n\n  - \U0001F311 **Deep Sleep:**\n\_\_\_\_\U0001F552\
        \  {% if ((states.sensor.deep_sleep.state | float) // 3600) | int > 0 %}{{\
        \ ((states.sensor.deep_sleep.state | float) // 3600) | int }} hours, {% endif\
        \ %}{{ (((states.sensor.deep_sleep.state | float) % 3600) // 60) | int }}\
        \ minutes\n\n  - \U0001F300 **REM Sleep:**\n\_\_\_\_\U0001F552 {% if ((states.sensor.rem_sleep.state\
        \ | float) // 3600) | int > 0 %}{{ ((states.sensor.rem_sleep.state | float)\
        \ // 3600) | int }} hours, {% endif %}{{ (((states.sensor.rem_sleep.state\
        \ | float) % 3600) // 60) | int }} minutes"
      title: "\U0001F319 Last Night's Sleep Summary"
      type: markdown
      view_layout:
        column: 1
    type: vertical-stack
  icon: mdi:castle
  layout:
    max_cols: 3
    width: 350
  path: den
  type: custom:vertical-layout
  visible:
  - user: 74f7e2ffd3594037b1a2fc4de82d9fea
  - user: 5e94cdd892054937b560071ed6662cb8
- cards: []
  icon: mdi:test-tube
  path: testing
  sections:
  - cards:
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n --icon-size: 100px;\n background: transparent !important;\n\
              \ border: 0px !important;\n align-items: center;\n}\nmushroom-badge-icon\
              \ {\n  --badge-icon-size: 0px;\n  --badge-size: 0px;\n}          \n"
            mushroom-shape-avatar$: ".picture {\n  display: flex;\n  border-radius:\
              \ 50%;\n  {% if states(config.entity) == 'home' %}\n    animation: pinggreen\
              \ 4s infinite;\n    border: 4px solid #77c66e\n  {% else %}\n    animation:\
              \ pingred 4s infinite;\n    border: 4px solid #EF4F1A\n  {% endif %}\n\
              }\n@keyframes pinggreen {\n  0% {box-shadow: 0 0 8px 8px rgba(var(--rgb-green),\
              \ 0.9);}\n  100% {box-shadow: 0 0 5px 20px transparent;}\n}\n@keyframes\
              \ pingred {\n  0% {box-shadow: 0 0 8px 8px rgba(var(--rgb-red), 0.9);}\n\
              \  100% {box-shadow: 0 0 5px 20px transparent;}\n}\n"
        entity: person.darragh_clerkin
        icon_type: entity-picture
        layout: vertical
        primary_info: none
        secondary_info: none
        type: custom:mushroom-person-card
      - card_mod:
          style:
            .: "ha-card {\n --icon-size: 100px;\n background: transparent !important;\n\
              \ border: 0px !important;\n align-items: center;\n}\nmushroom-badge-icon\
              \ {\n  --badge-icon-size: 0px;\n  --badge-size: 0px;\n} \n"
            mushroom-shape-avatar$: ".picture {\n  display: flex;\n  border-radius:\
              \ 50%;\n  {% if states(config.entity) == 'home' %}\n    animation: pinggreen\
              \ 4s infinite;\n    border: 4px solid #77c66e\n  {% else %}\n    animation:\
              \ pingred 4s infinite;\n    border: 4px solid #EF4F1A\n  {% endif %}\n\
              }\n@keyframes pinggreen {\n  0% {box-shadow: 0 0 8px 8px rgba(var(--rgb-green),\
              \ 0.9);}\n  100% {box-shadow: 0 0 5px 20px transparent;}\n}\n@keyframes\
              \ pingred {\n  0% {box-shadow: 0 0 8px 8px rgba(var(--rgb-red), 0.9);}\n\
              \  100% {box-shadow: 0 0 5px 20px transparent;}\n}\n"
        entity: person.pavanthanuj
        icon_type: entity-picture
        primary_info: none
        secondary_info: none
        type: custom:mushroom-person-card
      - card_mod:
          style:
            .: "ha-card {\n --icon-size: 100px;\n background: transparent !important;\n\
              \ border: 0px !important;\n align-items: center;\n}\nmushroom-badge-icon\
              \ {\n  --badge-icon-size: 0px;\n  --badge-size: 0px;\n} \n"
            mushroom-shape-avatar$: ".picture {\n  display: flex;\n  border-radius:\
              \ 50%;\n  {% if states(config.entity) == 'home' %}\n    animation: pinggreen\
              \ 4s infinite;\n    border: 4px solid #77c66e\n  {% else %}\n    animation:\
              \ pingred 4s infinite;\n    border: 4px solid #EF4F1A\n  {% endif %}\n\
              }\n@keyframes pinggreen {\n  0% {box-shadow: 0 0 8px 8px rgba(var(--rgb-green),\
              \ 0.9);}\n  100% {box-shadow: 0 0 5px 20px transparent;}\n}\n@keyframes\
              \ pingred {\n  0% {box-shadow: 0 0 8px 8px rgba(var(--rgb-red), 0.9);}\n\
              \  100% {box-shadow: 0 0 5px 20px transparent;}\n}\n"
        entity: person.hilary_harris
        icon_type: entity-picture
        primary_info: none
        secondary_info: none
        type: custom:mushroom-person-card
      columns: 3
      square: false
      type: grid
      view_layout:
        column: 1
    - cards:
      - cards:
        - color_type: blank-card
          styles:
            card:
            - background-color: var(--primary-background-color)
            - border: none
          type: custom:button-card
        - aspect_ratio: 1/1
          entity: person.darragh_clerkin
          hold_action:
            action: navigate
            navigation_path: /lovelace/darragh
          show_entity_picture: true
          show_name: false
          state:
          - styles:
              entity_picture:
              - border-color: '#77c66e'
            value: home
          - styles:
              entity_picture:
              - border-color: '#EF4F1A'
              - opacity: 0.8
            value: not_home
          - styles:
              entity_picture:
              - border-color: deepskyblue
            value: Work
          styles:
            card:
            - --ha-card-background: transparent;
            - --ha-card-box-shadow: none;
            entity_picture:
            - clip-path: circle()
            - width: 80%
            - border: 5px solid
            - border-radius: 900px
            - opacity: 1
          tap_action:
            action: none
          type: custom:button-card
        - aspect_ratio: 1/1
          entity: person.pavanthanuj
          hold_action:
            action: navigate
            navigation_path: /lovelace/den
          show_entity_picture: true
          show_name: false
          state:
          - styles:
              entity_picture:
              - border-color: '#77c66e'
            value: home
          - styles:
              entity_picture:
              - border-color: '#EF4F1A'
              - opacity: 0.8
            value: not_home
          - styles:
              entity_picture:
              - border-color: deepskyblue
            value: Work
          styles:
            card:
            - --ha-card-background: transparent;
            - --ha-card-box-shadow: none;
            entity_picture:
            - clip-path: circle()
            - width: 80%
            - border: 5px solid
            - border-radius: 900px
            - opacity: 1
          tap_action:
            action: none
          type: custom:button-card
        - aspect_ratio: 1/1
          entity: person.hilary_harris
          hold_action:
            action: navigate
            navigation_path: /lovelace/hilary
          show_entity_picture: true
          show_name: false
          state:
          - styles:
              entity_picture:
              - border-color: '#77c66e'
            value: home
          - styles:
              entity_picture:
              - border-color: '#EF4F1A'
              - opacity: 0.8
            value: not_home
          - styles:
              entity_picture:
              - border-color: deepskyblue
            value: Work
          styles:
            card:
            - --ha-card-background: transparent;
            - --ha-card-box-shadow: none;
            entity_picture:
            - clip-path: circle()
            - width: 80%
            - border: 5px solid
            - border-radius: 900px
          tap_action:
            action: none
          type: custom:button-card
        - color_type: blank-card
          styles:
            card:
            - background-color: var(--primary-background-color)
            - border: none
          type: custom:button-card
        type: horizontal-stack
        view_layout:
          column: 1
      type: vertical-stack
      view_layout:
        column: 1
    type: grid
  - cards:
    - cards:
      - card_mod:
          style: 'ha-card { border-radius: 8px;background: none;box-shadow: none;--ha-card-border-width:
            0; } :host { flex: 1 1 0% !important; min-width: min-content !important;
            }

            '
        entity: sensor.speedtest_download
        primary_info: state
        secondary_info: name
        type: custom:mushroom-entity-card
      - card_mod:
          style: ":host { flex: 2 2 0% !important; } \nha-card {border-radius: 25px\
            \ !important;background: none;box-shadow: none;--ha-card-border-width:\
            \ 0;padding-top: 0 !important;padding-right: 12px !important;-webkit-mask-image:\
            \ linear-gradient(to left, rgba(0,0,0,1) 85%, rgba(0,0,0,0));}\n"
        entities:
        - entity: sensor.speedtest_download
        hours_to_show: 24
        line_width: 2
        show:
          fill: fade
          icon: false
          legend: false
          name: false
          state: false
        type: custom:mini-graph-card
      mode: horizontal
      type: custom:stack-in-card
    - cards:
      - artwork: material
        card_mod:
          style: ":host {\n  --mini-media-player-background-opacity: 1;\n  --mini-media-player-progress-height:\
            \ 10px;\n  --mini-media-player-name-font-weight: 800;\n  --mini-media-player-scale:1.1;\n\
            \  }\n  @media screen and (max-width: 600px) {\n    :host {\n      --mini-media-player-scale:\
            \ 1.2;\n    }   \n  }\nha-card {\n    border: 0px !important;\n    box-shadow:\
            \ none !important;\n    height: 250px !important; \n  }\n"
        entity: media_player.spotify
        info: scroll
        sound_mode: full
        source: icon
        toggle_power: true
        type: custom:mini-media-player
        volume_stateless: false
      grid_options:
        columns: 12
        rows: 4
      type: vertical-stack
    type: grid
  - cards:
    - button_type: state
      card_layout: large
      card_type: button
      entity: light.light
      grid_options:
        columns: 9
        rows: 3
      icon: mdi:skull
      name: Den
      scrolling_effect: false
      show_icon: true
      show_name: true
      show_state: false
      styles: ".bubble-button-card-container {\n    height: 200px !important;\n  }\n\
        .bubble-icon {\n  color: white !important;\n  --mdc-icon-size: px !important;\n\
        \  width: 80px !important;\n  height: 80px !important;\n}\n.bubble-icon-container\
        \ {\n  background: red;\n}\n.bubble-sub-button {\n  height: 50px !important;\n\
        \  width: 50px !important;\n  color: white !important;\n  background: black;\n\
        }\n"
      sub_button:
      - entity: light.light
        icon: phu:bulb-group
        show_attribute: false
        show_background: true
        show_last_changed: false
        show_state: false
      - entity: light.light
      type: custom:bubble-card
    - artwork: full-cover
      entity: media_player.google_tv_streamer_unified
      group: false
      info: short
      type: custom:mini-media-player
      volume_stateless: false
    - card_mod:
        style: "ha-card {\n  height: 200px !important;\n  border-style: dotted;\n\
          \  border-width: 2px;\n}\n"
      cards:
      - custom_fields:
          cards:
            card:
              cards:
              - card_mod:
                  style:
                    .: "ha-card {\n  width: px;\n  top: -40px;\n  background: none;\n\
                      }\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
                      }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
                      \ center bottom;\n  transition: 0s;\n}\n"
                    mushroom-shape-icon$: ".shape {\n  {{'--shape-animation: ping\
                      \ 2s 1000;' if is_state ('switch.boiler', 'on')}}\n}\nha-state-icon\
                      \ {\n  {{'animation: boil 600ms 1000;' if is_state('switch.boiler','off')}}\n\
                      }\n@keyframes ping {\n  0% { box-shadow: 0 0 0 0 rgba(var(--rgb-red),\
                      \ 1); }\n  100% { box-shadow: 0 0 5px 15px transparent; }\n\
                      }      \n@keyframes boil {\n  0%, 100% { transform: translate({{\
                      \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random\
                      \ / 10 }}px) rotate({{ range(-15, 15) | random }}deg); }\n \
                      \ 10% { transform: translate({{ range(-20, 20) | random / 10\
                      \ }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{ range(-15,\
                      \ 15) | random }}deg); clip-path: polygon(0 0, 66% 10%, 67%\
                      \ 30%, 88% 52%, 100% 100%, 0 100%); }\n  20% { transform: translate({{\
                      \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random\
                      \ / 10 }}px) rotate({{ range(-15, 15) | random }}deg); }\n \
                      \ 30% { transform: translate({{ range(-20, 20) | random / 10\
                      \ }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{ range(-15,\
                      \ 15) | random }}deg); }\n  40% { transform: translate({{ range(-20,\
                      \ 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
                      \ rotate({{ range(-15, 15) | random }}deg); }\n  50% { transform:\
                      \ translate({{ range(-20, 20) | random / 10 }}px, {{ range(-20,\
                      \ 20) | random / 10 }}px) rotate({{ range(-15, 15) | random\
                      \ }}deg); }\n  60% { transform: translate({{ range(-20, 20)\
                      \ | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
                      \ rotate({{ range(-15, 15) | random }}deg); }\n  70% { transform:\
                      \ translate({{ range(-20, 20) | random / 10 }}px, {{ range(-20,\
                      \ 20) | random / 10 }}px) rotate({{ range(-15, 15) | random\
                      \ }}deg); }\n  80% { transform: translate({{ range(-20, 20)\
                      \ | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
                      \ rotate({{ range(-15, 15) | random }}deg); }\n  90% { transform:\
                      \ translate({{ range(-20, 20) | random / 10 }}px, {{ range(-20,\
                      \ 20) | random / 10 }}px) rotate({{ range(-15, 15) | random\
                      \ }}deg); }\n} \n"
                entity: switch.boiler
                hold_action:
                  action: more-info
                icon: '{{ iif(is_state(''switch.boiler'', ''on''), ''mdi:water-boiler'',
                  ''mdi:water-boiler-off'')}}'
                icon_color: '{{ iif(is_state(''switch.boiler'', ''on''), ''red'',
                  ''disabled'')}}'
                primary: null
                secondary: null
                tap_action:
                  action: toggle
                type: custom:mushroom-template-card
              - card_mod:
                  style:
                    .: "ha-card {\n  width: px;\n  top: -50px;\n  background: none;\n\
                      }\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
                      }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
                      \ center bottom;\n  transition: 0s;\n}\n"
                entity: climate.heater
                hold_action:
                  action: more-info
                icon: '{{ iif(is_state(''climate.heater'', ''heat_cool''), ''mdi:fire'',
                  ''mdi:fire-off'')}}

                  '
                icon_color: '{{ iif(is_state(''climate.heater'', ''heat_cool''), ''red'',
                  ''disabled'')}}

                  '
                primary: null
                secondary: null
                tap_action:
                  action: toggle
                type: custom:mushroom-template-card
              - card_mod:
                  style:
                    .: "ha-card {\n  width: px;\n  top: -60px;\n  background: none;\n\
                      }\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
                      }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
                      \ center bottom;\n  transition: 0s;\n}\n"
                entity: switch.bed_warmer
                hold_action:
                  action: more-info
                icon: phu:elec_blanket
                icon_color: '{{ iif(is_state(config.entity, ''on''), ''red'', ''disabled'')}}

                  '
                primary: null
                secondary: null
                tap_action:
                  action: toggle
                type: custom:mushroom-template-card
              type: vertical-stack
          switch:
            card:
              badge_color: ''
              badge_icon: ''
              card_mod:
                style:
                  .: "ha-card {\n  border: 0px !important;\n  box-shadow: none !important;\n\
                    \  background: none;\n}\n:host {\n  --mush-icon-size: 160px;\n\
                    }\n"
                  mushroom-shape-icon$: ".shape {\n  position: relative;\n  left:\
                    \ -25px;\n  top: -45px;\n}\n"
              entity: switch.heating
              icon: '{{ iif(is_state(config.entity, ''on''), ''mdi:radiator'', ''mdi:radiator-off'')}}'
              icon_color: '{{ iif(is_state(config.entity, ''on''), ''red'', ''disabled'')}}'
              type: custom:mushroom-template-card
          timer:
            card:
              default: name
              entity: timer.heating
              states:
                active:
                  bar_radius: 10px
                  card_mod:
                    style: "ha-card {\n  background: none;\n  top: -20px;\n  margin-left:\
                      \ -15px;\n  font-size: 30px !important;\n}\n.primary {\n  font-size:\
                      \ 20px !important;\n  font-weight: 1 !important;\n  margin-left:\
                      \ 3px;\n  margin-top: px !important;\n}\n.bar-container {\n\
                      \  padding: 0px !important;\n  margin-top: 5px !important;\n\
                      }\n"
                  entity: timer.heating
                  invert: true
                  mushroom:
                    color: red
                    icon_type: none
                  name: Heating
                  text_width: 0px
                  type: custom:timer-bar-card
                name:
                  card_mod:
                    style:
                      .: "ha-card {\n  background: none;\n}\n"
                      mushroom-state-info$: ".primary {\n  font-size: 20px !important;\n\
                        \  position: relative;\n  top: -25px;\n  overflow: visible\
                        \ !important;\n}\n.secondary {\n  font-size: 12px !important;\n\
                        \  position: relative;\n  top: -15px;\n  overflow: visible\
                        \ !important;\n}\n"
                  entity: switch.heating
                  primary: Heating
                  secondary: 'Turned {{ states.switch.heating.state }} at {{ (as_timestamp(states.switch.heating.last_changed)
                    | timestamp_custom(''%-I:%M %p'')) }}

                    '
                  type: custom:mushroom-template-card
              type: custom:state-switch
        styles:
          grid:
          - grid-template-areas: '"timer cards" "switch cards"'
          - grid-template-columns: 70% 30%
          - grid-template-rows: 95px
          - text-align: left
        tap_action:
          action: call-service
          service: switch.toggle
          service_data:
            entity_id: switch.heating
        type: custom:button-card
      grid_options:
        columns: 6
        rows: 200px
      type: custom:stack-in-card
    - card_mod:
        style: "ha-card {\n  height: 200px !important;\n  border-style: dotted;\n\
          \  border-width: 2px;\n}\n"
      cards:
      - custom_fields:
          cards:
            card:
              cards:
              - card_mod:
                  style:
                    .: "ha-card {\n  width: px;\n  top: -40px;\n  background: none;\n\
                      }\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
                      }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
                      \ center bottom;\n  transition: 0s;\n}\n"
                    mushroom-shape-icon$: ".shape {\n  {{'--shape-animation: ping\
                      \ 2s 1000;' if is_state ('switch.boiler', 'on')}}\n}\nha-state-icon\
                      \ {\n  {{'animation: boil 600ms 1000;' if is_state('switch.boiler','off')}}\n\
                      }\n@keyframes ping {\n  0% { box-shadow: 0 0 0 0 rgba(var(--rgb-red),\
                      \ 1); }\n  100% { box-shadow: 0 0 5px 15px transparent; }\n\
                      }      \n@keyframes boil {\n  0%, 100% { transform: translate({{\
                      \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random\
                      \ / 10 }}px) rotate({{ range(-15, 15) | random }}deg); }\n \
                      \ 10% { transform: translate({{ range(-20, 20) | random / 10\
                      \ }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{ range(-15,\
                      \ 15) | random }}deg); clip-path: polygon(0 0, 66% 10%, 67%\
                      \ 30%, 88% 52%, 100% 100%, 0 100%); }\n  20% { transform: translate({{\
                      \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random\
                      \ / 10 }}px) rotate({{ range(-15, 15) | random }}deg); }\n \
                      \ 30% { transform: translate({{ range(-20, 20) | random / 10\
                      \ }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{ range(-15,\
                      \ 15) | random }}deg); }\n  40% { transform: translate({{ range(-20,\
                      \ 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
                      \ rotate({{ range(-15, 15) | random }}deg); }\n  50% { transform:\
                      \ translate({{ range(-20, 20) | random / 10 }}px, {{ range(-20,\
                      \ 20) | random / 10 }}px) rotate({{ range(-15, 15) | random\
                      \ }}deg); }\n  60% { transform: translate({{ range(-20, 20)\
                      \ | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
                      \ rotate({{ range(-15, 15) | random }}deg); }\n  70% { transform:\
                      \ translate({{ range(-20, 20) | random / 10 }}px, {{ range(-20,\
                      \ 20) | random / 10 }}px) rotate({{ range(-15, 15) | random\
                      \ }}deg); }\n  80% { transform: translate({{ range(-20, 20)\
                      \ | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px)\
                      \ rotate({{ range(-15, 15) | random }}deg); }\n  90% { transform:\
                      \ translate({{ range(-20, 20) | random / 10 }}px, {{ range(-20,\
                      \ 20) | random / 10 }}px) rotate({{ range(-15, 15) | random\
                      \ }}deg); }\n} \n"
                entity: switch.boiler
                hold_action:
                  action: more-info
                icon: '{{ iif(is_state(''switch.boiler'', ''on''), ''mdi:water-boiler'',
                  ''mdi:water-boiler-off'')}}'
                icon_color: '{{ iif(is_state(''switch.boiler'', ''on''), ''red'',
                  ''disabled'')}}'
                primary: null
                secondary: null
                tap_action:
                  action: toggle
                type: custom:mushroom-template-card
              - card_mod:
                  style:
                    .: "ha-card {\n  width: px;\n  top: -50px;\n  background: none;\n\
                      }\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
                      }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
                      \ center bottom;\n  transition: 0s;\n}\n"
                entity: climate.heater
                hold_action:
                  action: more-info
                icon: '{{ iif(is_state(''climate.heater'', ''heat_cool''), ''mdi:fire'',
                  ''mdi:fire-off'')}}

                  '
                icon_color: '{{ iif(is_state(''climate.heater'', ''heat_cool''), ''red'',
                  ''disabled'')}}

                  '
                primary: null
                secondary: null
                tap_action:
                  action: toggle
                type: custom:mushroom-template-card
              - card_mod:
                  style:
                    .: "ha-card {\n  width: px;\n  top: -60px;\n  background: none;\n\
                      }\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
                      }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
                      \ center bottom;\n  transition: 0s;\n}\n"
                entity: switch.bed_warmer
                hold_action:
                  action: more-info
                icon: phu:elec_blanket
                icon_color: '{{ iif(is_state(config.entity, ''on''), ''red'', ''disabled'')}}

                  '
                primary: null
                secondary: null
                tap_action:
                  action: toggle
                type: custom:mushroom-template-card
              type: vertical-stack
          switch:
            card:
              badge_color: ''
              badge_icon: ''
              card_mod:
                style:
                  .: "ha-card {\n  border: 0px !important;\n  box-shadow: none !important;\n\
                    \  background: none;\n}\n:host {\n  --mush-icon-size: 160px;\n\
                    }\n"
                  mushroom-shape-icon$: ".shape {\n  position: relative;\n  left:\
                    \ -25px;\n  top: -45px;\n}\n"
              entity: switch.heating
              icon: '{{ iif(is_state(config.entity, ''on''), ''mdi:radiator'', ''mdi:radiator-off'')}}'
              icon_color: '{{ iif(is_state(config.entity, ''on''), ''red'', ''disabled'')}}'
              type: custom:mushroom-template-card
          timer:
            card:
              default: name
              entity: timer.heating
              states:
                idle:
                  bar_radius: 10px
                  card_mod:
                    style: "ha-card {\n  background: none;\n  top: -20px;\n  margin-left:\
                      \ -15px;\n  font-size: 30px !important;\n}\n.primary {\n  font-size:\
                      \ 20px !important;\n  font-weight: 1 !important;\n  margin-left:\
                      \ 15px;\n  margin-top: 10px !important;\n}\n.bar-container {\n\
                      \  padding: 0px !important;\n  margin-top: px !important;\n\
                      }\n"
                  entity: timer.heating
                  invert: true
                  mushroom:
                    color: red
                    icon_type: none
                  name: Heating
                  text_width: 0px
                  type: custom:timer-bar-card
                name:
                  card_mod:
                    style:
                      .: "ha-card {\n  background: none;\n}\n"
                      mushroom-state-info$: ".primary {\n  font-size: 20px !important;\n\
                        \  position: relative;\n  top: -25px;\n  overflow: visible\
                        \ !important;\n}\n.secondary {\n  font-size: 12px !important;\n\
                        \  position: relative;\n  top: -15px;\n  overflow: visible\
                        \ !important;\n}\n"
                  entity: switch.heating
                  primary: Heating
                  secondary: 'Turned {{ states.switch.heating.state }} at {{ (as_timestamp(states.switch.heating.last_changed)
                    | timestamp_custom(''%-I:%M %p'')) }}

                    '
                  type: custom:mushroom-template-card
              type: custom:state-switch
        styles:
          grid:
          - grid-template-areas: '"timer cards" "switch cards"'
          - grid-template-columns: 70% 30%
          - grid-template-rows: 95px
          - text-align: left
        tap_action:
          action: call-service
          service: switch.toggle
          service_data:
            entity_id: switch.heating
        type: custom:button-card
      grid_options:
        columns: 6
        rows: 200px
      type: custom:stack-in-card
    - card_mod:
        .: "text-center {\n  font-size: 50px !important;\n}\n"
        style: "ha-card {\n  height: 200px !important;\n  border-style: dotted;\n\
          \  border-width: 2px;\n  font-size: 10px;\n}\n"
      cards:
      - card_type: countdown
        date_locale: in
        f1_font: true
        show_raceinf: true
        show_raceinfo: false
        type: custom:formulaone-card
      grid_options:
        columns: 6
        rows: 200px
      type: custom:stack-in-card
    column_span: 1
    type: grid
  - cards:
    - heading: New section
      type: heading
    - card_mod:
        style: "ha-card {\n  height: 200px !important;\n  border-style: dotted;\n\
          \  border-width: 2px;\n}\n"
      cards:
      - badge_color: ''
        badge_icon: ''
        card_mod:
          style:
            .: "ha-card {\n  border: 0px !important;\n  box-shadow: none !important;\n\
              \  background: none;\n}\n:host {\n  --mush-icon-size: 160px;\n}\n"
            mushroom-shape-icon$: ".shape {\n  position: relative;\n  left: -40px;\n\
              \  top: 60px;\n}\n"
            mushroom-state-info$: ".primary {\n  font-size: 20px !important;\n  position:\
              \ relative;\n  top: -60px;\n  left: -160px;\n  overflow: visible !important;\n\
              }\n.secondary {\n  font-size: 12px !important;\n  position: relative;\n\
              \  overflow: visible !important;\n  top: -50px;\n  left: -160px;\n}\n"
        entity: switch.heating
        icon: "{% if is_state('switch.heating', 'on') %}\n  mdi:radiator\n{%else%}\n\
          \   mdi:radiator-off\n{% endif %}"
        icon_color: "{% if is_state('switch.heating', 'on') %}\n  red\n{%else%}\n\
          \  disabled\n{% endif %}"
        layout: horizontal
        primary: Heating
        secondary: "Turned {{ states.switch.heating.state }} at\n  {{ (as_timestamp(states.switch.heating.last_changed)\
          \ | timestamp_custom('%-I:%M %p')) }}\n"
        tap_action:
          action: toggle
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -190px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
            mushroom-shape-icon$: ".shape {\n  {{'--shape-animation: ping 2s 1000;'\
              \ if is_state ('switch.boiler', 'on')}}\n}\nha-state-icon {\n  {{'animation:\
              \ boil 600ms 1000;' if is_state('switch.boiler','off')}}\n}\n@keyframes\
              \ ping {\n  0% { box-shadow: 0 0 0 0 rgba(var(--rgb-red), 1); }\n  100%\
              \ { box-shadow: 0 0 5px 15px transparent; }\n}      \n@keyframes boil\
              \ {\n  0%, 100% { transform: translate({{ range(-20, 20) | random /\
              \ 10 }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{ range(-15,\
              \ 15) | random }}deg); }\n  10% { transform: translate({{ range(-20,\
              \ 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{\
              \ range(-15, 15) | random }}deg); clip-path: polygon(0 0, 66% 10%, 67%\
              \ 30%, 88% 52%, 100% 100%, 0 100%); }\n  20% { transform: translate({{\
              \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random / 10\
              \ }}px) rotate({{ range(-15, 15) | random }}deg); }\n  30% { transform:\
              \ translate({{ range(-20, 20) | random / 10 }}px, {{ range(-20, 20)\
              \ | random / 10 }}px) rotate({{ range(-15, 15) | random }}deg); }\n\
              \  40% { transform: translate({{ range(-20, 20) | random / 10 }}px,\
              \ {{ range(-20, 20) | random / 10 }}px) rotate({{ range(-15, 15) | random\
              \ }}deg); }\n  50% { transform: translate({{ range(-20, 20) | random\
              \ / 10 }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{ range(-15,\
              \ 15) | random }}deg); }\n  60% { transform: translate({{ range(-20,\
              \ 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{\
              \ range(-15, 15) | random }}deg); }\n  70% { transform: translate({{\
              \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random / 10\
              \ }}px) rotate({{ range(-15, 15) | random }}deg); }\n  80% { transform:\
              \ translate({{ range(-20, 20) | random / 10 }}px, {{ range(-20, 20)\
              \ | random / 10 }}px) rotate({{ range(-15, 15) | random }}deg); }\n\
              \  90% { transform: translate({{ range(-20, 20) | random / 10 }}px,\
              \ {{ range(-20, 20) | random / 10 }}px) rotate({{ range(-15, 15) | random\
              \ }}deg); }\n} \n"
        entity: switch.boiler
        hold_action:
          action: more-info
        icon: '{{ iif(is_state(''switch.boiler'', ''on''), ''mdi:water-boiler'', ''mdi:water-boiler-off'')}}'
        icon_color: '{{ iif(is_state(''switch.boiler'', ''on''), ''red'', ''disabled'')}}'
        primary: null
        secondary: null
        tap_action:
          action: toggle
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -200px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
        entity: climate.heater
        hold_action:
          action: more-info
        icon: '{{ iif(is_state(''climate.heater'', ''heat_cool''), ''mdi:fire'', ''mdi:fire-off'')}}

          '
        icon_color: '{{ iif(is_state(''climate.heater'', ''heat_cool''), ''red'',
          ''disabled'')}}

          '
        primary: null
        secondary: null
        tap_action:
          action: toggle
        type: custom:mushroom-template-card
      - card_mod:
          style:
            .: "ha-card {\n  width: px;\n  margin-left: 65%;\n  top: -210px;\n  background:\
              \ none;\n}\n:host {\n  --mush-icon-size: 45px;\n  perspective: 900px;\n\
              }\nha-card:active {\n  transform: rotateX(25deg);\n  transform-origin:\
              \ center bottom;\n  transition: 0s;\n}\n"
        entity: switch.bed_warmer
        hold_action:
          action: more-info
        icon: phu:elec_blanket
        icon_color: '{{ iif(is_state(config.entity, ''on''), ''red'', ''disabled'')}}

          '
        primary: null
        secondary: null
        tap_action:
          action: toggle
        type: custom:mushroom-template-card
      grid_options:
        columns: 6
        rows: 200px
      type: custom:stack-in-card
    type: grid
  - cards:
    - heading: New section
      type: heading
    - cameras:
      - camera_entity: camera.doorbell
        triggers:
          entities:
          - binary_sensor.porch_motion_occupancy
          motion: true
      media_gallery:
        controls:
          thumbnails:
            size: 175
      media_viewer:
        zoomable: true
      menu:
        alignment: left
        buttons:
          cameras:
            enabled: false
          frigate:
            enabled: false
          image:
            enabled: false
          media_player:
            enabled: false
          substreams:
            enabled: false
        position: bottom
        style: outside
      timeline: {}
      type: custom:frigate-card
      view:
        default: live
        update_force: true
    type: grid
  visible: []
- badges:
  - entity: weather.home
    show_entity_picture: false
    state_content:
    - state
    - temperature
    type: entity
  - entity: camera.doorbell_fluent
    show_entity_picture: true
    state_content: last_changed
    type: entity
  cards:
  - artwork: full-cover
    entity: media_player.darragh_s_nest_hub
    type: custom:mini-media-player
  icon: mdi:face-man
  path: darragh
  visible:
  - user: 03fac29e97844166b40187a8b4c09ded
- cards:
  - cards:
    - card_mod:
        style: "ha-card {\n  {% set r = state_attr(config.entity, 'rgb_color')[0]\
          \ %}\n  {% set g = state_attr(config.entity, 'rgb_color')[1] %}\n  {% set\
          \ b = state_attr(config.entity, 'rgb_color')[2] %}\n  background: rgba(\
          \ {{r}}, {{g}}, {{b}}, 0.2 );\n}\n"
      collapsible_controls: true
      entity: light.bed_lamp
      hold_action:
        action: more-info
      show_brightness_control: true
      show_color_control: true
      show_color_temp_control: true
      type: custom:mushroom-light-card
      use_light_color: true
    - cards:
      - card_mod:
          style: "ha-card {\n  {% set r = state_attr(config.entity, 'rgb_color')[0]\
            \ %}\n  {% set g = state_attr(config.entity, 'rgb_color')[1] %}\n  {%\
            \ set b = state_attr(config.entity, 'rgb_color')[2] %}\n  background:\
            \ rgba( {{r}}, {{g}}, {{b}}, 0.2 );\n}\n"
        collapsible_controls: true
        entity: light.bed_lamp_1
        show_brightness_control: true
        show_color_control: true
        show_color_temp_control: true
        type: custom:mushroom-light-card
        use_light_color: true
      - card_mod:
          style: "ha-card {\n  {% set r = state_attr(config.entity, 'rgb_color')[0]\
            \ %}\n  {% set g = state_attr(config.entity, 'rgb_color')[1] %}\n  {%\
            \ set b = state_attr(config.entity, 'rgb_color')[2] %}\n  background:\
            \ rgba( {{r}}, {{g}}, {{b}}, 0.2 );\n}\n"
        collapsible_controls: true
        entity: light.bed_lamp_2
        show_brightness_control: true
        show_color_control: true
        show_color_temp_control: true
        type: custom:mushroom-light-card
        use_light_color: true
      type: horizontal-stack
    - badge_color: ''
      badge_icon: ''
      entity: switch.heater
      icon: '{{ iif(is_state(''binary_sensor.heater'', ''on''), ''mdi:radiator'',
        ''mdi:radiator-off'')}}'
      icon_color: '{{ ''red'' if is_state(''binary_sensor.heater'', ''on'') else ''yellow''
        if is_state(''switch.heater'', ''on'') else ''disabled'' }}'
      multiline_secondary: false
      primary: Heater
      secondary: Turned {{states.binary_sensor.heater.state}} at {{(as_timestamp(states.binary_sensor.heater.last_changed)
        | timestamp_custom('%-I:%M %p'))}} | {{states.sensor.heater_power.state}}
        W
      tap_action:
        action: call-service
        service: switch.toggle
        target:
          entity_id: switch.heater
      type: custom:mushroom-template-card
    - entity: switch.heating_blanket
      tap_action:
        action: toggle
      type: custom:mushroom-entity-card
    type: vertical-stack
    view_layout:
      column: 1
  - cards:
    - entity: media_player.samsung_tv
      type: custom:mushroom-media-player-card
    - card:
        custom_actions:
        - autofill_entity_id: true
          haptics: false
          icon: ''
          label: '{{ (value * 100 ) | int }}%'
          name: slider
          range:
          - 0
          - 1
          step: 0.01
          styles: ":host {\n  height: 30px;\n  border-radius: 20px;  \n  --color:\
            \ #4285F4;\n  --background-height: 20px;\n  --thumb-border-radius: 0;\n\
            }\n.icon {\n  display: none;\n}\n.label {\n  {% if not states(config.entity,\
            \ 'on') %}\n  display: none;\n  {% endif %}\n  transform: var(--icon-transform);\n\
            \  font-size: 14px;\n  color: var(--primary-text-color);\n}\n.tooltip\
            \ {\n  display: none;\n}"
          tap_action:
            action: perform-action
            data:
              volume_level: '{{ value | float }}'
            perform_action: media_player.volume_set
          type: slider
          value_attribute: volume_level
          value_from_hass_delay: 100
          vertical: false
        - icon: mdi:minus-circle-outline
          name: poweroff
          styles: ":host {\n  --icon-color: crimson;\n  --size: 35px;\n}         \
            \   "
          tap_action:
            action: perform-action
            data: {}
            perform_action: media_player.turn_off
            target:
              entity_id: media_player.samsung_tv
          type: button
        - icon: mdi:arrow-down-circle
          name: channel_down
          tap_action:
            action: none
            data:
              command: KEY_CHDOWN
            target:
              entity_id: remote.samsung_tv
          type: button
        - icon: mdi:arrow-up-circle
          name: channel_up
          tap_action:
            action: none
            data:
              command: KEY_CHUP
            target:
              entity_id: remote.samsung_tv
          type: button
        - icon: mdi:volume-mute
          name: volume_mute
          styles: ":host {\n  color: grey;\n  --size: 35px;\n}"
          tap_action:
            action: none
            data:
              command: KEY_MUTE
            target:
              entity_id: remote.samsung_tv
          type: button
        - icon: mdi:keyboard-backspace
          name: back
          tap_action:
            action: perform-action
            data:
              command: KEY_RETURN
            perform_action: remote.send_command
            target:
              entity_id: remote.samsung_tv
          type: button
        - icon: mdi:home
          name: home
          tap_action:
            action: perform-action
            data:
              command: KEY_HOME
            perform_action: remote.send_command
            target:
              entity_id: remote.samsung_tv
          type: button
        - icon: mdi:power
          name: power
          styles: ":host {\n  --icon-color: green;\n}"
          tap_action:
            action: perform-action
            data: {}
            perform_action: media_player.turn_on
            target:
              entity_id: media_player.samsung_tv
          type: button
        - hold_action:
            action: repeat
          icon: mdi:chevron-up
          name: up
          tap_action:
            action: perform-action
            data:
              command: KEY_UP
            perform_action: remote.send_command
            target:
              entity_id: remote.samsung_tv
          type: button
        - hold_action:
            action: repeat
          icon: mdi:chevron-down
          name: down
          tap_action:
            action: perform-action
            data:
              command: KEY_DOWN
            perform_action: remote.send_command
            target:
              entity_id: remote.samsung_tv
          type: button
        - hold_action:
            action: repeat
          icon: mdi:chevron-left
          name: left
          tap_action:
            action: perform-action
            data:
              command: KEY_LEFT
            perform_action: remote.send_command
            target:
              entity_id: remote.samsung_tv
          type: button
        - hold_action:
            action: repeat
          icon: mdi:chevron-right
          name: right
          tap_action:
            action: perform-action
            data:
              command: KEY_RIGHT
            perform_action: remote.send_command
            target:
              entity_id: remote.samsung_tv
          type: button
        - icon: mdi:checkbox-blank-circle
          name: center
          tap_action:
            action: perform-action
            data:
              command: KEY_ENTER
            perform_action: remote.send_command
            target:
              entity_id: remote.samsung_tv
          type: button
        media_player_id: media_player.samsung_tv
        rows:
        - - power
          - poweroff
        - - slider
          - volume_mute
        - - - channel_up
            - null
            - channel_down
          - dpad
          - - home
            - null
            - back
        type: custom:android-tv-card
      conditions:
      - condition: state
        entity: media_player.samsung_tv
        state: 'on'
      type: conditional
    type: vertical-stack
    view_layout:
      column: 2
  icon: mdi:face-woman-profile
  path: hilary
  type: custom:vertical-layout
  visible:
  - user: e07f5c6a76fd4886ad5d945ed22f6d4b
- cards:
  - hold_action:
      action: none
    image: https://github.com/n00bcodr/LMI-Weekly-Menu/blob/main/weekly_menu.jpg?raw=true
    tap_action:
      action: none
    type: picture
  icon: mdi:menu
  path: menu
  subview: true
  type: panel
  visible:
  - user: 74f7e2ffd3594037b1a2fc4de82d9fea
- cards:
  - anchor_id: home
    offset: -50
    strict_url_change: true
    type: custom:anchor-card
  - alignment: center
    chips:
    - type: spacer
    type: custom:mushroom-chips-card
  - card:
      alignment: center
      chips:
      - content_info: last-changed
        entity: binary_sensor.porch_motion_occupancy
        icon: mdi:doorbell-video
        icon_color: deep-orange
        name: Porch
        type: entity
      - content_info: last-changed
        entity: binary_sensor.hallway_motion_occupancy
        icon: mdi:coat-rack
        icon_color: teal
        name: Hallway
        type: entity
      - content_info: last-changed
        entity: binary_sensor.living_room_presence
        icon: mdi:sofa-outline
        icon_color: yellow
        name: Living Room
        type: entity
      - content_info: last-changed
        entity: binary_sensor.kitchen_presence
        icon: mdi:countertop-outline
        icon_color: teal
        name: Kitchen
        type: entity
      - entity: sensor.living_room_temperature
        icon_color: blue
        type: entity
        use_entity_picture: false
      - entity: binary_sensor.back_door_contact
        icon_color: red
        type: entity
      - chip:
          entity: weather.home
          show_conditions: true
          show_temperature: true
          type: weather
        conditions:
        - condition: user
          users:
          - 03fac29e97844166b40187a8b4c09ded
          - e07f5c6a76fd4886ad5d945ed22f6d4b
        type: conditional
      - entity: light.guest_lamp
        tap_action:
          action: toggle
        type: light
        use_light_color: true
      - content: '{{ iif(is_state(''switch.panel_heater'', ''on''), (states.sensor.panel_heater_power.state
          + " W"), ''Off'') }}'
        entity: switch.panel_heater
        icon: '{{ iif(is_state(''switch.panel_heater'', ''on''), ''mdi:radiator'',
          ''mdi:radiator-off'') }}'
        icon_color: '{{ iif(is_state(''switch.panel_heater'', ''on''), ''red'', ''white'')
          }}'
        tap_action:
          action: toggle
        type: template
      type: custom:mushroom-chips-card
    conditions:
    - condition: user
      users:
      - e07f5c6a76fd4886ad5d945ed22f6d4b
      - 03fac29e97844166b40187a8b4c09ded
      - 74f7e2ffd3594037b1a2fc4de82d9fea
    type: conditional
  - cards:
    - aspect_ratio: 1/1
      entity: person.darragh_clerkin
      hold_action:
        action: none
      show_entity_picture: true
      show_name: false
      state:
      - styles:
          entity_picture:
          - border-color: '#77c66e'
        value: home
      - styles:
          entity_picture:
          - border-color: '#EF4F1A'
          - opacity: 0.8
        value: not_home
      - styles:
          entity_picture:
          - border-color: deepskyblue
        value: Work
      styles:
        card:
        - --ha-card-background: transparent;
        - --ha-card-box-shadow: none;
        entity_picture:
        - clip-path: circle()
        - width: 80%
        - border: 5px solid
        - border-radius: 900px
        - opacity: 1
      tap_action:
        action: none
      type: custom:button-card
    - aspect_ratio: 1/1
      entity: person.pavanthanuj
      hold_action:
        action: none
      show_entity_picture: true
      show_name: false
      state:
      - styles:
          entity_picture:
          - border-color: '#77c66e'
        value: home
      - styles:
          entity_picture:
          - border-color: '#EF4F1A'
          - opacity: 0.8
        value: not_home
      - styles:
          entity_picture:
          - border-color: deepskyblue
        value: Work
      styles:
        card:
        - --ha-card-background: transparent;
        - --ha-card-box-shadow: none;
        entity_picture:
        - clip-path: circle()
        - width: 80%
        - border: 5px solid
        - border-radius: 900px
        - opacity: 1
      tap_action:
        action: none
      type: custom:button-card
    - aspect_ratio: 1/1
      entity: person.hilary_harris
      hold_action:
        action: none
      show_entity_picture: true
      show_name: false
      state:
      - styles:
          entity_picture:
          - border-color: '#77c66e'
        value: home
      - styles:
          entity_picture:
          - border-color: '#EF4F1A'
          - opacity: 0.8
        value: not_home
      - styles:
          entity_picture:
          - border-color: deepskyblue
        value: Work
      styles:
        card:
        - --ha-card-background: transparent;
        - --ha-card-box-shadow: none;
        entity_picture:
        - clip-path: circle()
        - width: 80%
        - border: 5px solid
        - border-radius: 900px
      tap_action:
        action: none
      type: custom:button-card
    columns: 3
    square: false
    type: grid
    view_layout:
      column: 1
  - card:
      cards:
      - alignment: center
        chips:
        - content: Utilities
          double_tap_action:
            action: none
          hold_action:
            action: none
          icon: mdi:power-plug
          icon_color: pink
          tap_action:
            action: navigate
            navigation_path: /lovelace/living-room?anchor=utilities
          type: template
        - content: Kitchen
          double_tap_action:
            action: none
          hold_action:
            action: none
          icon: mdi:fridge
          icon_color: orange
          tap_action:
            action: navigate
            navigation_path: /lovelace/living-room?anchor=kitchen
          type: template
        - content: Living Room
          double_tap_action:
            action: none
          hold_action:
            action: none
          icon: mdi:sofa
          icon_color: blue
          tap_action:
            action: navigate
            navigation_path: /lovelace/living-room?anchor=livingroom
          type: template
        - content: Media
          double_tap_action:
            action: none
          hold_action:
            action: none
          icon: mdi:television-classic
          icon_color: green
          tap_action:
            action: navigate
            navigation_path: /lovelace/living-room?anchor=media
          type: template
        - content: Hallway
          double_tap_action:
            action: none
          hold_action:
            action: none
          icon: mdi:coat-rack
          icon_color: purple
          tap_action:
            action: navigate
            navigation_path: /lovelace/living-room?anchor=hallway
          type: template
        - content: Doorbell
          double_tap_action:
            action: none
          hold_action:
            action: none
          icon: mdi:doorbell-video
          icon_color: blue-grey
          tap_action:
            action: navigate
            navigation_path: /lovelace/living-room?anchor=doorbell
          type: template
        - content: Bins
          double_tap_action:
            action: none
          hold_action:
            action: none
          icon: mdi:trash-can
          icon_color: brown
          tap_action:
            action: navigate
            navigation_path: /lovelace/living-room?anchor=bins
          type: template
        type: custom:mushroom-chips-card
      - alignment: center
        title: _____________________
        type: custom:mushroom-title-card
      type: vertical-stack
    conditions:
    - condition: screen
      media_query: '(min-width: 0px) and (max-width: 1023px)'
    type: conditional
  - cards:
    - anchor_id: utilities
      offset: -50
      strict_url_change: true
      timeout: 1ms
      type: custom:anchor-card
    - alignment: justify
      chips:
      - content: Utilities
        double_tap_action:
          action: none
        hold_action:
          action: none
        icon: mdi:power-plug
        icon_color: pink
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=home
        type: template
      - icon: mdi:arrow-up
        icon_color: grey
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=home
        type: template
      type: custom:mushroom-chips-card
    - cards:
      - custom_fields:
          switch:
            card:
              badge_color: ''
              badge_icon: ''
              card_mod:
                style:
                  mushroom-shape-icon$: ".shape {\n  {{'--shape-animation: ping 2s\
                    \ 1000;' if is_state ('switch.heating', 'on')}}\n}\n@keyframes\
                    \ ping {\n  0% { box-shadow: 0 0 0 0 rgba(var(--rgb-red), 1);\
                    \ }\n  100% { box-shadow: 0 0 5px 15px transparent; }\n}\n"
              entity: switch.heating
              icon: '{{ iif(is_state(''switch.heating'', ''on''), ''mdi:radiator'',
                ''mdi:radiator-off'')}}'
              icon_color: '{{ iif(is_state(''switch.heating'', ''on''), ''red'', ''disabled'')}}'
              multiline_secondary: false
              primary: Heating
              secondary: Turned {{states.switch.heating.state}} at {{(as_timestamp(states.switch.heating.last_changed)
                | timestamp_custom('%-I:%M %p'))}}
              type: custom:mushroom-template-card
          time:
            card:
              card:
                entity: timer.heating
                layout: icon_name_state2nd
                name: Turns off in
                show_icon: true
                show_name: true
                show_state: true
                styles:
                  card:
                  - box-shadow: none
                  icon:
                  - width: 20px
                  - height: 20px
                  - color: grey
                  name:
                  - font-size: 12px
                  - justify-self: start
                  state:
                  - font-size: 14px
                  - font-weight: bold
                  - justify-self: start
                type: custom:button-card
              conditions:
              - entity: timer.heating
                state_not: idle
              type: conditional
        styles:
          grid:
          - grid-template-areas: '''switch time'''
          - grid-template-columns: 75% 25%
          - grid-template-rows: 32px
          - text-align: left
        tap_action:
          action: call-service
          service: switch.toggle
          service_data:
            entity_id: switch.heating
        type: custom:button-card
      - card:
          bar_radius: 10px
          entity: timer.heating
          invert: true
          mushroom:
            color: red
            icon_type: none
            primary_info: none
          text_width: 50px
          type: custom:timer-bar-card
        conditions:
        - condition: state
          entity: timer.heating
          state_not: idle
        type: conditional
      type: custom:stack-in-card
    - badge_icon: ''
      card_mod:
        style:
          mushroom-shape-icon$: ".shape {\n  {{'--shape-animation: ping 2s 1000;'\
            \ if is_state ('switch.boiler', 'on')}}\n}\nha-state-icon {\n  {{'animation:\
            \ boil 600ms 1000;' if is_state('switch.boiler','off')}}\n}\n@keyframes\
            \ ping {\n  0% { box-shadow: 0 0 0 0 rgba(var(--rgb-red), 1); }\n  100%\
            \ { box-shadow: 0 0 5px 15px transparent; }\n}      \n@keyframes boil\
            \ {\n  0%, 100% { transform: translate({{ range(-20, 20) | random / 10\
            \ }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{ range(-15, 15)\
            \ | random }}deg); }\n  10% { transform: translate({{ range(-20, 20) |\
            \ random / 10 }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{ range(-15,\
            \ 15) | random }}deg); clip-path: polygon(0 0, 66% 10%, 67% 30%, 88% 52%,\
            \ 100% 100%, 0 100%); }\n  20% { transform: translate({{ range(-20, 20)\
            \ | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{\
            \ range(-15, 15) | random }}deg); }\n  30% { transform: translate({{ range(-20,\
            \ 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{\
            \ range(-15, 15) | random }}deg); }\n  40% { transform: translate({{ range(-20,\
            \ 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{\
            \ range(-15, 15) | random }}deg); }\n  50% { transform: translate({{ range(-20,\
            \ 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{\
            \ range(-15, 15) | random }}deg); }\n  60% { transform: translate({{ range(-20,\
            \ 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{\
            \ range(-15, 15) | random }}deg); }\n  70% { transform: translate({{ range(-20,\
            \ 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{\
            \ range(-15, 15) | random }}deg); }\n  80% { transform: translate({{ range(-20,\
            \ 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{\
            \ range(-15, 15) | random }}deg); }\n  90% { transform: translate({{ range(-20,\
            \ 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{\
            \ range(-15, 15) | random }}deg); }\n}  \n"
      entity: switch.boiler
      icon: '{{ iif(is_state(''switch.boiler'', ''on''), ''mdi:water-boiler'', ''mdi:water-boiler-off'')}}'
      icon_color: '{{ iif(is_state(''switch.boiler'', ''on''), ''red'', ''disabled'')}}'
      primary: Boiler
      secondary: 'Turned {{states.switch.boiler.state}} at

        {{(as_timestamp(states.switch.boiler.last_changed) |

        timestamp_custom(''%-I:%M %p''))}}'
      type: custom:mushroom-template-card
    - card:
        discover_existing: false
        display_options:
          icon: action
          primary_info: '{entity}: {action}'
          secondary_info:
          - relative-time
          - time
        exclude: []
        include:
        - switch.boiler
        sort_by:
        - state
        - relative-time
        time_step: 5
        title: false
        type: custom:scheduler-card
      conditions:
      - condition: user
        users:
        - 74f7e2ffd3594037b1a2fc4de82d9fea
      - condition: screen
        media_query: '(min-width: 768px)'
      type: conditional
    type: vertical-stack
    view_layout:
      column: 1
  - cards:
    - anchor_id: kitchen
      negative_margin: 13
      offset: -50
      strict_url_change: true
      timeout: 1ms
      transition: 0
      type: custom:anchor-card
    - alignment: justify
      chips:
      - content: Kitchen
        double_tap_action:
          action: none
        hold_action:
          action: none
        icon: mdi:countertop-outline
        icon_color: orange
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=home
        type: template
      - icon: mdi:arrow-up
        icon_color: grey
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=home
        type: template
      type: custom:mushroom-chips-card
    - custom_fields:
        switch:
          card:
            badge_color: ''
            badge_icon: ''
            card_mod:
              style: "ha-state-icon {\n  {{'animation: boil 600ms 1000;' if is_state('switch.kettle','on')}}\n\
                }\n@keyframes boil {\n  0%, 100% { transform: translate({{ range(-20,\
                \ 20) | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{\
                \ range(-15, 15) | random }}deg); }\n  10% { transform: translate({{\
                \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random /\
                \ 10 }}px) rotate({{ range(-15, 15) | random }}deg); clip-path: polygon(0\
                \ 0, 66% 10%, 67% 30%, 88% 52%, 100% 100%, 0 100%); }\n  20% { transform:\
                \ translate({{ range(-20, 20) | random / 10 }}px, {{ range(-20, 20)\
                \ | random / 10 }}px) rotate({{ range(-15, 15) | random }}deg); }\n\
                \  30% { transform: translate({{ range(-20, 20) | random / 10 }}px,\
                \ {{ range(-20, 20) | random / 10 }}px) rotate({{ range(-15, 15) |\
                \ random }}deg); }\n  40% { transform: translate({{ range(-20, 20)\
                \ | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{\
                \ range(-15, 15) | random }}deg); }\n  50% { transform: translate({{\
                \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random /\
                \ 10 }}px) rotate({{ range(-15, 15) | random }}deg); }\n  60% { transform:\
                \ translate({{ range(-20, 20) | random / 10 }}px, {{ range(-20, 20)\
                \ | random / 10 }}px) rotate({{ range(-15, 15) | random }}deg); }\n\
                \  70% { transform: translate({{ range(-20, 20) | random / 10 }}px,\
                \ {{ range(-20, 20) | random / 10 }}px) rotate({{ range(-15, 15) |\
                \ random }}deg); }\n  80% { transform: translate({{ range(-20, 20)\
                \ | random / 10 }}px, {{ range(-20, 20) | random / 10 }}px) rotate({{\
                \ range(-15, 15) | random }}deg); }\n  90% { transform: translate({{\
                \ range(-20, 20) | random / 10 }}px, {{ range(-20, 20) | random /\
                \ 10 }}px) rotate({{ range(-15, 15) | random }}deg); }\n}     \n"
            entity: switch.kettle
            icon: '{{ iif(is_state(''switch.kettle'', ''on''), ''mdi:kettle-steam'',
              ''mdi:kettle-off'')}}'
            icon_color: '{{ iif(is_state(''switch.kettle'', ''on''), ''red'', ''disabled'')}}'
            multiline_secondary: false
            primary: Kettle
            secondary: Turned {{states.switch.kettle.state}} at {{(as_timestamp(states.switch.kettle.last_changed)
              | timestamp_custom('%-I:%M %p'))}}
            type: custom:mushroom-template-card
        temp:
          card:
            entity: sensor.kettle_temperature
            layout: icon_state
            show_icon: true
            show_name: false
            show_state: true
            styles:
              card:
              - box-shadow: none
              icon:
              - color: "[[[\n  if (states['sensor.kettle_temperature'].state >= 91.0)\n\
                  \    return \"red\";\n  if (states['sensor.kettle_temperature'].state\
                  \ <= 90.0 && states['sensor.kettle_temperature'].state >= 81.0)\n\
                  \    return \"green\";\n  if (states['sensor.kettle_temperature'].state\
                  \ <= 80.0 && states['sensor.kettle_temperature'].state >= 71.0)\n\
                  \    return \"skyblue\";\n  if (states['sensor.kettle_temperature'].state\
                  \ <= 70.0 && states['sensor.kettle_temperature'].state >= 51.0)\n\
                  \    return \"purple\";\n  if (states['sensor.kettle_temperature'].state\
                  \ <= 50.0)\n    return \"violet\";  \n]]]  \n"
              state:
              - font-size: 14px
              - font-weight: bold
              - justify-self: start
            type: custom:button-card
      styles:
        grid:
        - grid-template-areas: '''switch temp'''
        - grid-template-columns: 75% 25%
        - grid-template-rows: 32px
        - text-align: left
      tap_action:
        action: call-service
        service: switch.toggle
        service_data:
          entity_id: switch.kettle
      type: custom:button-card
    - badge_icon: ''
      card_mod:
        style: "ha-card {\n  {% if is_state(config.entity, 'on') %}\n     background:\
          \ rgba(255, 255, 0, 0.2);\n  {%- else -%}\n  {%- endif %}\n}\n"
      entity: light.kitchen_light
      icon: mdi:dome-light
      icon_color: '{{ iif(is_state(''light.kitchen_light'', ''on''), ''lime'', ''disabled'')}}'
      primary: Kitchen Light
      secondary: Turned {{states.light.kitchen_light.state}} at {{(as_timestamp(states.light.kitchen_light.last_changed)
        |timestamp_custom('%-I:%M %p'))}}
      type: custom:mushroom-template-card
    - cards:
      - badge_icon: ''
        card_mod:
          style: "ha-card {\n  {% if is_state(config.entity, 'on') %}\n     background:\
            \ rgba(255, 152, 0, 0.2);\n  {%- else -%}\n  {%- endif %}\n}\n"
        entity: light.backyard_lights
        icon: '{{ iif(is_state(''light.backyard_lights'', ''on''), ''mdi:string-lights'',
          ''mdi:string-lights-off'')}}'
        icon_color: '{{ iif(is_state(''light.backyard_lights'', ''on''), ''deep-orange'',
          ''disabled'')}}'
        primary: Backyard Lights
        secondary: Turned {{states.light.backyard_lights.state}} at {{(as_timestamp(states.light.backyard_lights.last_changed)
          |timestamp_custom('%-I:%M %p'))}}
        type: custom:mushroom-template-card
      - badge_icon: ''
        card_mod:
          style: "ha-card {\n  {% if is_state(config.entity, 'on') %}\n     background:\
            \ rgba(255, 152, 0, 0.2);\n  {%- else -%}\n  {%- endif %}\n}\n"
        entity: switch.alleyway_lights
        icon: mdi:light-flood-down
        icon_color: '{{ iif(is_state(''switch.alleyway_lights'', ''on''), ''yellow'',
          ''disabled'')}}'
        primary: Alleyway Lights
        secondary: Turned {{states.switch.alleyway_lights.state}} at {{(as_timestamp(states.switch.alleyway_lights.last_changed)
          |timestamp_custom('%-I:%M %p'))}}
        type: custom:mushroom-template-card
      type: horizontal-stack
    - collapsible_controls: true
      entity: media_player.kitchen_speaker
      fill_container: false
      media_controls:
      - play_pause_stop
      - next
      - previous
      - shuffle
      - repeat
      show_volume_level: true
      type: custom:mushroom-media-player-card
      use_media_info: true
      volume_controls:
      - volume_mute
      - volume_set
      - volume_buttons
    - card_mod:
        style: "ha-state-icon {\n  animation: tilt 4s steps(1) infinite, blink 4s\
          \ 1000; \n  transform-origin: 50% 92%;\n}\n@keyframes tilt {\n  0%, 100%\
          \ { transform: rotate(0deg); }\n  33% { transform: rotate(8deg); }\n  66%\
          \ { transform: rotate(-8deg); }\n}\n@keyframes blink {\n  0%, 20%, 30%,\
          \ 45%, 55%, 70%, 80%, 100% { clip-path: inset(0 0 0 0); }\n  25% { clip-path:\
          \ polygon(0 0, 100% 0, 100% 53%, 25% 52%, 24% 77%, 75% 77%, 76% 52%, 100%\
          \ 52%, 100% 100%, 0 100%); }\n  50%  { clip-path: polygon(0 0, 100% 0, 100%\
          \ 53%, 51% 54%, 51% 76%, 76% 77%, 75% 53%, 100% 52%, 100% 100%, 0 100%);\
          \ }\n  75%  { clip-path: polygon(0 0, 100% 0, 100% 53%, 24% 53%, 24% 77%,\
          \ 47% 77%, 47% 52%, 100% 52%, 100% 100%, 0 100%); }\n}\n"
      entity: automation.kitchen_light_presence
      name: "\U0001F4A1Kitchen Motion Light Automation"
      tap_action:
        action: toggle
      type: custom:mushroom-entity-card
    type: vertical-stack
    view_layout:
      column: 1
  - cards:
    - anchor_id: livingroom
      negative_margin: 13
      offset: -50
      strict_url_change: true
      timeout: 1ms
      transition: 0
      type: custom:anchor-card
    - alignment: justify
      chips:
      - content: Living Room
        double_tap_action:
          action: none
        hold_action:
          action: none
        icon: mdi:sofa-outline
        icon_color: blue
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=home
        type: template
      - icon: mdi:arrow-up
        icon_color: grey
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=home
        type: template
      type: custom:mushroom-chips-card
    - card_mod:
        style: "ha-card {\n  {% set r = state_attr(config.entity, 'rgb_color')[0]\
          \ %}\n  {% set g = state_attr(config.entity, 'rgb_color')[1] %}\n  {% set\
          \ b = state_attr(config.entity, 'rgb_color')[2] %}\n  background: rgba(\
          \ {{r}}, {{g}}, {{b}}, 0.2 );\n}\n"
      collapsible_controls: true
      entity: light.living_room_lamp
      icon: mdi:lamp
      name: Lamp
      secondary_info: last-changed
      show_brightness_control: true
      show_color_control: true
      show_color_temp_control: true
      type: custom:mushroom-light-card
      use_light_color: true
    - card_mod:
        style: "ha-card {\n  {% if is_state(config.entity, 'on') %}\n     background:\
          \ rgba(255, 255, 0, 0.2);\n  {%- else -%}\n  {%- endif %}\n}\n"
      collapsible_controls: true
      entity: light.chandelier
      icon: mdi:chandelier
      name: Chandelier
      secondary_info: last-changed
      show_brightness_control: true
      type: custom:mushroom-light-card
    - card_mod:
        style: "ha-card {\n  {% set r = state_attr(config.entity, 'rgb_color')[0]\
          \ %}\n  {% set g = state_attr(config.entity, 'rgb_color')[1] %}\n  {% set\
          \ b = state_attr(config.entity, 'rgb_color')[2] %}\n  background: rgba(\
          \ {{r}}, {{g}}, {{b}}, 0.2 );\n}\n"
      collapsible_controls: true
      entity: light.led_strip
      icon: mdi:led-strip-variant
      secondary_info: last-changed
      show_brightness_control: true
      show_color_control: true
      type: custom:mushroom-light-card
      use_light_color: true
    - card_mod:
        style: "ha-card {\n  {% if is_state(config.entity, 'on') %}\n     background:\
          \ rgba(var(--rgb-green), 0.2);\n  {%- else -%}\n  {%- endif %}\n}\n"
      collapsible_controls: true
      entity: switch.dragon
      icon: fas:dragon
      icon_color: green
      name: Dragon
      secondary_info: last-changed
      show_brightness_control: true
      type: custom:mushroom-light-card
    type: vertical-stack
    view_layout:
      column: 2
  - cards:
    - anchor_id: media
      negative_margin: 13
      offset: -50
      strict_url_change: true
      timeout: 1ms
      transition: 0
      type: custom:anchor-card
    - alignment: justify
      chips:
      - content: Media
        double_tap_action:
          action: none
        hold_action:
          action: none
        icon: mdi:television-classic
        icon_color: green
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=home
        type: template
      - icon: mdi:arrow-up
        icon_color: grey
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=home
        type: template
      type: custom:mushroom-chips-card
    - cards:
      - collapsible_controls: true
        double_tap_action:
          action: toggle
        entity: media_player.google_tv_streamer_remote
        fill_container: true
        hold_action:
          action: more-info
        icon: ''
        media_controls: []
        name: Google TV
        primary_info: state
        secondary_info: name
        show_volume_level: false
        tap_action:
          action: more-info
        type: custom:mushroom-media-player-card
        use_media_info: true
        volume_controls: []
      - card:
          cards:
          - custom_actions:
            - icon: mdi:power
              name: power
              styles: ":host {\n  --icon-color: crimson;\n}"
              tap_action:
                action: key
                key: POWER
              type: button
            - autofill_entity_id: true
              haptics: false
              icon: ''
              label: '{{ ((value * 100 ) / 7) | round(0, ''ceil'') }}'
              name: slider
              range:
              - 0
              - 1
              step: 0.01
              styles: ":host {\n  height: 30px;\n  border-radius: 20px;  \n  --color:\
                \ #4285F4;\n  --background-height: 20px;\n  --thumb-border-radius:\
                \ 0;\n}\n.icon {\n  display: none;\n}\n.label {\n  {% if not states(config.entity,\
                \ 'on') %}\n  display: none;\n  {% endif %}\n  transform: var(--icon-transform);\n\
                \  font-size: 14px;\n  color: var(--primary-text-color);\n}\n.tooltip\
                \ {\n  display: none;\n}"
              tap_action:
                action: perform-action
                data:
                  is_volume_muted: true
                perform_action: media_player.volume_mute
                target:
                  entity_id: media_player.google_tv_streamer_remote
              type: slider
              value_attribute: volume_level
              value_from_hass_delay: 100
              vertical: false
            custom_icons: []
            keyboard_id: media_player.google_tv_streamer_remote
            media_player_id: media_player.google_tv_streamer_remote
            remote_id: remote.google_tv_streamer_remote
            rows:
            - - power
              - home
            - - slider
              - volume_down
              - volume_up
            styles: "remote-button {\n  --size: 35px;\n  color: var(--secondary-text-color);\n\
              }\n"
            type: custom:android-tv-card
          - entities:
            - card_type: horizontal-stack
              cards:
              - entity_picture: /local/icons/netflix.png
                tap_action:
                  service: remote.turn_on
                  service_data:
                    activity: Netflix
                  target:
                    entity_id: remote.google_tv_streamer_remote
                template: logo_button
                type: custom:button-card
              - entity_picture: /local/icons/prime.png
                tap_action:
                  service: media_player.play_media
                  service_data:
                    media_content_id: https://app.primevideo.com
                    media_content_type: url
                  target:
                    entity_id: media_player.google_tv_streamer_remote
                template: logo_button
                type: custom:button-card
              - entity_picture: /local/icons/youtube.png
                tap_action:
                  service: remote.turn_on
                  service_data:
                    activity: YouTube
                  target:
                    entity_id: remote.google_tv_streamer_remote
                template: logo_button
                type: custom:button-card
              type: custom:hui-element
            - card_type: horizontal-stack
              cards:
              - entity: media_player.google_tv_streamer
                entity_picture: /local/icons/RTE.png
                styles:
                  entity_picture:
                  - width: 80%
                tap_action:
                  service: remote.turn_on
                  service_data:
                    activity: "RT\xC9 Player"
                  target:
                    entity_id: remote.google_tv_streamer_remote
                template: logo_button
                type: custom:button-card
              - entity_picture: /local/icons/disney.png
                tap_action:
                  service: remote.turn_on
                  service_data:
                    activity: YouTube
                  target:
                    entity_id: remote.google_tv_streamer_remote
                template: logo_button
                type: custom:button-card
              - entity_picture: /local/icons/spotify.png
                tap_action:
                  service: remote.turn_on
                  service_data:
                    activity: Spotify
                  target:
                    entity_id: remote.google_tv_streamer_remote
                template: logo_button
                type: custom:button-card
              type: custom:hui-element
            - card_type: horizontal-stack
              cards:
              - entity_picture: /local/icons/JioCinema.png
                styles:
                  entity_picture:
                  - width: 80%
                tap_action:
                  service: remote.turn_on
                  service_data:
                    activity: Jio Cinema
                  target:
                    entity_id: remote.google_tv_streamer_remote
                template: logo_button
                type: custom:button-card
              - entity_picture: /local/icons/jellyfin.png
                styles:
                  entity_picture:
                  - width: 70%
                tap_action:
                  service: remote.turn_on
                  service_data:
                    activity: Jellyfin
                  target:
                    entity_id: remote.google_tv_streamer_remote
                template: logo_button
                type: custom:button-card
              - entity_picture: /local/icons/expressvpn.png
                styles:
                  entity_picture:
                  - width: 70%
                tap_action:
                  service: remote.turn_on
                  service_data:
                    activity: Express VPN
                  target:
                    entity_id: remote.google_tv_streamer_remote
                template: logo_button
                type: custom:button-card
              type: custom:hui-element
            show_header_toggle: false
            type: entities
          - custom_actions:
            - icon: mdi:checkbox-blank-circle
              name: center
              styles: ":host {\n  --icon-color: rgb(94, 94, 94);\n  --size: 100px;\n\
                \  background: rgb(31, 31, 31);\n  border-radius: 100px;\n  margin:\
                \ -70px;\n  padding: 70px;\n}"
              tap_action:
                action: key
                key: DPAD_CENTER
              type: button
            - hold_action:
                action: repeat
              icon: mdi:chevron-up
              name: up
              styles: ":host {\n  --icon-color: rgb(197, 199, 197);\n  z-index: 2;\n\
                \  top: 55px;\n  height: 90px;\n  width: 300px;\n}"
              tap_action:
                action: key
                key: DPAD_UP
              type: button
            - hold_action:
                action: repeat
              icon: mdi:chevron-down
              name: down
              styles: ":host {\n  --icon-color: rgb(197, 199, 197);\n  z-index: 2;\n\
                \  bottom: 55px;\n  height: 90px;\n  width: 300px;\n}"
              tap_action:
                action: key
                key: DPAD_DOWN
              type: button
            - hold_action:
                action: repeat
              icon: mdi:chevron-left
              name: left
              styles: ":host {\n  --icon-color: rgb(197, 199, 197);\n  z-index: 2;\n\
                \  left: 30px;\n  height: 170px;\n  width: 90px;\n}"
              tap_action:
                action: key
                key: DPAD_LEFT
              type: button
            - hold_action:
                action: repeat
              icon: mdi:chevron-right
              name: right
              styles: ":host {\n  --icon-color: rgb(197, 199, 197);\n  z-index: 2;\n\
                \  right: 30px;\n  height: 170px;\n  width: 90px;\n}"
              tap_action:
                action: key
                key: DPAD_RIGHT
              type: button
            keyboard_id: media_player.google_tv_streamer
            media_player_id: media_player.google_tv_streamer
            remote_id: remote.google_tv_streamer_remote
            rows:
            - - back
              - keyboard
              - settings
            - - '{{ "navigation_buttons" if match_media("(min-width: 1000px)") else
                "touchpad" }}'
              - - captions
                - null
                - audio_track
                - null
                - info
            - - previous
              - play_pause
              - next
            styles: "#row-1 {\n  justify-content: justify;\n}\n#row-2 {\n  justify-content:\
              \ center;\n}\n#row-3 {\n  justify-content: justify;\n}\n#row-4 {\n \
              \ justify-content: justify;\n}\n#row-5 {\n  justify-content: right;\n\
              }\n#row-6 {\n  justify-content: justify;\n}\nremote-button {\n  --size:\
              \ 35px;\n  color: var(--secondary-text-color);\n}\n"
            type: custom:android-tv-card
          type: custom:stack-in-card
        conditions:
        - condition: state
          entity: remote.google_tv_streamer_remote
          state_not: 'off'
        - condition: state
          entity: remote.google_tv_streamer_remote
          state_not: unavailable
        type: conditional
      type: vertical-stack
      view_layout:
        column: 2
    - collapsible_controls: true
      entity: media_player.nest_mini
      fill_container: false
      media_controls:
      - play_pause_stop
      - next
      - previous
      - shuffle
      - repeat
      show_volume_level: true
      type: custom:mushroom-media-player-card
      use_media_info: true
      volume_controls:
      - volume_mute
      - volume_set
      - volume_buttons
    - collapsible_controls: true
      entity: media_player.clock
      fill_container: false
      media_controls:
      - play_pause_stop
      - next
      - previous
      - shuffle
      - repeat
      show_volume_level: true
      type: custom:mushroom-media-player-card
      use_media_info: true
      volume_controls:
      - volume_mute
      - volume_set
      - volume_buttons
    type: vertical-stack
    view_layout:
      column: 2
  - cards:
    - anchor_id: hallway
      offset: -50
      strict_url_change: true
      timeout: 1ms
      type: custom:anchor-card
    - alignment: justify
      chips:
      - content: Hallway
        double_tap_action:
          action: none
        hold_action:
          action: none
        icon: mdi:coat-rack
        icon_color: purple
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=home
        type: template
      - icon: mdi:arrow-up
        icon_color: grey
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=home
        type: template
      type: custom:mushroom-chips-card
    - badge_color: ''
      badge_icon: ''
      card_mod:
        style: "ha-card {\n  {% if is_state(config.entity, 'on') %}\n     background:\
          \ rgba(255, 255, 0, 0.2);\n  {%- else -%}\n  {%- endif %}\n}\n"
      entity: light.string_lights
      icon: '{{ iif(is_state(''switch.string_lights'', ''on''), ''mdi:string-lights'',
        ''mdi:string-lights-off'')}}'
      icon_color: '{{ iif(is_state(''switch.string_lights'', ''on''), ''yellow'',
        ''disabled'')}}'
      picture: ''
      primary: String Lights
      secondary: 'Turned {{states.switch.string_lights.state}} at

        {{(as_timestamp(states.switch.string_lights.last_changed) |

        timestamp_custom(''%-I:%M %p''))}}'
      type: custom:mushroom-template-card
    - badge_color: ''
      badge_icon: ''
      card_mod:
        style: "ha-card {\n  {% if is_state(config.entity, 'on') %}\n     background:\
          \ rgba(255, 255, 0, 0.2);\n  {%- else -%}\n  {%- endif %}\n}\n"
      entity: light.hallway_chandelier
      icon: '{{ iif(is_state(''light.hallway_chandelier'', ''on''), ''mdi:chandelier'',
        ''mdi:chandelier'')}}'
      icon_color: '{{ iif(is_state(''light.hallway_chandelier'', ''on''), ''yellow'',
        ''disabled'')}}'
      picture: ''
      primary: Chandelier
      secondary: 'Turned {{states.light.hallway_chandelier.state}} at

        {{(as_timestamp(states.light.hallway_chandelier.last_changed) |

        timestamp_custom(''%-I:%M %p''))}}'
      type: custom:mushroom-template-card
    - badge_color: ''
      badge_icon: ''
      card_mod:
        style: "ha-card {\n  {% if is_state(config.entity, 'on') %}\n     background:\
          \ rgba(255, 255, 0, 0.2);\n  {%- else -%}\n  {%- endif %}\n}\n"
      entity: light.porch_light
      icon: '{{ iif(is_state(''light.porch_light'', ''on''), ''mdi:lightbulb-on'',
        ''mdi:lightbulb-off-outline'')}}'
      icon_color: '{{ iif(is_state(''light.porch_light'', ''on''), ''yellow'', ''disabled'')}}'
      picture: ''
      primary: Porch Light
      secondary: 'Turned {{states.light.porch_light.state}} at

        {{(as_timestamp(states.light.porch_light.last_changed) |

        timestamp_custom(''%-I:%M %p''))}}'
      type: custom:mushroom-template-card
    type: vertical-stack
    view_layout:
      column: 2
  - cards:
    - anchor_id: doorbell
      negative_margin: 13
      offset: 0
      strict_url_change: true
      timeout: 1ms
      transition: 0
      type: custom:anchor-card
    - alignment: justify
      chips:
      - content: Doorbell
        double_tap_action:
          action: none
        hold_action:
          action: none
        icon: mdi:doorbell-video
        icon_color: blue-grey
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=home
        type: template
      - icon: mdi:arrow-up
        icon_color: grey
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=home
        type: template
      type: custom:mushroom-chips-card
    - caption_format: '[AGO]'
      entities:
      - camera.doorbell_fluent
      - sensor.doorbell_images
      - caption_format: '[AGO]'
        file_name_date_begins: 12
        file_name_format: YYYYMMDDHHmmss
        include_images: true
        path: media-source://media_source/local/Doorbell/
        recursive: true
      file_name_format: YYYY-MM-DD_HH-mm-SS
      maximum_files: 15
      menu_alignment: Bottom
      parsed_date_sort: true
      show_zoom: true
      type: custom:gallery-card
    type: vertical-stack
    view_layout:
      column: 3
  - cards:
    - anchor_id: bins
      negative_margin: 13
      offset: -50
      strict_url_change: true
      timeout: 1ms
      transition: 0
      type: custom:anchor-card
    - alignment: justify
      chips:
      - content: Bins
        double_tap_action:
          action: none
        hold_action:
          action: call-service
          service: homeassistant.reload_config_entry
          target:
            entity_id:
            - calendar.black_bin
            - calendar.blue_bin
        icon: mdi:trash-can
        icon_color: brown
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=home
        type: template
      - chip:
          content: "{% if is_state(config.entity, 'on') %}\n  Bin Outside!\n{% else\
            \ %}\n  Bin Outside?\n{% endif %}"
          double_tap_action:
            action: toggle
          entity: input_boolean.bin
          hold_action:
            action: more-info
          icon: "{% if is_state(config.entity, 'on') %}\n  fas:trash-can-arrow-up\n\
            {% else %}\n  fas:trash-can\n{% endif %}"
          icon_color: "{% if is_state(config.entity, 'on') %}\n  {% if state_attr(\"\
            sensor.black_bin\", \"next_collection\") <= 1 %}black{% elif state_attr(\"\
            sensor.blue_bin\", \"next_collection\") <= 1 %}blue{% else %}disabled{%\
            \ endif %}\n{% else %}\n  disabled\n{% endif %}"
          picture: ''
          tap_action:
            action: none
          type: template
        conditions:
        - condition: state
          entity: input_boolean.bin
          state: 'on'
        type: conditional
      - icon: mdi:arrow-up
        icon_color: grey
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room?anchor=home
        type: template
      type: custom:mushroom-chips-card
    - cards:
      - custom_fields:
          collection: '[[[ return "on " + states[''sensor.black_bin''].state ]]]

            '
          date: "[[[ if (states['sensor.black_bin'].attributes.next_collection ==\
            \ 0)\n    return 'Pickup TODAY!';\n    if (states['sensor.black_bin'].attributes.next_collection\
            \ > 1)\n    return 'Next Pickup in ' +\n    states['sensor.black_bin'].attributes.next_collection\
            \ + ' days'; \n    else return 'Next Pickup in ' + states['sensor.black_bin'].attributes.next_collection\
            \ + ' day';\n]]]\n"
          picture:
            card:
              custom_fields:
                notification: '[[[ return states[''sensor.black_bin''].attributes.next_collection]]]

                  '
              entity_picture: /local/images/black_bin.png
              show_entity_picture: true
              size: 60%
              styles:
                card:
                - border: none
                - box-shadow: none
                custom_fields:
                  notification:
                  - background-color: "[[[\n  if (states['sensor.black_bin'].attributes.next_collection\
                      \ >= 5)\n    return \"green\";\n  if (states['sensor.black_bin'].attributes.next_collection\
                      \ >= 2)\n  return \"orange\";\n  else return \"red\";\n]]]\n"
                  - border-radius: 50%
                  - position: absolute
                  - left: 60%
                  - top: 0px
                  - height: 30px
                  - width: 30px
                  - font-size: 15px
                  - font-weight: bold
                  - color: white
                  - line-height: 30px
                entity_picture:
                - filter: brightness(2) contrast(3)
              type: custom:button-card
        styles:
          card:
          - border: none
          - font-size: 150%
          - font-weight: bold
          - justify-self: start
          grid:
          - grid-template-areas: '"picture date" "picture collection"'
          - grid-template-columns: 30% 70%
          - grid-template-rows: 3fr 3fr
        type: custom:button-card
      - custom_fields:
          collection: '[[[ return "on " + states[''sensor.blue_bin''].state ]]]

            '
          date: "[[[ if (states['sensor.blue_bin'].attributes.next_collection > 1)\n\
            \    return 'Next Pickup in ' +\n    states['sensor.blue_bin'].attributes.next_collection\
            \ + ' days'; \n    if (states['sensor.blue_bin'].attributes.next_collection\
            \ == 0)\n    return 'Pickup TODAY!';\n    else return 'Next Pickup in\
            \ ' + states['sensor.blue_bin'].attributes.next_collection + ' day';\n\
            ]]]\n"
          picture:
            card:
              custom_fields:
                notification: '[[[ return states[''sensor.blue_bin''].attributes.next_collection]]]

                  '
              entity_picture: /local/images/blue_bin.png
              show_entity_picture: true
              size: 60%
              styles:
                card:
                - border: none
                - box-shadow: none
                custom_fields:
                  notification:
                  - background-color: "[[[\n  if (states['sensor.blue_bin'].attributes.next_collection\
                      \ >= 5)\n    return \"green\";\n  if (states['sensor.blue_bin'].attributes.next_collection\
                      \ >= 2)\n  return \"orange\";\n  else return \"red\";\n]]]\n"
                  - border-radius: 50%
                  - position: absolute
                  - left: 60%
                  - top: 0px
                  - height: 30px
                  - width: 30px
                  - font-size: 15px
                  - font-weight: bold
                  - color: white
                  - line-height: 30px
              type: custom:button-card
        styles:
          card:
          - border: none
          - font-size: 150%
          - font-weight: bold
          - justify-self: start
          grid:
          - grid-template-areas: '"picture date" "picture collection"'
          - grid-template-columns: 30% 70%
          - grid-template-rows: 3fr 3fr
        type: custom:button-card
      type: custom:stack-in-card
    type: vertical-stack
    view_layout:
      column: 3
  icon: mdi:sofa
  layout:
    max_cols: 3
    width: 350
  path: living-room
  type: custom:vertical-layout
- cards:
  - caption_format: '[AGO]'
    entities:
    - camera.doorbell_fluent
    - sensor.doorbell_images
    - caption_format: '[AGO]'
      file_name_date_begins: 12
      file_name_format: YYYYMMDDHHmmss
      include_images: false
      path: media-source://media_source/local/Doorbell/
      preview_video_at: 5
      recursive: true
      slideshow_video_end: true
    file_name_format: YYYY-MM-DD_HH-mm-SS
    maximum_files: 20
    menu_alignment: Responsive
    parsed_date_sort: true
    show_reload: true
    show_zoom: true
    type: custom:gallery-card
  icon: mdi:doorbell-video
  path: camera
  subview: true
  type: panel
- background: {}
  badges:
  - entity: button.esp32_bluetooth_proxy_restart
    state_content:
    - name
    - state
    tap_action:
      action: toggle
    type: entity
    visibility:
    - condition: state
      entity: sensor.bob_duration
      state: unavailable
  - color: green
    content: Reload
    icon: mdi:reload
    tap_action:
      action: perform-action
      data:
        entry_id: 01J3NGYP8KVY1SFPMGH1Q60FM4
      perform_action: homeassistant.reload_config_entry
      target:
        entity_id: sensor.bob_duration
    type: custom:mushroom-template-badge
  cards: []
  dense_section_placement: true
  icon: mdi:washing-machine
  layout: {}
  max_columns: 1
  path: utilities
  sections:
  - cards:
    - heading: "\U0001F9FA Washing Machine"
      heading_style: title
      type: heading
    - cards:
      - double_tap_action:
          action: none
        entity: sensor.washing_machine_state
        fill_container: true
        hold_action:
          action: none
        icon_color: yellow
        icon_type: icon
        layout: vertical
        name: ' '
        primary_info: state
        secondary_info: name
        tap_action:
          action: more-info
        type: custom:mushroom-entity-card
      - cards:
        - double_tap_action:
            action: none
          fill_container: true
          hold_action:
            action: none
          icon: mdi:washing-machine-alert
          icon_color: '{{ iif(is_state(''sensor.washing_machine_state'', ''Idle''),
            ''blue-grey'', ''grey'') }}'
          layout: vertical
          picture: ''
          tap_action:
            action: none
          type: custom:mushroom-template-card
        - card_mod:
            style: "ha-state-icon {\n  {% if is_state('sensor.washing_machine_state',\
              \ 'Washing') %}\n  animation: shake 400ms ease-in-out infinite, drum\
              \ 2s ease 1000;\n  transform-origin: 50% 110%;\n  {% else %}\n  {% endif\
              \ %}\n\n}\n@keyframes shake {\n  0%, 100% { transform: translate(0,\
              \ 0) rotate(0); }\n  20%  { transform: translate(0.4px, -0.4px) rotate(-4deg);\
              \ }\n  40%  { transform: translate(-0.4px, 0.4px) rotate(4deg); }\n\
              \  60%  { transform: translate(0.4px, 0.4px) rotate(-4deg); }\n  80%\
              \  { transform: translate(-0.4px, -0.4px) rotate(4deg); }\n}\n@keyframes\
              \ drum {\n  50%  { clip-path: polygon(0 0, 0 100%, 35% 100%, 34% 68%,\
              \ 60% 41%, 71% 56%, 65% 74%, 47% 79%, 32% 69%, 35% 100%, 100% 100%,\
              \ 100% 0); }\n}\n"
          double_tap_action:
            action: none
          fill_container: true
          hold_action:
            action: none
          icon: mdi:washing-machine
          icon_color: '{{ iif(is_state(''sensor.washing_machine_state'', ''Washing''),
            ''cyan'', ''grey'') }}'
          layout: vertical
          picture: ''
          tap_action:
            action: none
          type: custom:mushroom-template-card
        - card_mod:
            style: "ha-state-icon {\n  {% if is_state('sensor.washing_machine_state',\
              \ 'Spinning') %}\n  animation: spin 2s linear 1000;\n  {% else %}\n\
              \  {% endif %}\n  \n}\n"
          double_tap_action:
            action: none
          fill_container: true
          hold_action:
            action: none
          icon: fas:spinner
          icon_color: '{{ iif(is_state(''sensor.washing_machine_state'', ''Spinning''),
            ''purple'', ''grey'') }}'
          layout: vertical
          picture: ''
          tap_action:
            action: none
          type: custom:mushroom-template-card
        - card_mod:
            style: "ha-state-icon {\n  {% if is_state('sensor.washing_machine_state',\
              \ 'Rinsing') %}\n  animation: bounce 1.5s ease-in-out infinite, wash\
              \ 1s ease-in-out 1000;\n  transform-origin: 50% 75%;\n  {% else %}\n\
              \  {% endif %}\n}\n@keyframes bounce {\n    0%, 20%, 50%, 80%, 100%\
              \ {transform: translateY(0); } \n    40% { transform: translateY(-1.2px)\
              \ rotate(5deg); } \n    60% { transform: translateY(-1.1px) rotate(-4deg);\
              \ } \n  } \n@keyframes wash {\n  50%  { clip-path: polygon(0 0, 0 100%,\
              \ 35% 100%, 36% 74%, 31% 43%, 61% 40%, 71% 69%, 62% 78%, 36% 73%, 35%\
              \ 100%, 100% 100%, 100% 0); }\n}\n"
          double_tap_action:
            action: none
          fill_container: true
          hold_action:
            action: none
          icon: mdi:dishwasher
          icon_color: '{{ iif(is_state(''sensor.washing_machine_state'', ''Rinsing''),
            ''blue'', ''grey'') }}'
          layout: vertical
          picture: ''
          tap_action:
            action: none
          type: custom:mushroom-template-card
        - card_mod:
            style: "ha-state-icon {\n  {% if is_state('sensor.washing_machine_state',\
              \ 'Drying') %}\n  animation: shake 400ms ease-in-out infinite, drum\
              \ 1s 1000;\n  transform-origin: 50% 65%;\n  {% else %}\n  {% endif %}\n\
              }\n@keyframes shake {\n  0%, 100% { transform: rotate(4deg); }\n  50%\
              \  { transform: rotate(-4deg); }\n}\n@keyframes drum {\n  50%  { clip-path:\
              \ polygon(0 0, 0 100%, 35% 100%, 36% 74%, 31% 43%, 61% 40%, 71% 69%,\
              \ 62% 78%, 36% 73%, 35% 100%, 100% 100%, 100% 0); }\n}\n"
          double_tap_action:
            action: none
          fill_container: true
          hold_action:
            action: none
          icon: mdi:tumble-dryer
          icon_color: '{{ iif(is_state(''sensor.washing_machine_state'', ''Drying''),
            ''deep-orange'', ''grey'') }}'
          picture: ''
          tap_action:
            action: none
          type: custom:mushroom-template-card
        - card_mod:
            style: "ha-state-icon {\n  {% if is_state('sensor.washing_machine_state',\
              \ 'Cycle Complete') %}\n  animation: pulse 2s ease-in-out 1000;\n  {%\
              \ else %}\n  {% endif %}\n  \n}\n"
          double_tap_action:
            action: none
          hold_action:
            action: none
          icon: mdi:check-circle
          icon_color: '{{ iif(is_state(''sensor.washing_machine_state'', ''Cycle Complete''),
            ''green'', ''grey'') }}'
          layout: vertical
          picture: ''
          tap_action:
            action: none
          type: custom:mushroom-template-card
        type: horizontal-stack
      - cards:
        - card_mod:
            style: "ha-state-icon {\n  {% if states.sensor.washing_machine_state.state\
              \ != 'Idle' %}\n  animation: alarm 0.8s ease infinite;\n}\n@keyframes\
              \ alarm {\n  0%, 80%, 100% { transform: translateY(0); }\n  10% { transform:\
              \ translateY(-2px) rotate(-27deg); }\n  20% { transform: translateY(-2px)\
              \ rotate(21deg); }\n  30% { transform: translateY(-2px) rotate(-15deg);\
              \ }\n  40% { transform: translateY(-2px) rotate(9deg); }\n  50% { transform:\
              \ translateY(0); }\n  60% { transform: translateY(-1.2px) }\n}\n"
          entity: sensor.bob_duration
          icon: mdi:timer-play
          icon_color: deep-orange
          name: Duration
          primary_info: state
          secondary_info: name
          type: custom:mushroom-entity-card
        - card_mod:
            style: "ha-state-icon {\n  {% if states.sensor.washing_machine_state.state\
              \ != 'Idle' %}\n  animation: alarm 0.8s ease infinite;\n}\n@keyframes\
              \ alarm {\n  0%, 80%, 100% { transform: translateY(0); }\n  10% { transform:\
              \ translateY(-2px) rotate(-27deg); }\n  20% { transform: translateY(-2px)\
              \ rotate(21deg); }\n  30% { transform: translateY(-2px) rotate(-15deg);\
              \ }\n  40% { transform: translateY(-2px) rotate(9deg); }\n  50% { transform:\
              \ translateY(0); }\n  60% { transform: translateY(-1.2px) }\n}\n"
          entity: sensor.bob_remaining
          fill_container: true
          icon: mdi:timer-refresh
          icon_color: purple
          layout: horizontal
          name: Remaining
          primary_info: state
          secondary_info: name
          type: custom:mushroom-entity-card
        type: horizontal-stack
      type: vertical-stack
    column_span: 1
    type: grid
  type: sections
- cards: []
  dense_section_placement: true
  icon: mdi:play-network-outline
  max_columns: 4
  path: media
  sections:
  - cards:
    - cards:
      - entity: input_select.speakers_spotify
        fill_container: false
        icon_color: green
        layout: horizontal
        secondary_info: none
        type: custom:mushroom-select-card
      - cards:
        - badge_icon: ''
          entity: input_select.speakers_spotify
          fill_container: true
          icon: "{%if (states.input_select.speakers_spotify.state == 'Friday') %}\n\
            \    {{ \"phu:nest-audio\" }}\n{%elif  (states.input_select.speakers_spotify.state\
            \ == 'Nest Mini') %}\n    {{ \"phu:nest-mini\" }}\n{%elif  (states.input_select.speakers_spotify.state\
            \ == 'Kitchen Speaker') %}\n    {{ \"phu:nest-mini\" }}    \n{%elif  (states.input_select.speakers_spotify.state\
            \ == 'THEATEROFDREAMS')  %}\n    {{ \"mdi:microsoft-windows\" }}\n{%elif\
            \  (states.input_select.speakers_spotify.state == \"Pavan's Nest Hub\"\
            )  %}    \n    {{ \"phu:nest-hub\" }}\n{%elif  (states.input_select.speakers_spotify.state\
            \ == \"Bathroom Speaker\")  %}    \n    {{ \"phu:google-home\" }}\n{%\
            \ endif %}"
          icon_color: "{%if (states.input_select.speakers_spotify.state == 'Friday')\
            \ %}\n    {{ \"pink\" }}\n{%elif  (states.input_select.speakers_spotify.state\
            \ == 'Nest Mini') %}\n    {{ \"white\" }}\n{%elif  (states.input_select.speakers_spotify.state\
            \ == 'Kitchen Speaker') %}\n    {{ \"red\" }}        \n{%elif  (states.input_select.speakers_spotify.state\
            \ == 'THEATEROFDREAMS')  %}\n    {{ \"blue\" }}\n{%elif  (states.input_select.speakers_spotify.state\
            \ == \"Pavan's Nest Hub\")  %}    \n    {{ \"pink\" }}\n{%elif  (states.input_select.speakers_spotify.state\
            \ == \"Bathroom Speaker\")  %}    \n    {{ \"white\" }}    \n{% endif\
            \ %}"
          layout: horizontal
          picture: ''
          primary: '{{states.input_select.speakers_spotify.state}}'
          secondary: ''
          tap_action:
            action: call-service
            data: {}
            service: script.spotify_start
            target: {}
          type: custom:mushroom-template-card
        - fill_container: true
          icon: mdi:play
          icon_color: amber
          layout: vertical
          primary: ''
          secondary: ''
          tap_action:
            action: call-service
            data: {}
            service: script.spotify_start
            target: {}
          type: custom:mushroom-template-card
        columns: 2
        square: false
        type: grid
      type: vertical-stack
      view_layout:
        column: 1
    - entities:
      - input_text.text_spotify
      type: entities
    - double_tap_action:
        action: none
      hold_action:
        action: none
      picture: https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/svg/sonarr.svg
      primary: Sonarr
      secondary: ''
      tap_action:
        action: url
        url_path: http://homeassistant.local:8989/
      type: custom:mushroom-template-card
    - double_tap_action:
        action: none
      hold_action:
        action: none
      picture: https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/svg/radarr.svg
      primary: Radarr
      secondary: ''
      tap_action:
        action: url
        url_path: http://homeassistant.local:7878/
      type: custom:mushroom-template-card
    - double_tap_action:
        action: none
      hold_action:
        action: none
      icon: ''
      picture: https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/svg/jellyfin.svg
      primary: Jellyfin
      secondary: ''
      tap_action:
        action: url
        url_path: http://homeassistant.local:8096/
      type: custom:mushroom-template-card
    - double_tap_action:
        action: none
      hold_action:
        action: none
      icon: ''
      picture: https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/svg/jellyseerr.svg
      primary: Jellyseer
      secondary: ''
      tap_action:
        action: url
        url_path: http://homeassistant.local:5055/
      type: custom:mushroom-template-card
    - double_tap_action:
        action: none
      hold_action:
        action: none
      icon: ''
      picture: https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/wallos.png
      primary: Wallos
      secondary: ''
      tap_action:
        action: url
        url_path: http://homeassistant.local:8282/
      type: custom:mushroom-template-card
    - double_tap_action:
        action: none
      hold_action:
        action: none
      icon: ''
      picture: https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/svg/portainer.svg
      primary: Portainer
      secondary: ''
      tap_action:
        action: url
        url_path: http://homeassistant.local:9000/
      type: custom:mushroom-template-card
    - double_tap_action:
        action: none
      hold_action:
        action: none
      icon: ''
      picture: https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/svg/transmission.svg
      primary: Transmission
      secondary: ''
      tap_action:
        action: url
        url_path: http://homeassistant.local:9091/
      type: custom:mushroom-template-card
    - double_tap_action:
        action: none
      hold_action:
        action: none
      icon: ''
      picture: https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/svg/syncthing.svg
      primary: Syncthing
      secondary: ''
      tap_action:
        action: url
        url_path: http://homeassistant.local:8384/
      type: custom:mushroom-template-card
    - double_tap_action:
        action: none
      hold_action:
        action: none
      icon: ''
      picture: https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/svg/immich.svg
      primary: Immich
      secondary: ''
      tap_action:
        action: url
        url_path: http://homeassistant.local:2283/
      type: custom:mushroom-template-card
    - double_tap_action:
        action: none
      hold_action:
        action: none
      icon: ''
      picture: https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/svg/homebridge.svg
      primary: Home Bridge
      secondary: ''
      tap_action:
        action: url
        url_path: http://homeassistant.local:8581/
      type: custom:mushroom-template-card
    - double_tap_action:
        action: none
      hold_action:
        action: none
      icon: ''
      picture: https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/svg/prowlarr.svg
      primary: Prowlarr
      secondary: ''
      tap_action:
        action: url
        url_path: http://homeassistant.local:9696/
      type: custom:mushroom-template-card
    - double_tap_action:
        action: none
      hold_action:
        action: none
      icon: ''
      picture: https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/svg/filebrowser.svg
      primary: File Browser
      secondary: ''
      tap_action:
        action: url
        url_path: http://homeassistant.local:8081/
      type: custom:mushroom-template-card
    - double_tap_action:
        action: none
      hold_action:
        action: none
      icon: ''
      picture: https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/svg/your-spotify.svg
      primary: My Spotify
      secondary: ''
      tap_action:
        action: url
        url_path: http://homeassistant.local:3000/
      type: custom:mushroom-template-card
    - double_tap_action:
        action: none
      hold_action:
        action: none
      icon: ''
      picture: https://raw.githubusercontent.com/home-assistant/iOS/master/icons/dev.png
      primary: HomeAssistant India
      secondary: ''
      tap_action:
        action: url
        url_path: http://192.168.68.168:8123/
      type: custom:mushroom-template-card
    - card:
        show_header_toggle: false
        state_color: true
        type: entities
      filter:
        exclude:
        - state: unavailable
        - state: 'off'
        - state: idle
        - state: standby
        - state: unknown
        - entity_id: '*browser*'
        include:
        - domain: media_player
      show_empty: false
      sort:
        method: last_changed
        reverse: true
      type: custom:auto-entities
    type: grid
  - cards:
    - cards:
      - double_tap_action:
          action: none
        fill_container: true
        hold_action:
          action: none
        icon: phu:jellyfin
        icon_color: purple
        picture: https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/svg/jellyfin.svg
        primary: Refresh Libraries
        secondary: ''
        tap_action:
          action: call-service
          perform_action: button.press
          target:
            entity_id: button.jellyfin_rescan_libraries
        type: custom:mushroom-template-card
      - card:
          type: entities
        filter:
          exclude:
          - state: unavailable
          - entity_id: '*rescan*'
          - entity_id: '*widget*'
          include:
          - name: /[Jj]elly/
        show_empty: false
        sort:
          ignore_case: false
          method: state
          numeric: false
          reverse: false
        type: custom:auto-entities
      type: vertical-stack
      view_layout:
        column: 2
      visibility:
      - condition: state
        entity: input_select.media_service
        state: Jellyfin
    - collapse: 3
      date: dd-mm-yy
      deep_link: true
      enable_tooltips: true
      enable_trailers: true
      entity: sensor.jellyfin_movies
      flag: false
      image_style: fanart
      line2_text: "\u2B50 $rating"
      line3_text: "\u231B$runtime"
      line4_text: $genres
      type: custom:upcoming-media-card
    - collapse: 3
      date: dd-mm-yy
      deep_link: true
      enable_tooltips: true
      enable_trailers: true
      entity: sensor.jellyfin_episodes
      flag: false
      image_style: fanart
      type: custom:upcoming-media-card
    column_span: 3
    type: grid
  - cards:
    - default_type: active
      display_mode: full
      hide_add_torrent: true
      hide_turtle: true
      hide_type: true
      type: custom:transmission-card
    type: grid
    visibility:
    - condition: state
      entity: sensor.transmission_active_torrents
      state_not: '0'
  type: sections
  visible:
  - user: 74f7e2ffd3594037b1a2fc4de82d9fea
- cards: []
  dense_section_placement: true
  icon: mdi:server-network
  max_columns: 3
  path: system-monitor
  sections:
  - cards:
    - cards:
      - alignment: center
        chips:
        - content: Debian
          double_tap_action:
            action: none
          hold_action:
            action: none
          icon: mdi:debian
          icon_color: purple
          tap_action:
            action: none
          type: template
        type: custom:mushroom-chips-card
      - cards:
        - custom_fields:
            item:
              card:
                card_mod:
                  style: "ha-card {\n  box-shadow: none;\n} \n"
                cards:
                - entity: sensor.processor_use_percent
                  icon_color: '#01C852'
                  name: CPU
                  primary_info: state
                  secondary_info: name
                  type: custom:mushroom-entity-card
                - entity: sensor.memory_use_percent
                  icon_color: '#E91E63'
                  name: RAM
                  primary_info: state
                  secondary_info: name
                  type: custom:mushroom-entity-card
                - entity: sensor.system_monitor_disk_use_percent
                  icon_color: '#FF9101'
                  name: Disk
                  primary_info: state
                  secondary_info: name
                  type: custom:mushroom-entity-card
                - entity: sensor.system_monitor_network_in_enp1s0
                  icon_color: grey
                  name: Network In
                  primary_info: state
                  secondary_info: name
                  type: custom:mushroom-entity-card
                mode: vertical
                type: custom:stack-in-card
            radial:
              card:
                apex_config:
                  legend:
                    show: false
                  title:
                    align: top
                    floating: true
                card_mod:
                  style: "ha-card {\n  box-shadow: none;\n} \n"
                chart_type: radialBar
                header:
                  show: false
                series:
                - color: '#01C852'
                  entity: sensor.processor_use_percent
                - color: '#E91E63'
                  entity: sensor.memory_use_percent
                - color: '#FF9101'
                  entity: sensor.system_monitor_disk_use_percent
                type: custom:apexcharts-card
          styles:
            card:
            - border: none
            grid:
            - grid-template-areas: '''item radial'''
            - grid-template-columns: 30% 80%
            - grid-template-rows: 270px
          type: custom:button-card
        - card_mod:
            style: "ha-card {\n  box-shadow: none;\n} \n"
          cards:
          - entity: sensor.processor_temperature
            icon_color: red
            name: Processor Temperature
            primary_info: state
            secondary_info: name
            type: custom:mushroom-entity-card
          - entity: sensor.system_monitor_last_boot
            icon: mdi:clock
            name: Last Boot
            primary_info: state
            secondary_info: name
            type: custom:mushroom-entity-card
          mode: horizontal
          type: custom:stack-in-card
        mode: vertical
        type: custom:stack-in-card
      type: vertical-stack
    - alignment: center
      chips:
      - content: Reload Entities
        double_tap_action:
          action: none
        hold_action:
          action: none
        icon: mdi:reload
        tap_action:
          action: none
        type: template
      - icon: mdi:format-list-checks
        icon_color: deep-purple
        tap_action:
          action: perform-action
          data:
            id: todo.my_tasks
          perform_action: script.reload_config_entries
          target: {}
        type: action
      - icon: mdi:alpha-t-box-outline
        icon_color: orange
        tap_action:
          action: perform-action
          data:
            id: switch.kettle
          perform_action: script.reload_config_entries
          target: {}
        type: action
      - icon: phu:tuya
        icon_color: deep-orange
        tap_action:
          action: perform-action
          data:
            id: light.light
          perform_action: script.reload_config_entries
          target: {}
        type: action
      - icon: mdi:weather-cloudy
        icon_color: blue
        tap_action:
          action: perform-action
          data:
            id: weather.forecast_home
          perform_action: script.reload_config_entries
          target: {}
        type: action
      - icon: mdi:calendar
        icon_color: teal
        tap_action:
          action: perform-action
          data:
            id: calendar.birthdays
          perform_action: script.reload_config_entries
          target: {}
        type: action
      - icon: mdi:google-fit
        icon_color: pink
        tap_action:
          action: perform-action
          data:
            id: sensor.sleep
          perform_action: script.reload_config_entries
          target: {}
        type: action
      - icon: mdi:google-spreadsheet
        icon_color: lime
        tap_action:
          action: call-service
          service: script.reload_google_sheets
          target: {}
        type: action
      type: custom:mushroom-chips-card
    - cards:
      - alignment: center
        chips:
        - content: Ping
          double_tap_action:
            action: none
          hold_action:
            action: none
          icon: "{% if is_state('binary_sensor.192_168_168_1', 'off') or is_state('binary_sensor.100_125_26_91',\
            \ 'off')  or is_state('binary_sensor.100_71_205_101','off') or is_state('binary_sensor.8_8_8_8',\
            \ 'off') %}\n  mdi:lan-disconnect\n{% else %}\n  mdi:lan-connect\n{% endif\
            \ %}"
          icon_color: "{% if is_state('binary_sensor.192_168_168_1', 'off') or is_state('binary_sensor.100_125_26_91',\
            \ 'off')  or is_state('binary_sensor.100_71_205_101','off') or is_state('binary_sensor.8_8_8_8',\
            \ 'off') %}\n  red\n{% else %}\n  blue\n{% endif %}"
          tap_action:
            action: none
          type: template
        type: custom:mushroom-chips-card
      - cards:
        - cards:
          - entity: binary_sensor.8_8_8_8
            icon_color: blue
            name: Google
            type: custom:mushroom-entity-card
          - entity: binary_sensor.192_168_168_1
            icon_color: blue
            name: Deco
            type: custom:mushroom-entity-card
          type: horizontal-stack
        - cards:
          - entity: binary_sensor.100_125_26_91
            icon_color: blue
            name: Tailscale India
            type: custom:mushroom-entity-card
          - entity: binary_sensor.100_71_205_101
            icon_color: blue
            name: Tailscale Ireland
            type: custom:mushroom-entity-card
          type: horizontal-stack
        type: vertical-stack
      type: vertical-stack
    - cards:
      - alignment: center
        chips:
        - content: Syncthing
          double_tap_action:
            action: none
          hold_action:
            action: none
          icon: mdi:sync
          icon_color: blue
          tap_action:
            action: none
          type: template
        type: custom:mushroom-chips-card
      - double_tap_action:
          action: none
        entity: sensor.syncthing_whatsapp
        hold_action:
          action: more-info
        icon: "{% if states(config.entity) == 'syncing' %}\n  mdi:folder-sync\n{%\
          \ elif states(config.entity) == 'idle' %}\n  mdi:folder-check\n{% elif states(config.entity)\
          \ == 'paused' %}\n  mdi:folder-clock\n{% endif %}\n"
        icon_color: "{% if states(config.entity) == 'syncing' %}\n  yellow\n{% elif\
          \ states(config.entity) == 'idle' %}\n  green\n{% elif states(config.entity)\
          \ == 'paused' %}\n  grey\n{% endif %}\n"
        multiline_secondary: true
        primary: Syncthing WhatsApp
        secondary: 'Files - {{states.sensor.syncthing_whatsapp.attributes.global_files}}

          Local Files - {{states.sensor.syncthing_whatsapp.attributes.local_files}}

          Size - {{ (states.sensor.syncthing_whatsapp.attributes.local_bytes | float
          / 1024 / 1024 / 1024)  | round(2) }} GB

          '
        tap_action:
          action: none
        type: custom:mushroom-template-card
      type: vertical-stack
    column_span: 1
    type: grid
  - cards:
    - cards:
      - alignment: center
        chips:
        - content: Internet
          double_tap_action:
            action: navigate
            navigation_path: /hassio/addon/6b87c29e_speedtest_addon/info
          hold_action:
            action: none
          icon: "{% set speed = states('sensor.speedtest_download') | round %}\n{%\
            \ if speed < 100 %}\n  mdi:speedometer-slow\n{% elif 100 <= speed <= 300\
            \ %}\n  mdi:speedometer-medium\n{% else %}\n  mdi:speedometer\n{% endif\
            \ %}"
          icon_color: "{% set speed = states('sensor.speedtest_download') | round\
            \ %}\n{% if speed < 100 %}\n  red\n{% elif 100 <= speed <= 300 %}\n  orange\n\
            {% else %}\n  green\n{% endif %}"
          tap_action:
            action: call-service
            data:
              addon: 6b87c29e_speedtest_addon
            service: hassio.addon_start
            target: {}
          type: template
        type: custom:mushroom-chips-card
      - cards:
        - card_mod:
            style: "ha-state-icon {\n{% if is_state('switch.docker_speedtest_addon',\
              \ 'on') %}\n animation: move 2s infinite;\n{%- else -%}\n{%- endif %}\n\
              }\n@keyframes move {\n  0%, 100% { transform: translateY(0px); }\n \
              \ 20% { transform: translateY(1px); }\n  40% { transform: translateY(2px);\
              \ }\n  60% { transform: translateY(4px); }\n  80% { transform: translateY(7px);\
              \ }\n}\n"
          entity: sensor.speedtest_download
          hold_action:
            action: more-info
          icon: mdi:download
          icon_color: "{% set speed = states('sensor.speedtest_download') | round\
            \ %}\n{% if speed < 100 %}\n  red\n{% elif 100 <= speed <= 300 %}\n  yellow\n\
            {% else %}\n  green\n{% endif %}"
          primary: '{{states.sensor.speedtest_download.state | round }} Mbps'
          secondary: Download Speed
          tap_action:
            action: call-service
            data:
              addon: 6b87c29e_speedtest_addon
            service: hassio.addon_start
            target: {}
          type: custom:mushroom-template-card
        - card_mod:
            style: "ha-state-icon {\n{% if is_state('switch.docker_speedtest_addon',\
              \ 'on') %}\n animation: move 2s infinite;\n{%- else -%}\n{%- endif %}\n\
              }\n@keyframes move {\n  0%, 100% { transform: translateY(0px); }\n \
              \ 20% { transform: translateY(-1px); }\n  40% { transform: translateY(-2px);\
              \ }\n  60% { transform: translateY(-4px); }\n  80% { transform: translateY(-7px);\
              \ }\n}\n"
          entity: sensor.speedtest_upload
          hold_action:
            action: more-info
          icon: mdi:upload
          icon_color: "{% set speed = states('sensor.speedtest_upload') | round %}\n\
            {% if speed < 10 %}\n  red\n{% elif 10 <= speed <= 30 %}\n  yellow\n{%\
            \ else %}\n  green\n{% endif %}"
          primary: '{{states.sensor.speedtest_upload.state | round }} Mbps'
          secondary: Upload Speed
          type: custom:mushroom-template-card
        type: horizontal-stack
      - badge_color: ''
        badge_icon: ''
        card_mod:
          style:
            .: "ha-state-icon {\n  animation: clip 3s infinite;\n}\n@keyframes clip\
              \ {\n  0% { clip-path: circle(13.0% at 50% 50%); }\n  100% { clip-path:\
              \ circle(50.0% at 50% 50%); }\n}\n\nmushroom-state-info {\n   --card-secondary-font-weight:\
              \ bold;\n   \n}        \n"
            mushroom-shape-icon$: ".shape {\n  --shape-animation: ping 3s infinite;\n\
              }\n@keyframes ping {\n  0% { box-shadow: 0 0 1px 1px rgba(var(--rgb-green),\
              \ 0.3) inset; }\n  50% { box-shadow: 0 0 5px 15px transparent inset;\
              \ }\n  51% { box-shadow: 0 0 1px 1px rgba(var(--rgb-green), 0.3); }\n\
              \  100% { box-shadow: 0 0 5px 15px transparent; }\n}\n"
        double_tap_action:
          action: none
        entity: sensor.tp_link_router_total_clients
        hold_action:
          action: none
        icon: mdi:access-point
        icon_color: blue
        multiline_secondary: true
        primary: '{{states.sensor.tp_link_router_total_clients.state}} Connected Devices '
        secondary: '--------------------------

          {{states.sensor.tp_link_router_total_main_wifi_clients.state}} - Wireless

          {{states.sensor.tp_link_router_total_wired_clients.state}} - Wired

          {{states.sensor.tp_link_router_total_guest_wifi_clients.state}} - Guest'
        tap_action:
          action: more-info
        type: custom:mushroom-template-card
      - badge_color: black
        badge_icon: mdi:lock
        card_mod:
          style:
            .: "ha-card {\n      background: rgba(var(--rgb-red), 0.2);\n }\n"
            mushroom-state-info$: ".container {\n  align-items: center;\n}\n"
        double_tap_action:
          action: none
        entity: button.router_reboot
        hold_action:
          action: toggle
          confirmation:
            text: This will reboot the routers.
        icon: mdi:restart
        icon_color: red
        multiline_secondary: true
        primary: "\u2757Restart Internet Routers\u2757"
        secondary: Hold to Restart
        tap_action:
          action: none
        type: custom:mushroom-template-card
      type: vertical-stack
    - cards:
      - alignment: center
        chips:
        - content: Storage
          double_tap_action:
            action: none
          hold_action:
            action: none
          icon: mdi:harddisk
          icon_color: grey
          tap_action:
            action: none
          type: template
        type: custom:mushroom-chips-card
      - double_tap_action:
          action: none
        entity: sensor.doorbell
        hold_action:
          action: none
        icon: mdi:camera
        icon_color: '{% set doorbell = states(''sensor.doorbell'') | float %}

          {% if doorbell > 500.0 %}

          red

          {% elif doorbell <= 500.0 and doorbell > 200.0 %}

          orange

          {% elif doorbell <= 200.0 and doorbell > 0.0 %}

          green

          {% endif %}

          '
        multiline_secondary: true
        primary: '{{states(config.entity)}} MB'
        secondary: Camera Snapshots
        tap_action:
          action: more-info
        type: custom:mushroom-template-card
      - double_tap_action:
          action: none
        entity: sensor.database_size
        hold_action:
          action: none
        icon: mdi:database
        icon_color: indigo
        primary_info: state
        secondary_info: name
        type: custom:mushroom-entity-card
      - entity: sensor.home_assistant_log_size
        icon: mdi:math-log
        icon_color: deep-orange
        name: Homeassistant Log Size
        primary_info: state
        secondary_info: name
        type: custom:mushroom-entity-card
      - double_tap_action:
          action: url
          url_path: https://drive.google.com/drive/folders/1iDzbeGS-PLCnsDwG5i3dcOs1g-Ws4BjOhttps://drive.google.com/drive/folders/1iDzbeGS-PLCnsDwG5i3dcOs1g-Ws4BjO
        entity: sensor.backup_state
        fill_container: false
        hold_action:
          action: none
        icon: mdi:google-drive
        icon_color: yellow
        multiline_secondary: false
        primary: '{{states.sensor.backup_state.attributes.size_in_google_drive}}'
        secondary: Google Drive Backup Size
        tap_action:
          action: navigate
          navigation_path: /hassio/ingress/cebe7a76_hassio_google_drive_backup
        type: custom:mushroom-template-card
      - entities:
        - card_mod:
            style: "ha-card {\n  background: none;\n  border: 0;\n  box-shadow: none;\n\
              \  overflow: auto;\n  padding-top: 5px;\n  font-size: 15px;\n}\n"
          card_type: custom:flex-table-card
          columns:
          - data: backups
            modify: x.name
            name: Name
          - data: backups
            modify: x.state
            name: State
          - data: backups
            modify: x.size
            name: Size
          css:
            table+: 'border-collapse: collapse;'
          entities:
            include: sensor.backup_state
          sort_by: backups
          type: custom:hui-element
        head:
          double_tap_action:
            action: navigate
            navigation_path: /hassio/backups
          entity: sensor.backup_state
          fill_container: false
          icon: mdi:home-assistant
          icon_color: blue
          multiline_secondary: false
          primary: '{{states.sensor.backup_state.attributes.size_in_home_assistant}}'
          secondary: Homeassistant Local Backup Size
          tap_action:
            action: none
          type: custom:mushroom-template-card
        padding: 0
        type: custom:fold-entity-row
      - cards:
        - card_mod:
            style: 'ha-card { border-radius: 8px;background: none;box-shadow: none;--ha-card-border-width:
              0; } :host { flex: 1 1 0% !important; min-width: min-content !important;
              }

              '
          double_tap_action:
            action: none
          entity: sensor.system_monitor_disk_use
          fill_container: false
          hold_action:
            action: none
          icon: mdi:harddisk
          icon_color: "{% set value = states('sensor.system_monitor_disk_use_percent')\
            \ | float %} {% if value >= 0.00 and value <= 50.99 %}\n  green\n{% elif\
            \ value >= 51 and value <= 70.99 %}\n  orange\n{% elif value >= 71.00\
            \ and value <= 100 %}\n  red\n{% endif %}"
          multiline_secondary: true
          primary: '{{states(''sensor.system_monitor_disk_use'')}} GB'
          secondary: Hard Disk
          tap_action:
            action: more-info
          type: custom:mushroom-template-card
        - card_mod:
            style: "bar-card-value {\n  font-size: 13px;\n  font-weight: bold;\n \
              \ text-shadow: 1px 1px #0005;\n} :host { flex: 2 2 0% !important; }\
              \  ha-card {border-radius: 25px !important;background: none;box-shadow:\
              \ none;--ha-card-border-width: 0;padding-top: 0 !important;padding-right:\
              \ 1px !important;-webkit-mask-image: linear-gradient(to left, rgba(0,0,0,1)\
              \ 100%, rgba(0,0,0,0));}\n"
          decimal: 1
          entities:
          - entity: sensor.system_monitor_disk_use_percent
          height: 30px
          positions:
            icon: 'off'
            minmax: 'off'
            name: 'off'
            title: 'off'
          severity:
          - color: Green
            from: 0
            to: 50.99
          - color: Orange
            from: 51
            to: 70.99
          - color: Red
            from: 71
            to: 100
          type: custom:bar-card
        mode: horizontal
        type: custom:stack-in-card
      - cards:
        - card_mod:
            style: 'ha-card { border-radius: 8px;background: none;box-shadow: none;--ha-card-border-width:
              0; } :host { flex: 1 1 0% !important; min-width: min-content !important;
              }

              '
          double_tap_action:
            action: none
          entity: sensor.system_monitor_disk_use_media_1tb
          fill_container: false
          hold_action:
            action: none
          icon: phu:seagate-ssd
          icon_color: "{% set value = states('sensor.system_monitor_disk_usage_media_1tb')\
            \ | float %} {% if value >= 0.00 and value <= 50.99 %}\n  green\n{% elif\
            \ value >= 51 and value <= 70.99 %}\n  orange\n{% elif value >= 71.00\
            \ and value <= 100 %}\n  red\n{% endif %}"
          multiline_secondary: true
          primary: '{{states(''sensor.system_monitor_disk_use_media_1tb'')}} GB'
          secondary: 1 TB
          tap_action:
            action: more-info
          type: custom:mushroom-template-card
        - card_mod:
            style: "bar-card-value {\n  font-size: 13px;\n  font-weight: bold;\n \
              \ text-shadow: 1px 1px #0005;\n} :host { flex: 2 2 0% !important; }\
              \  ha-card {border-radius: 25px !important;background: none;box-shadow:\
              \ none;--ha-card-border-width: 0;padding-top: 0 !important;padding-right:\
              \ 1px !important;-webkit-mask-image: linear-gradient(to left, rgba(0,0,0,1)\
              \ 100%, rgba(0,0,0,0));}\n"
          decimal: 1
          entities:
          - entity: sensor.system_monitor_disk_usage_media_1tb
          height: 30px
          positions:
            icon: 'off'
            minmax: 'off'
            name: 'off'
            title: 'off'
          severity:
          - color: Green
            from: 0
            to: 50.99
          - color: Orange
            from: 51
            to: 70.99
          - color: Red
            from: 71
            to: 100
          type: custom:bar-card
        mode: horizontal
        type: custom:stack-in-card
      - cards:
        - card_mod:
            style: 'ha-card { border-radius: 8px;background: none;box-shadow: none;--ha-card-border-width:
              0; } :host { flex: 1 1 0% !important; min-width: min-content !important;
              }

              '
          double_tap_action:
            action: none
          entity: sensor.system_monitor_disk_use_media_1tb_ssd
          fill_container: false
          hold_action:
            action: none
          icon: phu:seagate-ssd-m2
          icon_color: "{% set value = states('sensor.system_monitor_disk_usage_media_1tb_ssd')\
            \ | float %} {% if value >= 0.00 and value <= 50.99 %}\n  green\n{% elif\
            \ value >= 51 and value <= 70.99 %}\n  orange\n{% elif value >= 71.00\
            \ and value <= 100 %}\n  red\n{% endif %}"
          multiline_secondary: true
          primary: '{{states(''sensor.system_monitor_disk_use_media_1tb_ssd'')}} GB'
          secondary: 1 TB SSD
          tap_action:
            action: more-info
          type: custom:mushroom-template-card
        - card_mod:
            style: "bar-card-value {\n  font-size: 13px;\n  font-weight: bold;\n \
              \ text-shadow: 1px 1px #0005;\n} :host { flex: 2 2 0% !important; }\
              \  ha-card {border-radius: 25px !important;background: none;box-shadow:\
              \ none;--ha-card-border-width: 0;padding-top: 0 !important;padding-right:\
              \ 1px !important;-webkit-mask-image: linear-gradient(to left, rgba(0,0,0,1)\
              \ 100%, rgba(0,0,0,0));}\n"
          decimal: 1
          entities:
          - entity: sensor.system_monitor_disk_usage_media_1tb_ssd
          height: 30px
          positions:
            icon: 'off'
            minmax: 'off'
            name: 'off'
            title: 'off'
          severity:
          - color: Green
            from: 0
            to: 50.99
          - color: Orange
            from: 51
            to: 70.99
          - color: Red
            from: 71
            to: 100
          type: custom:bar-card
        mode: horizontal
        type: custom:stack-in-card
      - cards:
        - card_mod:
            style: 'ha-card { border-radius: 8px;background: none;box-shadow: none;--ha-card-border-width:
              0; } :host { flex: 1 1 0% !important; min-width: min-content !important;
              }

              '
          double_tap_action:
            action: none
          entity: sensor.system_monitor_disk_use_media_5tb
          fill_container: false
          hold_action:
            action: none
          icon: phu:seagate-ssd
          icon_color: "{% set value = states('sensor.system_monitor_disk_usage_media_5tb')\
            \ | float %} {% if value >= 0.00 and value <= 50.99 %}\n  green\n{% elif\
            \ value >= 51 and value <= 70.99 %}\n  orange\n{% elif value >= 71.00\
            \ and value <= 100 %}\n  red\n{% endif %}"
          multiline_secondary: true
          primary: '{{states(''sensor.system_monitor_disk_use_media_5tb'')}} GB'
          secondary: 5TB
          tap_action:
            action: more-info
          type: custom:mushroom-template-card
        - card_mod:
            style: "bar-card-value {\n  font-size: 13px;\n  font-weight: bold;\n \
              \ text-shadow: 1px 1px #0005;\n} :host { flex: 2 2 0% !important; }\
              \  ha-card {border-radius: 25px !important;background: none;box-shadow:\
              \ none;--ha-card-border-width: 0;padding-top: 0 !important;padding-right:\
              \ 1px !important;-webkit-mask-image: linear-gradient(to left, rgba(0,0,0,1)\
              \ 100%, rgba(0,0,0,0));}\n"
          decimal: 1
          entities:
          - entity: sensor.system_monitor_disk_usage_media_5tb
          height: 30px
          positions:
            icon: 'off'
            minmax: 'off'
            name: 'off'
            title: 'off'
          severity:
          - color: Green
            from: 0
            to: 50.99
          - color: Orange
            from: 51
            to: 70.99
          - color: Red
            from: 71
            to: 100
          type: custom:bar-card
        mode: horizontal
        type: custom:stack-in-card
      type: vertical-stack
    type: grid
  - cards:
    - cards:
      - alignment: center
        chips:
        - content: Home Assistant
          double_tap_action:
            action: none
          hold_action:
            action: none
          icon: mdi:home-assistant
          icon_color: blue
          tap_action:
            action: none
          type: template
        type: custom:mushroom-chips-card
      - card_mod:
          style: "#states > * {\n  margin: 0 !important;\n}\n"
        entities:
        - entities:
          - entity: sensor.active_issues
            name: Active
            unit: false
          - entity: sensor.ignored_issues
            name: Ignored
            unit: false
          entity: sensor.active_issues
          name: Repairs
          show_state: true
          type: custom:multiple-entity-row
        - type: section
        - entity: sensor.integrations
          name: HA Integrations in Use
        - entity: sensor.custom_integrations
          name: Custom Integrations in Use
        - entities:
          - card_mod:
              style:
                .: "ha-card {\n  background: none;\n  border: 0;\n  box-shadow: none;\n\
                  \  overflow: auto;\n  padding-bottom: 20px;\n  font-size: 12px;\n\
                  }\n"
                ha-markdown: 'ha-card.type-markdown { box-shadow: none; }

                  .no-header {padding-top: 0px !important; }

                  '
                ha-markdown$: 'table { width: 100%; padding: 16px; border-collapse:
                  collapse; padding: 0px; }

                  thead th { height: 1em; }

                  tr td { padding-left: 0.5em; padding-right: 0.5em;  }

                  th { padding-left: 0.5em; padding-right: 0.5em;  }

                  tbody tr:nth-child(odd) { background-color: var(--table-row-background-color);  }

                  tbody tr:nth-child(even) { background-color: var(--table-row-alternative-background-color);  }

                  tbody tr td:nth-child(2) { width: 10%; }

                  th ha-icon { height: 1em; vertical-align: top;  }

                  '
            card_type: markdown
            content: "|Rank|Integration|Time|\n|:---:|:---:|:---:|\n{%- set ns = namespace(count\
              \ = 0) %}\n{%- for attr in states.sensor.start_time.attributes %}\n\
              {%- if not attr==\"friendly_name\"\n    and not attr==\"unit_of_measurement\"\
              \n    and not attr==\"icon\" -%}\n{%- set ns.count = ns.count+1 %}\n\
              |{{ ns.count }}|{{attr}}|{{states.sensor.start_time.attributes [attr]\
              \ }}s|\n{%- endif %}\n{%- endfor %}\n"
            type: custom:hui-element
          head:
            icon: mdi:timer
            name: Integrations by Load Time
            state: ''
            type: custom:template-entity-row
          padding: 0
          type: custom:fold-entity-row
        - type: section
        - entity: sensor.entities
          name: Entities in Use
        - entity: sensor.sensors
          name: Sensors in Use
        - entity: sensor.devices
          name: Devices
        - type: section
        - entities:
          - card_mod:
              style: "ha-card {\n  background: none;\n  border: 0;\n  box-shadow:\
                \ none;\n  overflow: auto;\n  padding-bottom: 20px;\n  font-size:\
                \ 12px;\n}\n"
            card_type: custom:flex-table-card
            columns:
            - data: entities
              modify: "var ICON = 'mdi:cloud-question';\nif (x.state == \"missing\"\
                )\n  ICON = 'mdi:cloud-alert';\nelse if (x.state == \"unavail\")\n\
                \  ICON = 'mdi:cloud-off-outline';\n'<ha-icon icon=\"' + ICON + '\"\
                >'"
              name: ' '
            - data: entities
              modify: x.id
              name: Entity
            - data: entities
              modify: x.occurrences
              name: Occurrences
            css:
              table+: 'border-collapse: collapse; padding: 0px;'
            entities:
              include: sensor.watchman_missing_entities
            type: custom:hui-element
          head:
            entity: sensor.watchman_missing_entities
            icon: mdi:shield-half-full
            name: Watchman Missing Entities
            state: '{{state_attr(''sensor.watchman_missing_entities'', ''entities'')|count}}
              Issues

              '
            type: custom:template-entity-row
          open: false
          padding: 0
          type: custom:fold-entity-row
        - entities:
          - card_mod:
              style: "ha-card {\n  background: none;\n  border: 0;\n  box-shadow:\
                \ none;\n  overflow: auto;\n  padding-bottom: 20px;\n  font-size:\
                \ 12px;\n}\n"
            card_type: custom:flex-table-card
            columns:
            - data: entities
              modify: "var ICON = 'mdi:cloud-question';\nif (x.state == \"missing\"\
                )\n  ICON = 'mdi:cloud-alert';\nelse if (x.state == \"unavail\")\n\
                \  ICON = 'mdi:cloud-off-outline';\n'<ha-icon icon=\"' + ICON + '\"\
                >'"
              name: ' '
            - data: entities
              modify: x.id
              name: Entity
            - data: entities
              modify: x.occurrences
              name: Occurrences
            css:
              table+: 'border-collapse: collapse; padding: 0px;'
            entities:
              include: sensor.watchman_missing_services
            type: custom:hui-element
          head:
            entity: sensor.watchman_missing_services
            icon: mdi:shield-half-full
            name: Watchman Missing Services
            state: '{{state_attr(''sensor.watchman_missing_services'', ''entities'')|count}}
              Issues

              '
            type: custom:template-entity-row
          open: false
          padding: 0
          type: custom:fold-entity-row
        - type: section
        - entities:
          - calShowDescription: false
            card_mod:
              style: "ha-card {\n    background: none !important;\n    border: 0;\n\
                \    box-shadow: none !important;\n    overflow: auto;\n}\n"
            card_type: custom:atomic-calendar-revive
            dimFinishedEvents: true
            disableCalEventLink: false
            disableCalLink: false
            disableCalLocationLink: false
            enableModeChange: true
            entities:
            - entity: calendar.home_assistant_devs
            firstDayOfWeek: 1
            hideDuplicates: true
            maxDaysToShow: 90
            refreshInterval: 600
            showCurrentEventLine: false
            showDate: false
            showDeclined: true
            showDescription: false
            showLastCalendarWeek: false
            showMonth: true
            showMultiDay: false
            showMultiDayEventParts: true
            showProgressBar: false
            showRelativeTime: false
            showWeekDay: true
            sortByStartTime: true
            type: custom:hui-element
          head:
            icon: mdi:calendar-alert
            name: Home Assistant Release Calendar
            secondary: '{% from ''easy_time.jinja'' import custom_relative_time_attr
              %} {{ state_attr(''calendar.home_assistant_devs'', ''message'') }} {{
              custom_relative_time_attr(''calendar.home_assistant_devs'', ''start_time'',
              values=''day, hour'') }}

              '
            state: ''
            type: custom:template-entity-row
          padding: 0
          type: custom:fold-entity-row
        show_header_toggle: false
        state_color: true
        type: entities
      type: vertical-stack
    - cards:
      - alignment: center
        chips:
        - content: Docker
          double_tap_action:
            action: none
          hold_action:
            action: none
          icon: mdi:docker
          icon_color: blue
          tap_action:
            action: none
          type: template
        type: custom:mushroom-chips-card
      - card:
          head:
            icon: mdi:docker
            icon_color: blue
            primary: Docker Containers
            secondary: 'Total: {{ expand(integration_entities(''monitor_docker''))
              | selectattr(''entity_id'',''search'',''switch'') | list | count}},
              Running: {{expand(integration_entities(''monitor_docker''))|selectattr(''entity_id'',''search'',''switch'')|selectattr(''state'',''search'',''on'')|list|count}},
              Stopped: {{expand(integration_entities(''monitor_docker''))|selectattr(''entity_id'',''search'',''switch'')|selectattr(''state'',''search'',''off'')|list|count}}'
            type: custom:mushroom-template-card
          padding: 1
          type: custom:fold-entity-row
        filter:
          include:
          - domain: switch
            entity_id: '*docker*'
        sort:
          method: state
        type: custom:auto-entities
      type: vertical-stack
    - cards:
      - alignment: center
        chips:
        - content: Git
          double_tap_action:
            action: navigate
            navigation_path: /config/integrations/integration/github
          hold_action:
            action: none
          icon: mdi:github
          icon_color: white
          tap_action:
            action: none
          type: template
        type: custom:mushroom-chips-card
      - cards:
        - entities:
          - icon: fab:git
            name: /n00bcodr/homeassistant
            type: weblink
            url: https://github.com/n00bcodr/homeassistant
          - entity: sensor.n00bcodr_homeassistant_latest_commit
            icon: mdi:source-commit-end
            name: Last Commit
          - type: section
          - icon: mdi:text
            name: Suggested Commit - files on {{ now().timestamp() | timestamp_custom('%b
              %d, %Y - %-I:%M %p') }}
            state: ''
            tap_action: none
            type: custom:template-entity-row
          - entity: input_text.git_commit_message
            extend_paper_buttons_row:
              buttons:
              - icon: mdi:close
                tap_action:
                  action: call-service
                  service: input_text.set_value
                  service_data:
                    value: "\u200E"
                  target:
                    entity_id: input_text.git_commit_message
              - icon: fas:paste
                tap_action:
                  action: call-service
                  service: script.git_commit_copy
              position: right
            name: Commit Message
          - type: section
          type: entities
        - alignment: center
          chips:
          - content: Git Push
            entity: script.git_push
            icon: mdi:upload-multiple
            type: template
          - content: HA Version Update
            entity: script.git_push_ha_version
            icon: mdi:package-up
            picture: ''
            type: template
          type: custom:mushroom-chips-card
        - alignment: center
          chips:
          - content: Push Custom Components
            icon: hacs:hacs
            icon_color: blue
            tap_action:
              action: call-service
              service: shell_command.git_hacs_update
            type: template
          type: custom:mushroom-chips-card
        mode: vertical
        type: custom:stack-in-card
      type: vertical-stack
    type: grid
    visibility:
    - condition: user
      users:
      - 74f7e2ffd3594037b1a2fc4de82d9fea
  type: sections
  visible:
  - user: 74f7e2ffd3594037b1a2fc4de82d9fea
- cards: []
  dense_section_placement: true
  icon: mdi:devices
  layout: {}
  max_columns: 3
  path: network
  sections:
  - cards:
    - cards:
      - cards:
        - card_mod:
            style:
              .: "ha-card {\n  background: transparent !important;\n  border: 0px\
                \ !important;\n  align-items: center;\n}\nmushroom-badge-icon {\n\
                \  --badge-icon-size: 20px;\n  margin-right: -5px !important;\n  --badge-size:\
                \ 30px;\n}\n"
              mushroom-shape-avatar$: ".container {\n  --icon-size: 100px;\n}\n"
          entity: person.darragh_clerkin
          icon_type: entity-picture
          layout: vertical
          primary_info: none
          secondary_info: none
          tap_action:
            action: navigate
            navigation_path: '#darragh'
          type: custom:mushroom-person-card
        - chips:
          - card_mod:
              style: "ha-card {\n  height: 15px !important;\n  border: none;\n  --chip-font-size:\
                \ 12px;\n  --chip-background: transparent !important;\n}\n"
            content: '{{states(entity)}}%'
            entity: sensor.op7t_battery_level
            icon: '{% set bl = states(entity) | int %}

              {% set is_charging = states(''binary_sensor.op7t_is_charging'') == ''on''
              %}mdi:battery{% if is_charging %}-charging{% endif %}{% if bl < 10 %}-outline

              {% elif bl < 20 %}-10

              {% elif bl < 30 %}-20

              {% elif bl < 40 %}-30

              {% elif bl < 50 %}-40

              {% elif bl < 60 %}-50

              {% elif bl < 70 %}-60

              {% elif bl < 80 %}-70

              {% elif bl < 90 %}-80

              {% elif bl < 100 %}-90

              {% elif bl == 100 %}{% else %}-unknown

              {% endif %}'
            icon_color: '{% set bl = states(entity) | int %}

              {% if bl < 10 %} red

              {% elif bl < 20 %} red

              {% elif bl < 30 %} red

              {% elif bl < 40 %} orange

              {% elif bl < 50 %} orange

              {% elif bl < 60 %} orange

              {% elif bl < 70 %} green

              {% elif bl < 80 %} green

              {% elif bl < 90 %} green

              {% elif bl < 100 %} green

              {% elif bl == 100 %} green

              {% else %} grey

              {% endif %}'
            tap_action:
              action: navigate
              navigation_path: '#darragh'
            type: template
          - card_mod:
              style: "ha-card {\n  height: 30px !important;\n  border: none;\n  --chip-font-size:\
                \ 12px;\n  background: transparent !important;\n}\n"
            content: '{{states(entity) | replace (''<not connected>'', ''Not Connected'')}}'
            entity: sensor.op7t_wifi_connection
            icon: "{% set wifi_connected = states(entity) == '<not connected>' %}\n\
              {% if wifi_connected %}\n  mdi:wifi-off\n{% else %} \n  mdi:wifi\n{%\
              \ endif %}"
            icon_color: "{% set wifi_connected = states(entity) == '<not connected>'\
              \ %}\n{% if wifi_connected %}\n  disabled\n{% else %} \n  blue\n{% endif\
              \ %}"
            tap_action:
              action: navigate
              navigation_path: '#darragh'
            type: template
            use_entity_picture: false
          type: custom:mushroom-chips-card
        type: custom:stack-in-card
      - cards:
        - card_mod:
            style:
              .: "ha-card {\n  background: transparent !important;\n  border: 0px\
                \ !important;\n  align-items: center;\n}\nmushroom-badge-icon {\n\
                \  --badge-icon-size: 20px;\n  margin-right: -5px !important;\n  --badge-size:\
                \ 30px;\n}\n"
              mushroom-shape-avatar$: ".container {\n  --icon-size: 100px;       \
                \     \n}\n"
          entity: person.pavanthanuj
          icon_type: entity-picture
          primary_info: none
          secondary_info: none
          tap_action:
            action: navigate
            navigation_path: '#pavan'
          type: custom:mushroom-person-card
        - chips:
          - card_mod:
              style: "ha-card {\n  height: 15px !important;\n  border: none;\n  --chip-font-size:\
                \ 12px;\n  --chip-background: transparent !important;\n}\n"
            content: '{{states(entity)}}%'
            entity: sensor.pixel8pro_battery_level
            icon: '{% set bl = states(entity) | int %}

              {% set is_charging = states(''binary_sensor.pixel8pro_is_charging'')
              == ''on'' %}mdi:battery{% if is_charging %}-charging{% endif %}{% if
              bl < 10 %}-outline

              {% elif bl < 20 %}-10

              {% elif bl < 30 %}-20

              {% elif bl < 40 %}-30

              {% elif bl < 50 %}-40

              {% elif bl < 60 %}-50

              {% elif bl < 70 %}-60

              {% elif bl < 80 %}-70

              {% elif bl < 90 %}-80

              {% elif bl < 100 %}-90

              {% elif bl == 100 %}{% else %}-unknown

              {% endif %}'
            icon_color: '{% set bl = states(entity) | int %}

              {% if bl < 10 %} red

              {% elif bl < 20 %} red

              {% elif bl < 30 %} red

              {% elif bl < 40 %} orange

              {% elif bl < 50 %} orange

              {% elif bl < 60 %} green

              {% elif bl < 70 %} green

              {% elif bl < 80 %} green

              {% elif bl < 90 %} green

              {% elif bl < 100 %} green

              {% elif bl == 100 %} green

              {% else %} grey

              {% endif %}'
            tap_action:
              action: navigate
              navigation_path: '#pavan'
            type: template
          - card_mod:
              style: "ha-card {\n  height: 30px !important;\n  border: none;\n  --chip-font-size:\
                \ 12px;\n  background: transparent !important;\n}\n"
            content: '{{states(entity) | replace (''<not connected>'', ''Not Connected'')}}'
            entity: sensor.pixel8pro_wifi_connection
            icon: "{% set wifi_connected = states(entity) == '<not connected>' %}\n\
              {% if wifi_connected %}\n  mdi:wifi-off\n{% else %} \n  mdi:wifi\n{%\
              \ endif %}"
            icon_color: "{% set wifi_connected = states(entity) == '<not connected>'\
              \ %}\n{% if wifi_connected %}\n  disabled\n{% else %} \n  blue\n{% endif\
              \ %}"
            tap_action:
              action: navigate
              navigation_path: '#pavan'
            type: template
            use_entity_picture: false
          type: custom:mushroom-chips-card
        type: custom:stack-in-card
      - cards:
        - card_mod:
            style:
              .: "ha-card {\n  background: transparent !important;\n  border: 0px\
                \ !important;\n  align-items: center;\n}\nmushroom-badge-icon {\n\
                \  --badge-icon-size: 20px;\n  margin-right: -5px !important;\n  --badge-size:\
                \ 30px;\n}\n"
              mushroom-shape-avatar$: ".container {\n  --icon-size: 100px;       \
                \     \n}\n"
          entity: person.hilary_harris
          icon_type: entity-picture
          primary_info: none
          secondary_info: none
          tap_action:
            action: navigate
            navigation_path: '#hilary'
          type: custom:mushroom-person-card
        - chips:
          - card_mod:
              style: "ha-card {\n  height: 15px !important;\n  border: none;\n  --chip-font-size:\
                \ 12px;\n  background: transparent !important;\n}\n"
            content: '{{states(entity)}}%'
            entity: sensor.hilary_s_phone_battery_level
            icon: '{% set bl = states(entity) | int %}

              {% set is_charging = states(''sensor.hilary_s_phone_battery_state'')
              == ''charging'' %}

              mdi:battery{% if is_charging %}-charging{% endif %}{% if bl < 10 %}-outline

              {% elif bl < 20 %}-10

              {% elif bl < 30 %}-20

              {% elif bl < 40 %}-30

              {% elif bl < 50 %}-40

              {% elif bl < 60 %}-50

              {% elif bl < 70 %}-60

              {% elif bl < 80 %}-70

              {% elif bl < 90 %}-80

              {% elif bl < 100 %}-90

              {% elif bl == 100 %}{% else %}-unknown

              {% endif %}'
            icon_color: '{% set bl = states(entity) | int %}

              {% if bl < 10 %} red

              {% elif bl < 20 %} red

              {% elif bl < 30 %} red

              {% elif bl < 40 %} orange

              {% elif bl < 50 %} orange

              {% elif bl < 60 %} green

              {% elif bl < 70 %} green

              {% elif bl < 80 %} green

              {% elif bl < 90 %} green

              {% elif bl < 100 %} green

              {% elif bl == 100 %} green

              {% else %} grey

              {% endif %}  '
            tap_action:
              action: navigate
              navigation_path: '#hilary'
            type: template
            use_entity_picture: false
          - card_mod:
              style: "ha-card {\n  height: 30px !important;\n  border: none;\n  --chip-font-size:\
                \ 12px;\n  background: transparent !important;\n}\n"
            content: '{{states(entity)}}'
            entity: sensor.hilary_s_phone_ssid
            icon: "{% set wifi_connected = states(entity) == 'Not Connected' %}\n\
              {% if wifi_connected %}\n  mdi:wifi-off\n{% else %} \n  mdi:wifi\n{%\
              \ endif %}"
            icon_color: "{% set wifi_connected = states(entity) == 'Not Connected'\
              \ %}\n{% if wifi_connected %}\n  disabled\n{% else %} \n  blue\n{% endif\
              \ %}"
            tap_action:
              action: navigate
              navigation_path: '#hilary'
            type: template
            use_entity_picture: false
          type: custom:mushroom-chips-card
        type: custom:stack-in-card
      type: horizontal-stack
      view_layout:
        column: 1
    - card:
        icon: mdi:wifi
        title: Guest Devices
        type: entities
      filter:
        exclude:
        - state: not_home
        - state: unavailable
        include:
        - attributes:
            interface: guest
          integration: tplink_deco
          options:
            type: custom:mushroom-entity-card
        - entity_id: device_tracker.yair_s_phone
          options:
            name: Yair
            type: custom:mushroom-entity-card
      show_empty: false
      sort:
        ignore_case: false
        method: domain
        reverse: false
      type: custom:auto-entities
      view_layout:
        column: 1
    - options:
        defaultTabIndex: 1
      styles:
        --mdc-icon-size: 25px
        --mdc-tab-color-default: var(--primary-text-color)
        --mdc-tab-text-label-color-default: var(--primary-text-color)
      tabs:
      - attributes:
          icon: mdi:zigbee
          label: Zigbee Devices
          stacked: true
        card:
          card:
            bulk_rename:
            - from: Battery+
              to: Battery
            secondary_info: '{attributes.battery_type_and_quantity}'
            type: custom:battery-state-card
          filter:
            include:
            - entity_id: /battery_plus/
              integration: battery_notes
          sort:
            method: state
            numeric: true
            reverse: false
          type: custom:auto-entities
        styles:
          --mdc-theme-primary: red
      - attributes:
          icon: mdi:cellphone
          label: Mobile Devices
          stacked: true
        card:
          card:
            bulk_rename:
            - from: Level
              to: ''
            - from: level
              to: ''
            - from: Battery
              to: ''
            secondary_info: '{last_changed}'
            type: custom:battery-state-card
          filter:
            include:
            - entity_id: /battery_level/
              integration: mobile_app
          sort:
            method: state
            numeric: true
          type: custom:auto-entities
        styles:
          --mdc-theme-primary: dodgerblue
      type: custom:tabbed-card
      view_layout:
        column: 1
    type: grid
  - cards:
    - cards:
      - cards:
        - cards:
          - entity: sensor.den_humidity
            icon_color: blue
            name: Humidity
            primary_info: state
            secondary_info: name
            type: custom:mushroom-entity-card
          - entity: sensor.den_temperature
            icon_color: red
            name: Temperature
            primary_info: state
            secondary_info: name
            type: custom:mushroom-entity-card
          columns: 2
          square: false
          type: grid
        - animate: true
          decimals: 1
          entities:
          - color: red
            entity: sensor.den_temperature
          - color: dodgerblue
            entity: sensor.den_humidity
            y_axis: secondary
          font_size: 50
          hours_to_show: 24
          line_width: 3
          show:
            fill: fade
            icon: false
            legend: false
            name: false
            state: false
          type: custom:mini-graph-card
        keep:
          background: false
          box_shadow: false
          margin: false
        title: Den
        type: custom:stack-in-card
      - cards:
        - cards:
          - entity: sensor.kitchen_temperature_and_humidity_humidity
            icon_color: blue
            name: Humidity
            primary_info: state
            secondary_info: name
            type: custom:mushroom-entity-card
          - entity: sensor.kitchen_temperature_and_humidity_temperature
            icon_color: red
            name: Temperature
            primary_info: state
            secondary_info: name
            type: custom:mushroom-entity-card
          columns: 2
          square: false
          type: grid
        - animate: true
          decimals: 1
          entities:
          - color: red
            entity: sensor.kitchen_temperature_and_humidity_temperature
          - color: dodgerblue
            entity: sensor.kitchen_temperature_and_humidity_humidity
            y_axis: secondary
          font_size: 50
          hours_to_show: 24
          line_width: 3
          show:
            fill: fade
            icon: false
            legend: false
            name: false
            state: false
          type: custom:mini-graph-card
        keep:
          background: false
          box_shadow: false
          margin: false
        title: Kitchen
        type: custom:stack-in-card
      - cards:
        - cards:
          - entity: sensor.living_room_humidity
            icon_color: blue
            name: Humidity
            primary_info: state
            secondary_info: name
            type: custom:mushroom-entity-card
          - entity: sensor.living_room_temperature
            icon_color: red
            name: Temperature
            primary_info: state
            secondary_info: name
            type: custom:mushroom-entity-card
          columns: 2
          square: false
          type: grid
        - animate: true
          decimals: 1
          entities:
          - color: red
            entity: sensor.living_room_temperature
          - color: dodgerblue
            entity: sensor.living_room_humidity
            y_axis: secondary
          font_size: 50
          hours_to_show: 24
          line_width: 3
          show:
            fill: fade
            icon: false
            legend: false
            name: false
            state: false
          type: custom:mini-graph-card
        keep:
          background: false
          box_shadow: false
          margin: false
        title: Living Room
        type: custom:stack-in-card
      - cards:
        - cards:
          - entity: sensor.hygrometer_humidity
            icon_color: blue
            name: Humidity
            primary_info: state
            secondary_info: name
            type: custom:mushroom-entity-card
          - entity: sensor.hygrometer_temperature
            icon_color: red
            name: Temperature
            primary_info: state
            secondary_info: name
            type: custom:mushroom-entity-card
          columns: 2
          square: false
          type: grid
        - animate: true
          decimals: 1
          entities:
          - color: red
            entity: sensor.hygrometer_temperature
          - color: dodgerblue
            entity: sensor.hygrometer_humidity
            y_axis: secondary
          font_size: 50
          hours_to_show: 24
          line_width: 3
          show:
            fill: fade
            icon: false
            legend: false
            name: false
            state: false
          type: custom:mini-graph-card
        keep:
          background: false
          box_shadow: false
          margin: false
        title: Outdoor
        type: custom:stack-in-card
      type: vertical-stack
      view_layout:
        column: 2
    type: grid
  - cards:
    - cards:
      - cards:
        - cards:
          - entity: sensor.den_light
            icon_color: orange
            primary_info: state
            secondary_info: name
            type: custom:mushroom-entity-card
          - entity: sensor.living_room_light
            icon_color: cyan
            primary_info: state
            secondary_info: name
            type: custom:mushroom-entity-card
          columns: 2
          square: false
          type: grid
        - animate: true
          entities:
          - color: orange
            entity: sensor.den_light
          - color: aqua
            entity: sensor.living_room_light
            y_axis: secondary
          font_size: 50
          hours_to_show: 24
          line_width: 3
          show:
            fill: fade
            icon: false
            legend: false
            name: false
            state: false
          type: custom:mini-graph-card
        keep:
          background: false
          box_shadow: false
          margin: false
        type: custom:stack-in-card
      - cards:
        - cards:
          - entity: sensor.porch_motion_illuminance
            icon_color: orange
            name: Porch
            primary_info: state
            secondary_info: name
            type: custom:mushroom-entity-card
          - entity: sensor.hallway_motion_illuminance
            icon_color: cyan
            name: Hallway
            primary_info: state
            secondary_info: name
            type: custom:mushroom-entity-card
          - entity: sensor.presence_sensor_light_level
            icon_color: red
            name: Living Room
            primary_info: state
            secondary_info: name
            type: custom:mushroom-entity-card
          columns: 3
          square: false
          type: grid
        - animate: true
          entities:
          - color: orange
            entity: sensor.porch_motion_illuminance
            name: Porch
          - color: cyan
            entity: sensor.hallway_motion_illuminance
            name: Hallway
            y_axis: secondary
          - color: red
            entity: sensor.living_room_light
            name: Living Room
            y_axis: secondary
          font_size: 50
          hours_to_show: 24
          line_width: 3
          show:
            fill: fade
            icon: false
            name: false
            state: false
          type: custom:mini-graph-card
        keep:
          background: false
          box_shadow: false
          margin: false
        type: custom:stack-in-card
      type: vertical-stack
      view_layout:
        column: 3
    - alignment: center
      chips:
      - content_info: state
        entity: sensor.count_automations
        icon: mdi:robot
        icon_color: red
        name: '# Automations'
        type: entity
      - entity: sensor.count_scripts
        icon: mdi:script
        icon_color: purple
        name: '# Scripts'
        type: entity
      - entity: sensor.count_scenes
        icon: mdi:palette-outline
        icon_color: indigo
        name: '# Scenes'
        type: entity
      - entity: sensor.count_sensors
        icon: ''
        icon_color: blue
        name: '# Sensors'
        type: entity
      - entity: sensor.count_binary_sensors
        icon_color: green
        name: '# Binary Sensors'
        type: entity
      - entity: sensor.count_device_trackers
        icon: mdi:lan-connect
        icon_color: light-green
        name: '# Device Trackers'
        type: entity
      - entity: sensor.count_input_booleans
        icon_color: yellow
        name: '# Input Booleans'
        type: entity
      - entity: sensor.count_switches
        icon: mdi:light-switch
        icon_color: brown
        name: '# Switches'
        type: entity
      - entity: sensor.count_lights
        icon: mdi:lightbulb
        icon_color: deep-orange
        name: '# Lights'
        type: entity
      - entity: sensor.count_media_players
        icon: mdi:cast
        icon_color: amber
        name: '# Media Players'
        type: entity
      - entity: sensor.count_zones
        icon: mdi:map-clock
        name: '# Zones'
        type: entity
      type: custom:mushroom-chips-card
    type: grid
  - cards:
    - cards:
      - back_open: true
        bg_blur: 0
        card_type: pop-up
        hash: '#darragh'
        margin: 18px
        margin_top_mobile: 00px
        show_header: false
        type: custom:bubble-card
        width_desktop: 800px
      - cards:
        - card_mod:
            class: content
          entities:
          - entity: person.darragh_clerkin
            secondary_info: last-changed
          type: entities
        - entities:
          - entity: person.darragh_clerkin
            name: ' '
          type: history-graph
        - cards:
          - entity: sensor.op7t_battery_level
            fill_container: true
            icon_color: green
            layout: vertical
            name: Battery
            type: custom:mushroom-entity-card
          - entity: binary_sensor.op7t_is_charging
            fill_container: true
            layout: vertical
            name: Charging
            type: custom:mushroom-entity-card
          - entity: binary_sensor.op7t_wifi_state
            fill_container: true
            layout: vertical
            name: Wi-Fi
            type: custom:mushroom-entity-card
          - entity: binary_sensor.op7t_bluetooth_state
            fill_container: true
            layout: vertical
            name: Bluetooth
            type: custom:mushroom-entity-card
          mode: horizontal
          type: custom:stack-in-card
        - dark_mode: true
          default_zoom: 15
          entities:
          - entity: person.darragh_clerkin
          hours_to_show: 36
          type: map
        type: vertical-stack
      type: vertical-stack
    - cards:
      - back_open: true
        bg_blur: 0
        card_type: pop-up
        hash: '#hilary'
        margin: 18px
        margin_top_mobile: 00px
        show_header: false
        type: custom:bubble-card
        width_desktop: 800px
      - cards:
        - card_mod:
            class: content
          entities:
          - entity: person.hilary_harris
            secondary_info: last-changed
          type: entities
        - entities:
          - entity: person.hilary_harris
            name: ' '
          type: history-graph
        - cards:
          - entity: sensor.hilary_s_phone_battery_level
            fill_container: true
            icon_color: green
            layout: vertical
            name: Battery
            type: custom:mushroom-entity-card
          - entity: sensor.hilary_s_phone_battery_state
            fill_container: true
            layout: vertical
            name: Charging?
            type: custom:mushroom-entity-card
          - entity: sensor.hilary_s_phone_connection_type
            fill_container: true
            layout: vertical
            name: Connection
            type: custom:mushroom-entity-card
          - entity: sensor.hilary_s_phone_ssid
            fill_container: true
            layout: vertical
            name: SSID
            type: custom:mushroom-entity-card
          mode: horizontal
          type: custom:stack-in-card
        - dark_mode: true
          default_zoom: 15
          entities:
          - entity: device_tracker.hilary_s_phone
          hours_to_show: 24
          type: map
        style:
          hui-vertical-stack-card:
            $: "button-card {\n  align-self: center;\n  padding: .2em 0 2em 0;\n}\n\
              hui-history-graph-card {\n  padding: 0 1em 0 1em;\n}\n"
            $hui-entities-card$: "#states {\n  padding-left: 2em;\n  padding-bottom:\
              \ .9em;\n}\n"
            $hui-glance-card$: ".entities {\n  padding: 12px 29px 4px 26px !important;\n\
              }\n"
            $hui-map-card:
              $: "#root {\n  height: 25em;\n  padding-bottom: 0 !important;\n}\nha-icon-button\
                \ {\n  color: var(--primary-color);\n  zoom: 140%;\n  margin-left:\
                \ -0.2em;\n}\nha-card {\n  border-top: 2px solid #1a1a1a;\n  border-radius:\
                \ 0;\n  transition: none;\n}\n"
              $ha-map$: "#map {\n  background-color: #191919 !important;\n}\n.leaflet-control-attribution\
                \ {\n  display: none;\n}\n.leaflet-bar a {\n  background-color: rgba(115,\
                \ 123, 124, 0.2) !important;\n  color: #9da0a2 !important;\n  backdrop-filter:\
                \ blur(0.25em);\n  zoom: 140%;\n}\na.leaflet-control-zoom-in {\n \
                \ border-bottom: 1px solid #181818 !important;\n}\n.leaflet-pane.leaflet-tile-pane\
                \ {\n  filter: invert(0.95) grayscale(0.95) contrast(95%);\n}    \n"
        type: vertical-stack
      type: vertical-stack
    - cards:
      - back_open: true
        bg_blur: 0
        card_type: pop-up
        hash: '#pavan'
        margin: 18px
        margin_top_mobile: 00px
        show_header: false
        type: custom:bubble-card
        width_desktop: 800px
      - cards:
        - card_mod:
            class: content
          entities:
          - entity: person.pavanthanuj
            secondary_info: last-changed
          type: entities
        - entities:
          - entity: person.pavanthanuj
            name: ' '
          type: history-graph
        - cards:
          - entity: sensor.pixel8pro_battery_level
            fill_container: true
            icon_color: green
            layout: vertical
            name: Battery
            type: custom:mushroom-entity-card
          - entity: binary_sensor.pixel8pro_is_charging
            fill_container: true
            layout: vertical
            name: Charging
            type: custom:mushroom-entity-card
          - entity: binary_sensor.pixel8pro_wifi_state
            fill_container: true
            layout: vertical
            name: Wi-Fi
            type: custom:mushroom-entity-card
          - entity: binary_sensor.pixel8pro_bluetooth_state
            fill_container: true
            layout: vertical
            name: Bluetooth
            type: custom:mushroom-entity-card
          - entity: binary_sensor.pixel8pro_mobile_data
            fill_container: true
            layout: vertical
            name: Data
            type: custom:mushroom-entity-card
          mode: horizontal
          type: custom:stack-in-card
        - alignment: center
          chips:
          - content_info: name
            entity: device_tracker.pixel8pro
            icon: mdi:volume-high
            icon_color: red
            name: Find My Phone
            tap_action:
              action: call-service
              data:
                data:
                  channel: alarm_stream
                  priority: high
                  ttl: 0
                message: Find My Phone
              service: notify.mobile_app_pixel8pro
            type: entity
          type: custom:mushroom-chips-card
        - dark_mode: true
          default_zoom: 15
          entities:
          - entity: person.pavanthanuj
          hours_to_show: 24
          type: map
        style:
          hui-vertical-stack-card:
            $: "button-card {\n  align-self: center;\n  padding: .2em 0 2em 0;\n}\n\
              hui-history-graph-card {\n  padding: 0 1em 0 1em;\n}\n"
            $hui-entities-card$: "#states {\n  padding-left: 2em;\n  padding-bottom:\
              \ .9em;\n}\n"
            $hui-glance-card$: ".entities {\n  padding: 12px 29px 4px 26px !important;\n\
              }\n"
            $hui-map-card:
              $: "#root {\n  height: 25em;\n  padding-bottom: 0 !important;\n}\nha-icon-button\
                \ {\n  color: var(--primary-color);\n  zoom: 140%;\n  margin-left:\
                \ -0.2em;\n}\nha-card {\n  border-top: 2px solid #1a1a1a;\n  border-radius:\
                \ 0;\n  transition: none;\n}\n"
              $ha-map$: "#map {\n  background-color: #191919 !important;\n}\n.leaflet-control-attribution\
                \ {\n  display: none;\n}\n.leaflet-bar a {\n  background-color: rgba(115,\
                \ 123, 124, 0.2) !important;\n  color: #9da0a2 !important;\n  backdrop-filter:\
                \ blur(0.25em);\n  zoom: 140%;\n}\na.leaflet-control-zoom-in {\n \
                \ border-bottom: 1px solid #181818 !important;\n}\n.leaflet-pane.leaflet-tile-pane\
                \ {\n  filter: invert(0.95) grayscale(0.95) contrast(95%);\n}\n"
        type: vertical-stack
      type: vertical-stack
    type: grid
  type: sections
  visible:
  - user: 74f7e2ffd3594037b1a2fc4de82d9fea
- cards: []
  icon: mdi:robot
  max_columns: 2
  path: automations
  sections:
  - cards:
    - heading: "\U0001F916 Automations"
      type: heading
    - styles:
        --mdc-icon-size: 25px
        --mdc-tab-color-default: var(--primary-text-color)
        --mdc-tab-text-label-color-default: var(--primary-text-color)
      tabs:
      - attributes:
          icon: mdi:castle
          label: Den
        card:
          card:
            show_header_toggle: false
            state_color: true
            type: entities
          filter:
            exclude: []
            include:
            - name: "/\U0001F3F0/"
            show_empty: true
            sort:
              method: last_triggered
          type: custom:auto-entities
        styles:
          --mdc-theme-primary: cyan
      - attributes:
          icon: mdi:lightbulb
          label: Light
        card:
          card:
            show_header_toggle: false
            state_color: true
            type: entities
          filter:
            exclude: []
            include:
            - name: "/\U0001F4A1/"
            show_empty: true
            sort:
              method: last_triggered
          type: custom:auto-entities
        styles:
          --mdc-theme-primary: yellow
      - attributes:
          icon: mdi:cog
          label: Tools
        card:
          card:
            show_header_toggle: false
            state_color: true
            type: entities
          filter:
            exclude: []
            include:
            - name: "/\u2699\uFE0F/"
            show_empty: true
            sort:
              method: last_triggered
          type: custom:auto-entities
        styles:
          --mdc-theme-primary: tomato
      - attributes:
          icon: mdi:music
          label: Media
        card:
          card:
            show_header_toggle: false
            state_color: true
            type: entities
          filter:
            exclude: []
            include:
            - name: "/\U0001F3B5/"
            - name: "/\U0001F3AC/"
            - name: "/\U0001F4FA/"
            show_empty: true
            sort:
              method: last_triggered
          type: custom:auto-entities
        styles:
          --mdc-theme-primary: skyblue
      - attributes:
          icon: mdi:publish
          label: Notifiy
        card:
          card:
            show_header_toggle: false
            state_color: true
            type: entities
          filter:
            include:
            - domain: automation
              name: /[Nn]otif/
            - name: "*\U0001F4F3*"
            show_empty: true
            sort:
              method: last_triggered
          type: custom:auto-entities
        styles:
          --mdc-theme-primary: purple
      - attributes:
          icon: mdi:robot
          label: Others
        card:
          card:
            show_header_toggle: false
            state_color: true
            type: entities
          filter:
            exclude:
            - name: "*\U0001F3B5*"
            - name: "*\U0001F9FA*"
            - name: "*\U0001F4A1*"
            - name: "*\U0001F4A7*"
            - name: "*\U0001F3AC*"
            - name: "*\U0001F3F0*"
            - name: "*\u2699\uFE0F*"
            - name: "*\U0001F4FA*"
            - name: "*\U0001F4F3*"
            include:
            - domain: automation
            show_empty: true
            sort:
              ignore_case: false
              method: last_triggered
          type: custom:auto-entities
        styles:
          --mdc-theme-primary: lightgreen
      - attributes:
          icon: mdi:robot-confused-outline
          label: Disabled
        card:
          card:
            show_header_toggle: false
            state_color: true
            type: entities
          filter:
            include:
            - domain: automation
              state: 'off'
            show_empty: true
            sort:
              ignore_case: false
              method: last_triggered
          type: custom:auto-entities
        styles:
          --mdc-theme-primary: grey
      type: custom:tabbed-card
  - cards:
    - heading: "\U0001F4DD Scripts"
      type: heading
    - card:
        show_header_toggle: false
        type: entities
      filter:
        exclude: []
        include:
        - domain: script
      sort:
        method: last_triggered
        reverse: false
      type: custom:auto-entities
    type: grid
  type: sections
  visible:
  - user: 74f7e2ffd3594037b1a2fc4de82d9fea
- cards: []
  icon: mdi:racing-helmet
  max_columns: 5
  path: formula-1
  sections:
  - cards:
    - card_type: last_result
      f1_font: true
      hide_tracklayout: true
      sensor: sensor.formula_one_sensor_last_result
      show_carnumber: true
      standings:
        show_flag: true
        show_team: true
      title: Last Race
      type: custom:formulaone-card
    type: grid
    visibility:
    - condition: screen
      media_query: '(min-width: 2000px)'
  - cards:
    - card_type: countdown
      date_locale: in
      f1_font: true
      show_raceinfo: true
      title: Next Race
      type: custom:formulaone-card
    type: grid
    visibility:
    - condition: screen
      media_query: '(min-width: 2000px)'
  - cards:
    - cards:
      - card_type: driver_standings
        f1_font: true
        show_carnumber: true
        standings:
          show_flag: true
        title: Driver Standings
        translations:
          points: Points
        type: custom:formulaone-card
      - card_type: constructor_standings
        f1_font: true
        standings:
          show_flag: true
          show_team: true
          show_teamlogo: true
        title: Constructor Standings
        translations:
          points: Points
        type: custom:formulaone-card
      type: vertical-stack
    type: grid
    visibility:
    - condition: screen
      media_query: '(min-width: 2000px)'
  - cards:
    - card_type: results
      f1_font: true
      hide_tracklayout: true
      standings:
        show_flag: true
      title: Race Results
      type: custom:formulaone-card
    type: grid
    visibility:
    - condition: screen
      media_query: '(min-width: 2000px)'
  - cards:
    - card_type: schedule
      date_locale: in
      f1_font: true
      sensor: sensor.formula_one_sensor_races
      standings:
        show_flag: true
      title: Schedule
      type: custom:formulaone-card
    type: grid
    visibility:
    - condition: screen
      media_query: '(min-width: 2000px)'
  - cards:
    - options:
        defaultTabIndex: 1
      styles:
        isFadingIndicator: true
        isMinWidthIndicator: true
        minWidth: true
        stacked: true
      tabs:
      - attributes:
          label: Last Race
        card:
          card_type: last_result
          f1_font: true
          hide_tracklayout: true
          sensor: sensor.formula_one_sensor_last_result
          show_carnumber: true
          standings:
            show_flag: true
            show_team: true
          title: Last Race
          type: custom:formulaone-card
        styles:
          --mdc-theme-primary: yellow
      - attributes:
          label: Next Race
        card:
          card_type: countdown
          date_locale: in
          f1_font: true
          show_raceinfo: true
          title: Next Race
          type: custom:formulaone-card
        styles:
          --mdc-theme-primary: red
      - attributes:
          label: Schedule
        card:
          card_type: schedule
          date_locale: in
          f1_font: true
          sensor: sensor.formula_one_sensor_races
          standings:
            show_flag: true
          title: Schedule
          type: custom:formulaone-card
        styles:
          --mdc-theme-primary: cyan
      - attributes:
          label: Driver Standings
        card:
          card_type: driver_standings
          f1_font: true
          show_carnumber: true
          standings:
            show_flag: true
          title: Driver Standings
          translations:
            points: Points
          type: custom:formulaone-card
        styles:
          --mdc-theme-primary: orange
      - attributes:
          label: Constructor Standings
        card:
          card_type: constructor_standings
          f1_font: true
          standings:
            show_flag: true
            show_team: true
            show_teamlogo: true
          title: Constructor Standings
          translations:
            points: Points
          type: custom:formulaone-card
        styles:
          --mdc-theme-primary: purple
      - attributes:
          label: Results
        card:
          card_type: results
          f1_font: true
          hide_tracklayout: true
          standings:
            show_flag: true
          title: Race Results
          type: custom:formulaone-card
        styles:
          --mdc-theme-primary: tomato
      type: custom:tabbed-card
    type: grid
    visibility:
    - condition: screen
      media_query: '(max-width: 2000px)'
  type: sections
  visible:
  - user: e07f5c6a76fd4886ad5d945ed22f6d4b
  - user: 74f7e2ffd3594037b1a2fc4de82d9fea
- cards:
  - custom_fields:
      date:
        card:
          alignment: center
          chips:
          - content_info: none
            entity: sensor.calvin_and_hobbes
            icon: mdi:shuffle-variant
            icon_color: accent
            tap_action:
              action: call-service
              service: homeassistant.update_entity
              target:
                entity_id: sensor.calvin_and_hobbes
            type: entity
          - content: '{{ as_timestamp(strptime(states.sensor.calvin_and_hobbes.attributes.publishedDate,
              ''%Y/%m/%d'')) | timestamp_custom(''%-d %b, %Y'') }}'
            double_tap_action:
              action: none
            hold_action:
              action: none
            tap_action:
              action: none
            type: template
          type: custom:mushroom-chips-card
      item:
        card:
          double_tap_action:
            action: url
            url_path: '[[[ return entity.state ]]]'
          entity: sensor.calvin_and_hobbes
          entity_picture: '[[[ return entity.state ]]]'
          hold_action:
            action: url
            url_path: '[[[ return entity.state ]]]'
          show_entity_picture: true
          show_name: false
          size: 100%
          styles:
            card:
            - padding: 0px
            - border-radius: 0px
          tap_action:
            action: navigate
            navigation_path: /lovelace/calvinandhobbes
          type: custom:button-card
    double_tap_action:
      action: navigate
      navigation_path: /lovelace/den
    entity: sensor.calvin_and_hobbes
    hold_action:
      action: navigate
      navigation_path: /lovelace/den
    show_icon: false
    show_name: false
    styles:
      card:
      - padding: 0px
      - border-radius: 0px
      grid:
      - grid-template-areas: '"item item" "date date"'
    tap_action:
      action: navigate
      navigation_path: /lovelace/den
    type: custom:button-card
  icon: mdi:thought-bubble
  path: calvinandhobbes
  subview: true
  theme: Google Theme
  type: panel
  visible:
  - user: 74f7e2ffd3594037b1a2fc4de82d9fea
- cards: []
  icon: mdi:package-up
  max_columns: 2
  path: updates
  sections:
  - cards:
    - entity: update.home_assistant_supervisor_update
      type: custom:more-info-card
    type: grid
    visibility:
    - condition: state
      entity: update.home_assistant_supervisor_update
      state: 'on'
  - cards:
    - entity: update.home_assistant_core_update
      type: custom:more-info-card
    type: grid
    visibility:
    - condition: state
      entity: update.home_assistant_core_update
      state: 'on'
  - cards:
    - card:
        title: HACS Updates
        type: entities
      filter:
        exclude: []
        include:
        - domain: update
          integration: hacs
          options:
            type: custom:more-info-card
          state: 'on'
      show_empty: false
      type: custom:auto-entities
    type: grid
  - cards:
    - card:
        title: Add-on Updates
        type: entities
      filter:
        exclude:
        - entity_id: update.home_assistant_core_update
        - entity_id: update.home_assistant_supervisor_update
        include:
        - integration: hassio
          options:
            type: custom:more-info-card
          state: 'on'
      show_empty: false
      type: custom:auto-entities
    type: grid
  - cards:
    - card:
        title: Other Updates
        type: entities
      filter:
        exclude:
        - entity_id: update.home_assistant_core_update
        - entity_id: update.home_assistant_supervisor_update
        - integration: hassio
          state: 'on'
        - integration: hacs
          state: 'on'
        include:
        - domain: update
          options:
            type: custom:more-info-card
          state: 'on'
      show_empty: false
      type: custom:auto-entities
    type: grid
  subview: true
  type: sections
  visible:
  - user: 74f7e2ffd3594037b1a2fc4de82d9fea
- cards:
  - elements:
    - entity: light.shapes
      icon: mdi:hexagon-multiple
      style:
        left: 48%
        top: 65%
      tap_action:
        action: toggle
      type: icon
    image: /local/floorplan.svg
    type: picture-elements
  icon: mdi:floor-plan
  path: floor-plan
  type: panel
  visible:
  - user: 74f7e2ffd3594037b1a2fc4de82d9fea
- cards:
  - artwork: material
    card_mod:
      style: ".entity__info {\n  max-width: 100% !important;\n  top: -80px;\n  flex-direction:\
        \ column-reverse !important;\n  \n  }\n.entity__info__name {\n    font-size:\
        \ 16px !important;\n    font-family: Ubuntu;\n  }\n.entity__info__media {\n\
        \    font-size: 18px !important;\n    font-weight: bold;\n    font-family:\
        \ Ubuntu;\n  }\n.entity__icon {\n    top: -80px !important;\n    color: #1DB954\
        \ !important;\n  }\n:host {\n  --mini-media-player-background-opacity: 1;\n\
        \  --mini-media-player-progress-height: 10px;\n  --mini-media-player-name-font-weight:\
        \ 800;\n  --mini-media-player-scale:1.1;\n  }\n  @media screen and (max-width:\
        \ 600px) {\n    :host {\n      --mini-media-player-scale: 1.2;\n    }   \n\
        \  }\nha-card {\n    border: 0px !important;\n    box-shadow: none !important;\n\
        \    height: 200px !important;\n    --mdc-icon-size: 40px  !important;\n \
        \ }\n"
    entity: media_player.spotify
    info: scroll
    sound_mode: full
    source: icon
    toggle_power: true
    type: custom:mini-media-player
    volume_stateless: false
  path: test
  title: test
  type: masonry
  visible: []
