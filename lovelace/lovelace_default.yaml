button_card_templates:
  ac_button:
    aspect_ratio: 1/1
    color_type: icon
    hold_action:
      action: none
    layout: vertical
    show_label: false
    show_name: true
    show_state: false
    styles:
      card:
      - border-radius: 10px
      - border: solid 1px var(--primary-color)
      - box-shadow: none
      - padding: 0px 6px
      - margin: 0px 0px
      - --paper-card-background-color: rgba(0, 0, 0, 0)
      icon:
      - width: 5px
      name:
      - justify-self: middle
      - align-self: middle
      - font-size: 14px
      - padding: 0px 0px
      - color: var(--secondary-text-color)
    tap_action:
      action: call-service
  blank_button:
    aspect_ratio: 4/3
    color_type: icon
    hold_action:
      action: none
    layout: vertical
    show_label: false
    show_name: false
    show_state: false
    styles:
      card:
      - border-radius: 0px
      - border: solid 0px var(--primary-color)
      - box-shadow: none
      - padding: 6px 6px
      - margin: 0px 0px
      - --paper-card-background-color: rgba(0, 0, 0, 0)
    tap_action:
      action: none
  icon_button:
    aspect_ratio: 4/3
    color_type: card
    hold_action:
      action: none
    layout: vertical
    show_label: false
    show_name: false
    show_state: false
    styles:
      card:
      - border-radius: 10px
      - border: solid 1px var(--primary-color)
      - box-shadow: none
      - padding: 6px 6px
      - margin: 0px 0px
      - --paper-card-background-color: rgba(0, 0, 0, 0)
      icon:
      - width: 28px
    tap_action:
      action: call-service
  list_button:
    aspect_ratio: 5/1
    color_type: icon
    layout: vertical
    show_entity_picture: true
    show_name: true
    show_state: false
    styles:
      card:
      - border-radius: 15px
      - border: solid 0.1px var(--primary-color)
      - box-shadow: none
      - padding: 0px 0px
      - margin: 0px 0px
      - background-size: cover
      - --paper-card-background-color: rgba(0, 0, 0, 0)
      name:
      - justify-self: middle
      - align-self: middle
      - font-size: 20px
      - padding: 0px 0px
      - color: var(--secondary-text-color)
    tap_action:
      action: call-service
  logo_button:
    aspect_ratio: 21/9
    color: rgb(255,255,255)
    color_type: card
    hold_action:
      action: none
    layout: vertical
    show_label: false
    show_name: false
    show_state: false
    styles:
      card:
      - border-radius: 5px
      - border: solid 0.5px var(--primary-color)
      - box-shadow: none
      - padding: 0px 0px
      - margin: 0px 0px
      - --paper-card-background-color: rgba(0, 0, 0, 0)
      icon:
      - width: 50px
    tap_action:
      action: call-service
  menu_button:
    aspect_ratio: 4/3
    color_type: icon
    hold_action:
      action: none
    layout: vertical
    show_label: false
    show_name: false
    show_state: false
    styles:
      card:
      - border-radius: 10px
      - border: solid 1px var(--primary-color)
      - box-shadow: none
      - padding: 6px 6px
      - margin: 0px 0px
      - --paper-card-background-color: rgba(0, 0, 0, 0)
      icon:
      - width: 28px
    tap_action:
      action: call-service
preload_cards:
- markdown
- gauge
- picture-glance
preload_rows:
- divider
swipe_nav:
  animate: fade
  prevent_default: true
title: ''
views:
- badges: []
  cards:
  - alignment: center
    chips:
    - content_info: none
      entity: sun.sun
      icon_color: orange
      tap_action:
        action: fire-dom-event
        browser_mod:
          data:
            browser_id: THIS
            content:
              type: custom:horizon-card
          service: browser_mod.popup
      type: entity
      use_entity_picture: false
    - content_info: none
      entity: sensor.moon_phase
      tap_action:
        action: fire-dom-event
        browser_mod:
          data:
            browser_id: THIS
            content:
              color_type: card
              entity: sensor.moon_phase
              layout: icon_state
              show_entity_picture: true
              show_name: false
              show_state: true
              size: 80%
              styles:
                card:
                - border-radius: 200px
                state:
                - justify-self: center
                - font-size: 20px
                - font-weight: bold
              type: custom:button-card
          service: browser_mod.popup
      type: entity
      use_entity_picture: true
    - entity: sensor.download_speed
      hold_action:
        action: more-info
      icon_color: blue
      tap_action:
        action: call-service
        data: {}
        service: homeassistant.update_entity
        target:
          entity_id: sensor.speedtest_download
      type: entity
    - content_info: none
      entity: binary_sensor.den_motion_occupancy
      icon_color: teal
      type: entity
    - content_info: none
      entity: binary_sensor.chair_occupancy
      icon_color: purple
      type: entity
    - entity: binary_sensor.den_door_contact
      icon: '{{ iif(is_state(''binary_sensor.den_door_contact'', ''on''), ''mdi:door-open'',
        ''mdi:door-closed'') }}'
      icon_color: '{{ iif(is_state(''binary_sensor.den_door_contact'', ''on''), ''green'',
        ''red'') }}'
      tap_action:
        action: more-info
      type: template
    - chip:
        entity: sensor.hacs
        hold_action:
          action: more-info
        tap_action:
          action: navigate
          navigation_path: /hacs/entry
        type: entity
      conditions:
      - entity: sensor.hacs
        state_not: '0'
      type: conditional
    - chip:
        entity: sensor.supervisor_updates
        hold_action:
          action: more-info
        icon: mdi:home-assistant
        tap_action:
          action: navigate
          navigation_path: /config/dashboard
        type: entity
        use_entity_picture: false
      conditions:
      - entity: sensor.supervisor_updates
        state_not: '0'
      type: conditional
    - chip:
        entity: update.home_assistant_core_update
        hold_action:
          action: more-info
        tap_action:
          action: navigate
          navigation_path: /config/dashboard
        type: entity
      conditions:
      - entity: update.home_assistant_core_update
        state: 'on'
      type: conditional
    - chip:
        entity: binary_sensor.backups_stale
        icon: mdi:cloud-upload
        type: entity
      conditions:
      - entity: binary_sensor.backups_stale
        state: 'on'
      type: conditional
    - entity: weather.home
      show_conditions: true
      show_temperature: true
      tap_action:
        action: fire-dom-event
        browser_mod:
          data:
            browser_id: THIS
            content:
              cards:
              - backdrop: true
                entity: weather.home
                name: ' '
                secondary_info:
                - precipitation_probability
                type: custom:simple-weather-card
              - current: false
                details: true
                entity: weather.home_hourly
                forecast: true
                hourly_forecast: true
                number_of_forecasts: '7'
                type: custom:weather-card
              type: vertical-stack
          service: browser_mod.popup
      type: weather
    type: custom:mushroom-chips-card
    view_layout:
      column: 2
  - content: '{{ states("sensor.random_joke") }}'
    type: markdown
    view_layout:
      column: 1
  - entity: mediaquery
    states:
      '(min-width: 800px)':
        alignment: center
        chips:
        - content: "{% if is_state('device_tracker.oneplus_10pro', 'home') %}\n  {{states.device_tracker.oneplus_10pro.attributes.deco_device\
            \ | replace(\"living_room\",\" Living Room\") }} - {{ states.device_tracker.oneplus_10pro.attributes.connection_type\
            \ | replace(\"band\",\"\") | replace(\"5\",\"5 GHz\")| replace(\"2_4\"\
            ,\"2.4 GHz\")}} \n{% else %}\n  Not Connected\n{% endif %}"
          double_tap_action:
            action: none
          hold_action:
            action: none
          icon: '{% if is_state(''device_tracker.oneplus_10pro'', ''home'') %}

            mdi:cellphone-wireless

            {% else %}

            mdi:cellphone-off

            {% endif %}'
          icon_color: '{% if is_state(''device_tracker.oneplus_10pro'', ''home'')
            %}

            blue

            {% else %}

            white

            {% endif %}

            '
          tap_action:
            action: none
          type: template
        - icon: mdi:update
          icon_color: yellow
          tap_action:
            action: call-service
            data: {}
            service: script.update_all_phone_sensors
            target: {}
          type: action
        - content_info: state
          entity: sensor.10pro_battery_level
          icon: si:oneplus
          icon_color: blue
          type: entity
          use_entity_picture: false
        - content_info: none
          entity: binary_sensor.10pro_is_charging
          icon_color: yellow
          type: entity
        - entity: sensor.galaxy_watch4_classic_battery_level
          icon: phu:pixelwatch
          icon_color: deep-orange
          type: entity
        - content_info: none
          entity: binary_sensor.galaxy_watch4_classic_is_charging
          icon_color: amber
          type: entity
        type: custom:mushroom-chips-card
    type: custom:state-switch
    view_layout:
      column: 1
  - cards:
    - cards:
      - double_tap_action:
          action: call-service
          data: {}
          service: homeassistant.turn_on
          target:
            entity_id: group.den
        entity: group.den
        fill_container: false
        hold_action:
          action: none
        icon: '{% if is_state(''group.den'', ''on'') %}

          mdi:account

          {% else %}

          mdi:account-outline

          {% endif %}'
        icon_color: '{% if is_state(''group.den'', ''on'') %}

          green

          {% else %}

          grey

          {% endif %}'
        layout: horizontal
        primary: Home
        secondary: ''
        tap_action:
          action: none
        type: custom:mushroom-template-card
      - double_tap_action:
          action: call-service
          data: {}
          service: homeassistant.turn_off
          target:
            entity_id: group.den
        entity: group.den
        fill_container: false
        hold_action:
          action: none
        icon: '{% if is_state(''group.den'', ''on'') %}

          mdi:account-off-outline

          {% else %}

          mdi:account-off

          {% endif %}'
        icon_color: '{% if is_state(''group.den'', ''on'') %}

          grey

          {% else %}

          brown

          {% endif %}'
        layout: horizontal
        primary: Away
        secondary: ''
        tap_action:
          action: none
        type: custom:mushroom-template-card
      - double_tap_action:
          action: none
        entity: binary_sensor.in_bed
        fill_container: false
        hold_action:
          action: more-info
        icon: '{{ iif(is_state(''binary_sensor.in_bed'', ''on''), ''mdi:bed'', ''mdi:bed-outline'')
          }}'
        icon_color: '{% if is_state(''binary_sensor.in_bed'', ''on'') %}

          blue

          {% else %}

          grey

          {% endif %}'
        layout: horizontal
        primary: Sleep
        secondary: ''
        tap_action:
          action: none
        type: custom:mushroom-template-card
      columns: 3
      square: false
      type: grid
    - collapsible_controls: true
      entity: light.light
      fill_container: false
      icon: mdi:ceiling-light
      name: Lumos
      show_brightness_control: true
      show_color_control: true
      show_color_temp_control: true
      type: custom:mushroom-light-card
      use_light_color: true
    - collapsible_controls: true
      entity: light.shapes
      fill_container: false
      icon: mdi:hexagon-multiple
      show_brightness_control: true
      show_color_control: true
      show_color_temp_control: true
      type: custom:mushroom-light-card
      use_light_color: true
    - cards:
      - badge_color: ''
        badge_icon: ''
        entity: switch.monitor_1
        icon: '{{ iif(is_state(''switch.monitor_1'', ''on''), ''mdi:monitor'', ''mdi:monitor-off'')}}'
        icon_color: '{{ iif(is_state(''switch.monitor_1'', ''on''), ''blue'', ''disabled'')}}'
        primary: Monitor 1
        secondary: '{{ iif(is_state(''switch.monitor_1'', ''on''), (states.sensor.monitor_1_power.state
          + " W"), ''Off'')}}'
        type: custom:mushroom-template-card
      - badge_color: ''
        badge_icon: ''
        entity: switch.monitor_2
        icon: '{{ iif(is_state(''switch.monitor_2'', ''on''), ''mdi:monitor'', ''mdi:monitor-off'')}}'
        icon_color: '{{ iif(is_state(''switch.monitor_2'', ''on''), ''purple'', ''disabled'')}}'
        primary: Monitor 2
        secondary: '{{ iif(is_state(''switch.monitor_2'', ''on''), (states.sensor.monitor_2_power.state
          + " W"), ''Off'')}}'
        type: custom:mushroom-template-card
      columns: 2
      square: false
      type: grid
    - badge_color: ''
      badge_icon: ''
      entity: switch.charger
      icon: '{{ iif(is_state(''switch.charger'', ''on''), ''mdi:power-plug'', ''mdi:power-plug-off-outline'')}}'
      icon_color: '{{ iif(is_state(''switch.charger'', ''on''), iif(is_state(''sensor.charger_power'',
        ''0.0''), ''green'', ''yellow''), ''disabled'')}}'
      primary: Charger
      secondary: '{{ iif(is_state(''switch.charger'', ''on''), (states.sensor.charger_power.state
        + " W"), ''Off'')}}'
      type: custom:mushroom-template-card
    - entity: cover.curtains
      fill_container: false
      hold_action:
        action: fire-dom-event
        browser_mod:
          data:
            browser_id: THIS
            content:
              cards:
              - entity: cover.curtain_left
                layout: vertical
                name: Left
                show_position_control: true
                type: custom:mushroom-cover-card
              - entity: cover.curtain_right
                layout: vertical
                name: Right
                show_position_control: true
                type: custom:mushroom-cover-card
              type: horizontal-stack
          service: browser_mod.popup
      name: Curtains
      primary_info: name
      secondary_info: state
      show_buttons_control: false
      show_position_control: true
      show_tilt_position_control: false
      type: custom:mushroom-cover-card
    - cards:
      - cards:
        - aspect_ratio: 4/3
          background-color: white
          entity: scene.diffuser_power_off
          entity_picture: /local/diffuser/diffuser_off.png
          show_entity_picture: true
          show_icon: true
          show_name: false
          size: 50px
          tap_action:
            action: call-service
            service: input_select.select_option
            service_data:
              entity_id: input_select.diffuser
              option: scene.diffuser_power_off
          type: custom:button-card
        - aspect_ratio: 16/1
          color_type: card
          entity: input_select.diffuser
          icon: mdi:air-humidifier
          show_name: false
          styles:
            card:
            - background-color: "[[[\n  if (states['input_select.diffuser'].state\
                \ == \"scene.diffuser_power_off\")\n    return \"var(--paper-item-icon-active-color)\"\
                ;\n  return \"var(--paper-card-background-color)\";\n]]]\n"
          type: custom:button-card
        mode: vertical
        type: custom:stack-in-card
      - cards:
        - aspect_ratio: 4/3
          background-color: white
          entity: input_select.diffuser
          entity_picture: /local/diffuser/diffuser_on.png
          show_entity_picture: true
          show_name: false
          size: 50px
          tap_action:
            action: call-service
            service: input_select.select_option
            service_data:
              entity_id: input_select.diffuser
              option: scene.diffuser_power_on
          type: custom:button-card
        - aspect_ratio: 16/1
          color_type: card
          entity: input_select.diffuser
          icon: mdi:air-humidifier
          show_name: false
          styles:
            card:
            - background-color: "[[[\n  if (states['input_select.diffuser'].state\
                \ == \"scene.diffuser_power_on\")\n    return \"var(--paper-item-icon-active-color)\"\
                ;\n  return \"var(--paper-card-background-color)\";\n]]]\n"
          type: custom:button-card
        mode: vertical
        type: custom:stack-in-card
      - cards:
        - aspect_ratio: 4/3
          background-color: white
          entity: scene.diffuser_light_spray
          entity_picture: /local/diffuser/diffuser_low.png
          show_entity_picture: true
          show_icon: true
          show_name: false
          size: 50px
          tap_action:
            action: call-service
            service: input_select.select_option
            service_data:
              entity_id: input_select.diffuser
              option: scene.diffuser_light_spray
          type: custom:button-card
        - aspect_ratio: 16/1
          color_type: card
          entity: input_select.diffuser
          icon: mdi:air-humidifier
          show_name: false
          styles:
            card:
            - background-color: "[[[\n  if (states['input_select.diffuser'].state\
                \ == \"scene.diffuser_light_spray\")\n    return \"var(--paper-item-icon-active-color)\"\
                ;\n  return \"var(--paper-card-background-color)\";\n]]]\n"
          type: custom:button-card
        mode: vertical
        type: custom:stack-in-card
      - cards:
        - aspect_ratio: 4/3
          background-color: white
          entity: scene.diffuser_strong_spray
          entity_picture: /local/diffuser/diffuser_high.png
          show_entity_picture: true
          show_icon: true
          show_name: false
          size: 50px
          tap_action:
            action: call-service
            service: input_select.select_option
            service_data:
              entity_id: input_select.diffuser
              option: scene.diffuser_strong_spray
          type: custom:button-card
        - aspect_ratio: 16/1
          color_type: card
          entity: input_select.diffuser
          icon: mdi:air-humidifier
          show_name: false
          styles:
            card:
            - background-color: "[[[\n  if (states['input_select.diffuser'].state\
                \ == \"scene.diffuser_strong_spray\")\n    return \"var(--paper-item-icon-active-color)\"\
                ;\n  return \"var(--paper-card-background-color)\";\n]]]\n"
          type: custom:button-card
        mode: vertical
        type: custom:stack-in-card
      - cards:
        - aspect_ratio: 4/3
          background-color: white
          entity: scene.diffuser_strong_spray
          entity_picture: /local/diffuser/diffuser_light_only.png
          show_entity_picture: true
          show_icon: true
          show_name: false
          size: 50px
          tap_action:
            action: call-service
            service: input_select.select_option
            service_data:
              entity_id: input_select.diffuser
              option: scene.diffuser_light_only
          type: custom:button-card
        - aspect_ratio: 16/1
          color_type: card
          entity: light.diffuser_light
          icon: mdi:air-humidifier
          show_name: false
          styles:
            card:
            - background-color: "[[[\n  if (states['light.diffuser_light'].state ==\
                \ \"on\")\n    return \"var(--paper-item-icon-active-color)\";\n \
                \ return \"var(--paper-card-background-color)\";\n]]]\n"
          type: custom:button-card
        mode: vertical
        type: custom:stack-in-card
      mode: horizontal
      type: custom:stack-in-card
    type: vertical-stack
    view_layout:
      column: 2
  - styles:
      --mdc-icon-size: 25px
      --mdc-tab-color-default: white
      --mdc-tab-text-label-color-default: white
      --mdc-theme-secondary: blue
    tabs:
    - attributes:
        icon: mdi:spotify
      card:
        artwork: full-cover
        entity: media_player.spotify
        group: false
        hide:
          icon_state: true
          power: true
          shuffle: false
        info: scroll
        sound_mode: full
        source: full
        toggle_power: true
        type: custom:mini-media-player
        volume_stateless: false
      styles:
        --mdc-theme-primary: lightgreen
    - attributes:
        icon: mdi:link
      card:
        content: '{{(states.media_player.spotify.attributes.media_content_id) | replace
          ("spotify:track:", "https://open.spotify.com/track/")}}'
        type: markdown
      styles:
        --mdc-theme-primary: yellow
    - attributes:
        icon: mdi:playlist-music
      card:
        account: default
        always_play_random_song: true
        device: Clock
        display_style: list
        grid_center_covers: true
        height: 350
        hide_currently_playing: true
        hide_top_header: true
        hide_warning: true
        limit: 40
        playlist_type: default
        spotify_entity: media_player.spotify
        type: custom:spotify-card
      styles:
        --mdc-theme-primary: '#00cc99'
    - attributes:
        icon: mdi:speaker-multiple
      card:
        cards:
        - artwork: material
          entity: media_player.clock
          group: true
          type: custom:mini-media-player
        - artwork: material
          entity: media_player.friday
          group: true
          type: custom:mini-media-player
        type: vertical-stack
      styles:
        --mdc-theme-primary: '#ff66ff'
    type: custom:tabbed-card
    view_layout:
      column: 3
  - entity: switch.diffuser
    name: Diffuser
    tap_action:
      action: toggle
    type: custom:mushroom-entity-card
  icon: mdi:castle
  layout:
    max_cols: 3
  path: den
  title: Den
  type: custom:vertical-layout
  visible:
  - user: 74f7e2ffd3594037b1a2fc4de82d9fea
  - user: 5e94cdd892054937b560071ed6662cb8
- badges: []
  cards:
  - entity: user
    states:
      Darragh Clerkin:
        backdrop: true
        entity: weather.home
        name: ' '
        secondary_info:
        - humidity
        - precipitation_probability
        type: custom:simple-weather-card
    type: custom:state-switch
    view_layout:
      column: 1
  - entity: user
    states:
      Darragh Clerkin:
        content: '{{ states("sensor.random_joke") }}'
        type: markdown
    type: custom:state-switch
    view_layout:
      column: 1
  - alignment: center
    chips:
    - entity: sensor.living_room_temperature
      icon_color: blue
      type: entity
      use_entity_picture: false
    - content_info: name
      entity: binary_sensor.living_room_motion_occupancy
      icon_color: deep-orange
      name: Living Room
      type: entity
    - content_info: name
      entity: binary_sensor.kitchen_motion_occupancy
      icon_color: yellow
      name: Kitchen
      type: entity
    - content_info: name
      entity: binary_sensor.entrance_motion_occupancy
      icon_color: teal
      name: Entrance
      type: entity
    - entity: binary_sensor.door_contact
      icon_color: red
      type: entity
    type: custom:mushroom-chips-card
  - custom_fields:
      switch:
        card:
          badge_color: ''
          badge_icon: ''
          entity: switch.kettle
          icon: '{{ iif(is_state(''switch.kettle'', ''on''), ''mdi:kettle-steam'',
            ''mdi:kettle-off'')}}'
          icon_color: '{{ iif(is_state(''switch.kettle'', ''on''), ''red'', ''grey'')}}'
          multiline_secondary: false
          primary: Kettle
          secondary: Turned {{states.switch.kettle.state}} at {{(as_timestamp(states.switch.kettle.last_updated)
            | timestamp_custom('%-I:%M %p'))}}
          type: custom:mushroom-template-card
      temp:
        card:
          entity: sensor.kettle_temperature
          layout: icon_state
          show_icon: true
          show_name: false
          show_state: true
          styles:
            icon:
            - color: "[[[\n  if (states['sensor.kettle_temperature'].state >= 91.0)\n\
                \    return \"red\";\n  if (states['sensor.kettle_temperature'].state\
                \ <= 90.0 && states['sensor.kettle_temperature'].state >= 81.0)\n\
                \    return \"green\";\n  if (states['sensor.kettle_temperature'].state\
                \ <= 80.0 && states['sensor.kettle_temperature'].state >= 71.0)\n\
                \    return \"skyblue\";\n  if (states['sensor.kettle_temperature'].state\
                \ <= 70.0 && states['sensor.kettle_temperature'].state >= 51.0)\n\
                \    return \"purple\";\n  if (states['sensor.kettle_temperature'].state\
                \ <= 50.0)\n    return \"violet\";  \n]]]\n"
            state:
            - font-size: 14px
            - font-weight: bold
            - justify-self: start
          type: custom:button-card
    styles:
      card:
      - border: none
      grid:
      - grid-template-areas: '''switch temp'''
      - grid-template-columns: 75% 25%
      - grid-template-rows: 25px
      - text-align: left
    tap_action:
      action: call-service
      service: switch.toggle
      service_data:
        entity_id: switch.kettle
    type: custom:button-card
  - cards:
    - badge_color: ''
      badge_icon: ''
      entity: switch.string_lights_socket_1
      icon: '{{ iif(is_state(''switch.string_lights_socket_1'', ''on''), ''mdi:string-lights'',
        ''mdi:string-lights-off'')}}'
      icon_color: '{{ iif(is_state(''switch.string_lights_socket_1'', ''on''), ''yellow'',
        ''disabled'')}}'
      picture: ''
      primary: String Lights
      secondary: 'Turned {{states.switch.string_lights_socket_1.state}} at

        {{(as_timestamp(states.switch.string_lights_socket_1.last_updated) |

        timestamp_custom(''%-I:%M %p''))}}'
      type: custom:mushroom-template-card
    - badge_color: ''
      badge_icon: ''
      entity: switch.hallway_chandelier
      icon: '{{ iif(is_state(''switch.hallway_chandelier'', ''on''), ''mdi:chandelier'',
        ''mdi:chandelier'')}}'
      icon_color: '{{ iif(is_state(''switch.hallway_chandelier'', ''on''), ''yellow'',
        ''disabled'')}}'
      picture: ''
      primary: Chandelier
      secondary: 'Turned {{states.switch.hallway_chandelier.state}} at

        {{(as_timestamp(states.switch.hallway_chandelier.last_updated) |

        timestamp_custom(''%-I:%M %p''))}}'
      type: custom:mushroom-template-card
    - badge_color: ''
      badge_icon: ''
      entity: switch.entrance_light
      icon: '{{ iif(is_state(''switch.entrance_light'', ''on''), ''mdi:lightbulb-on'',
        ''mdi:lightbulb-off-outline'')}}'
      icon_color: '{{ iif(is_state(''switch.entrance_light'', ''on''), ''yellow'',
        ''disabled'')}}'
      picture: ''
      primary: Entrance Light
      secondary: 'Turned {{states.switch.entrance_light.state}} at

        {{(as_timestamp(states.switch.entrance_light.last_updated) |

        timestamp_custom(''%-I:%M %p''))}}'
      type: custom:mushroom-template-card
    type: vertical-stack
    view_layout:
      column: 3
  - cards:
    - custom_fields:
        switch:
          card:
            badge_color: ''
            badge_icon: ''
            entity: switch.heating
            icon: '{{ iif(is_state(''switch.heating'', ''on''), ''mdi:radiator'',
              ''mdi:radiator-off'')}}'
            icon_color: '{{ iif(is_state(''switch.heating'', ''on''), ''red'', ''grey'')}}'
            multiline_secondary: false
            primary: Heating
            secondary: Turned {{states.switch.heating.state}} at {{(as_timestamp(states.switch.heating.last_updated)
              | timestamp_custom('%-I:%M %p'))}}
            type: custom:mushroom-template-card
        time:
          card:
            card:
              entity: timer.heating
              layout: icon_name_state2nd
              name: Turns off in
              show_icon: true
              show_name: true
              show_state: true
              styles:
                icon:
                - width: 20px
                - height: 20px
                - color: grey
                name:
                - font-size: 12px
                - justify-self: start
                state:
                - font-size: 14px
                - font-weight: bold
                - justify-self: start
              type: custom:button-card
            conditions:
            - entity: timer.heating
              state_not: idle
            type: conditional
      styles:
        card:
        - border: none
        grid:
        - grid-template-areas: '''switch time'''
        - grid-template-columns: 70% 25%
        - grid-template-rows: 25px
        - text-align: left
      tap_action:
        action: call-service
        service: switch.toggle
        service_data:
          entity_id: switch.heating
      type: custom:button-card
    - badge_icon: ''
      entity: switch.boiler
      icon: '{{ iif(is_state(''switch.boiler'', ''on''), ''mdi:water-boiler'', ''mdi:water-boiler-off'')}}'
      icon_color: '{{ iif(is_state(''switch.boiler'', ''on''), ''red'', ''grey'')}}'
      primary: Boiler
      secondary: 'Turned {{states.switch.boiler.state}} at

        {{(as_timestamp(states.switch.boiler.last_updated) |

        timestamp_custom(''%-I:%M %p''))}}'
      type: custom:mushroom-template-card
    type: vertical-stack
    view_layout:
      column: 1
  - cards:
    - badge_icon: ''
      entity: light.living_room_lamp
      icon: '{{ iif(is_state(''light.living_room_lamp'', ''on''), ''mdi:lamp'', ''mdi:lamp-outline'')}}'
      icon_color: '{{ iif(is_state(''light.living_room_lamp'', ''on''), ''orange'',
        ''grey'')}}'
      primary: Lamp
      secondary: '{{ states.light.living_room_lamp.state}}'
      type: custom:mushroom-template-card
    - collapsible_controls: true
      entity: light.chandelier
      icon: mdi:chandelier
      name: Chandelier
      show_brightness_control: true
      type: custom:mushroom-light-card
    - collapsible_controls: true
      entity: light.led_strip
      icon: mdi:led-strip-variant
      show_brightness_control: true
      show_color_control: true
      type: custom:mushroom-light-card
      use_light_color: true
    - entity: switch.dragon
      icon: fas:dragon
      icon_color: teal
      icon_type: icon
      name: Fountain
      secondary_info: last-changed
      tap_action:
        action: toggle
      type: custom:mushroom-entity-card
    - badge_icon: ''
      entity: switch.kitchen_light
      icon: mdi:dome-light
      icon_color: '{{ iif(is_state(''switch.kitchen_light'', ''on''), ''lime'', ''grey'')}}'
      primary: Kitchen Light
      secondary: '{{ states.switch.kitchen_light.state}}'
      type: custom:mushroom-template-card
    - cards:
      - badge_icon: ''
        entity: switch.backyard_light_socket_1
        icon: '{{ iif(is_state(''switch.backyard_light_socket_1'', ''on''), ''mdi:string-lights'',
          ''mdi:string-lights-off'')}}'
        icon_color: '{{ iif(is_state(''switch.backyard_light_socket_1'', ''on''),
          ''deep-orange'', ''grey'')}}'
        primary: Backyard Lights
        secondary: '{{ states.switch.backyard_light_socket_1.state}}'
        type: custom:mushroom-template-card
      - badge_icon: ''
        entity: switch.alleyway_lights
        icon: mdi:light-flood-down
        icon_color: '{{ iif(is_state(''switch.alleyway_lights'', ''on''), ''yellow'',
          ''grey'')}}'
        primary: Alleyway Lights
        secondary: '{{ states.switch.alleyway_lights.state}}'
        type: custom:mushroom-template-card
      type: horizontal-stack
    type: vertical-stack
    view_layout:
      column: 1
  - cards:
    - collapsible_controls: true
      entity: media_player.google_tv
      fill_container: false
      icon: ''
      media_controls:
      - play_pause_stop
      - on_off
      name: Google TV
      show_volume_level: true
      tap_action:
        action: toggle
      type: custom:mushroom-media-player-card
      use_media_info: true
      volume_controls:
      - volume_set
    - card:
        cards:
        - entities:
          - card_type: horizontal-stack
            cards:
            - entity: media_player.google_tv
              icon: mdi:power
              name: "[[[ var pow = entity.state\n  return 'Power ' + (pow)\n]]]\n"
              styles:
                icon:
                - color: '[[[ if (entity.state == ''off'' ) return "red"; else return
                    "green"]]]

                    '
              tap_action:
                service: remote.toggle
                service_data:
                  entity_id: remote.google_tv
              template: icon_button
              type: custom:button-card
            - template: blank_button
              type: custom:button-card
            - template: blank_button
              type: custom:button-card
            - template: blank_button
              type: custom:button-card
            type: custom:hui-element
          - row_type: section
            type: custom:hui-element
          - card_type: horizontal-stack
            cards:
            - entity: media_player.google_tv
              entity_picture: /local/icons/netflix.png
              show_entity_picture: true
              tap_action:
                service: media_player.select_source
                service_data:
                  entity_id: media_player.google_tv
                  source: Netflix
              template: logo_button
              type: custom:button-card
            - entity: media_player.google_tv
              entity_picture: /local/icons/prime.png
              show_entity_picture: true
              tap_action:
                service: media_player.select_source
                service_data:
                  entity_id: media_player.google_tv
                  source: Prime Video
              template: logo_button
              type: custom:button-card
            - entity: media_player.google_tv
              entity_picture: /local/icons/youtube.png
              show_entity_picture: true
              tap_action:
                service: media_player.select_source
                service_data:
                  entity_id: media_player.google_tv
                  source: YouTube
              template: logo_button
              type: custom:button-card
            type: custom:hui-element
          - card_type: horizontal-stack
            cards:
            - entity: media_player.google_tv
              entity_picture: /local/icons/plex.png
              show_entity_picture: true
              tap_action:
                service: media_player.select_source
                service_data:
                  entity_id: media_player.google_tv
                  source: Plex
              template: logo_button
              type: custom:button-card
            - entity: media_player.google_tv
              entity_picture: /local/icons/disney.png
              show_entity_picture: true
              tap_action:
                service: media_player.select_source
                service_data:
                  entity_id: media_player.google_tv
                  source: Hotstar
              template: logo_button
              type: custom:button-card
            - entity: media_player.google_tv
              entity_picture: /local/icons/spotify.png
              show_entity_picture: true
              tap_action:
                service: media_player.select_source
                service_data:
                  entity_id: media_player.google_tv
                  source: Spotify
              template: logo_button
              type: custom:button-card
            type: custom:hui-element
          - row_type: section
            type: custom:hui-element
          - entity: media_player.google_tv_1
            fill_container: false
            icon_type: none
            primary_info: none
            secondary_info: none
            show_volume_level: true
            type: custom:mushroom-media-player-card
            use_media_info: false
            volume_controls:
            - volume_set
            - volume_mute
          - row_type: section
            type: custom:hui-element
          - card_type: horizontal-stack
            cards:
            - entity: media_player.google_tv
              icon: mdi:volume-off
              name: Mute
              tap_action:
                service: remote.send_command
                service_data:
                  command: MUTE
                  entity_id: remote.google_tv
              template: menu_button
              type: custom:button-card
            - template: blank_button
              type: custom:button-card
            - entity: media_player.google_tv
              icon: mdi:arrow-up-bold
              name: Up
              tap_action:
                service: remote.send_command
                service_data:
                  command: DPAD_UP
                  entity_id: remote.google_tv
              template: icon_button
              type: custom:button-card
            - template: blank_button
              type: custom:button-card
            - entity: media_player.google_tv
              icon: mdi:cog
              name: Settings
              tap_action:
                service: remote.turn_on
                service_data:
                  activity: com.android.tv.settings
                  entity_id: remote.google_tv
              template: menu_button
              type: custom:button-card
            type: custom:hui-element
          - card_type: horizontal-stack
            cards:
            - template: blank_button
              type: custom:button-card
            - entity: media_player.google_tv
              icon: mdi:arrow-left-bold
              name: Left
              tap_action:
                service: remote.send_command
                service_data:
                  command: DPAD_LEFT
                  entity_id: remote.google_tv
              template: icon_button
              type: custom:button-card
            - entity: media_player.google_tv
              icon: mdi:circle
              name: Ok
              styles:
                card:
                - background: var(--primary-background-color)
              tap_action:
                service: remote.send_command
                service_data:
                  command: DPAD_CENTER
                  entity_id: remote.google_tv
              template: icon_button
              type: custom:button-card
            - entity: media_player.google_tv
              icon: mdi:arrow-right-bold
              name: Right
              tap_action:
                service: remote.send_command
                service_data:
                  command: DPAD_RIGHT
                  entity_id: remote.google_tv
              template: icon_button
              type: custom:button-card
            - template: blank_button
              type: custom:button-card
            type: custom:hui-element
          - card_type: horizontal-stack
            cards:
            - entity: media_player.google_tv
              icon: mdi:keyboard-return
              name: Return
              tap_action:
                service: remote.send_command
                service_data:
                  command: BACK
                  entity_id: remote.google_tv
              template: menu_button
              type: custom:button-card
            - template: blank_button
              type: custom:button-card
            - entity: media_player.google_tv
              icon: mdi:arrow-down-bold
              name: Down
              tap_action:
                service: remote.send_command
                service_data:
                  command: DPAD_DOWN
                  entity_id: remote.google_tv
              template: icon_button
              type: custom:button-card
            - template: blank_button
              type: custom:button-card
            - entity: media_player.google_tv
              icon: mdi:home
              name: Home
              tap_action:
                service: remote.send_command
                service_data:
                  command: HOME
                  entity_id: remote.google_tv
              template: menu_button
              type: custom:button-card
            type: custom:hui-element
          show_header_toggle: false
          type: entities
        title: Remote
        type: custom:collapsable-cards
      conditions:
      - entity: media_player.google_tv
        state_not: 'off'
      type: conditional
    type: vertical-stack
    view_layout:
      column: 2
  - collapsible_controls: true
    entity: media_player.nest_mini
    fill_container: false
    media_controls:
    - play_pause_stop
    - next
    - previous
    - shuffle
    - repeat
    show_volume_level: true
    type: custom:mushroom-media-player-card
    use_media_info: true
    view_layout:
      column: 2
    volume_controls:
    - volume_mute
    - volume_set
    - volume_buttons
  - entity: template
    states:
      pickup:
        cards:
        - color_type: card
          custom_fields:
            collection: '[[[ return "on " + states[''sensor.black_bin''].state ]]]

              '
            date: "[[[ if (states['sensor.black_bin'].attributes.next_collection >\
              \ 1)\n    return 'Next Pickup in ' +\n    states['sensor.black_bin'].attributes.next_collection\
              \ + ' days'; \n    else return 'Next Pickup in ' + states['sensor.black_bin'].attributes.next_collection\
              \ + ' day';\n]]]\n"
            picture:
              card:
                color_type: card
                custom_fields:
                  notification: '[[[ return states[''sensor.black_bin''].attributes.next_collection]]]

                    '
                entity_picture: /local/images/black_bin.png
                show_entity_picture: true
                size: 60%
                styles:
                  card:
                  - border: none
                  custom_fields:
                    notification:
                    - background-color: "[[[\n  if (states['sensor.black_bin'].attributes.next_collection\
                        \ >= 5)\n    return \"green\";\n  if (states['sensor.black_bin'].attributes.next_collection\
                        \ >= 2)\n  return \"orange\";\n  else return \"red\";\n]]]\n"
                    - border-radius: 50%
                    - position: absolute
                    - left: 60%
                    - top: 0px
                    - height: 30px
                    - width: 30px
                    - font-size: 15px
                    - font-weight: bold
                    - color: white
                    - line-height: 30px
                type: custom:button-card
          styles:
            card:
            - border: none
            - font-size: 150%
            - font-weight: bold
            - justify-self: start
            grid:
            - grid-template-areas: '"picture date" "picture collection"'
            - grid-template-columns: 30% 70%
            - grid-template-rows: 3fr 3fr
          type: custom:button-card
        - color_type: card
          custom_fields:
            collection: '[[[ return "on " + states[''sensor.blue_bin''].state ]]]

              '
            date: "[[[ if (states['sensor.blue_bin'].attributes.next_collection >\
              \ 1)\n    return 'Next Pickup in ' +\n    states['sensor.blue_bin'].attributes.next_collection\
              \ + ' days'; \n    else return 'Next Pickup in ' + states['sensor.blue_bin'].attributes.next_collection\
              \ + ' day';\n]]]\n"
            picture:
              card:
                color_type: card
                custom_fields:
                  notification: '[[[ return states[''sensor.blue_bin''].attributes.next_collection]]]

                    '
                entity_picture: /local/images/blue_bin.png
                show_entity_picture: true
                size: 60%
                styles:
                  card:
                  - border: none
                  custom_fields:
                    notification:
                    - background-color: "[[[\n  if (states['sensor.blue_bin'].attributes.next_collection\
                        \ >= 5)\n    return \"green\";\n  if (states['sensor.blue_bin'].attributes.next_collection\
                        \ >= 2)\n  return \"orange\";\n  else return \"red\";\n]]]\n"
                    - border-radius: 50%
                    - position: absolute
                    - left: 60%
                    - top: 0px
                    - height: 30px
                    - width: 30px
                    - font-size: 15px
                    - font-weight: bold
                    - color: white
                    - line-height: 30px
                type: custom:button-card
          styles:
            card:
            - border: none
            - font-size: 150%
            - font-weight: bold
            - justify-self: start
            grid:
            - grid-template-areas: '"picture date" "picture collection"'
            - grid-template-columns: 30% 70%
            - grid-template-rows: 3fr 3fr
          type: custom:button-card
        type: vertical-stack
    template: '{% if state_attr(''sensor.black_bin'', ''next_collection'') < 2 or
      state_attr(''sensor.blue_bin'', ''next_collection'') < 2  %} pickup {% else
      %} no_pickup {% endif %}'
    type: custom:state-switch
  - cards:
    - entity: sensor.living_room_motion_illuminance_lux
      fill_container: false
      icon_color: purple
      name: Living Room
      primary_info: state
      secondary_info: name
      type: custom:mushroom-entity-card
    - entity: sensor.kitchen_motion_illuminance
      icon_color: amber
      name: Kitchen
      primary_info: state
      secondary_info: name
      type: custom:mushroom-entity-card
    - entity: sensor.living_room_light
      name: ESP
      primary_info: state
      secondary_info: name
      type: custom:mushroom-entity-card
    type: horizontal-stack
  - exclude: []
    include:
    - switch.heating
    type: custom:scheduler-card
  icon: mdi:sofa
  layout:
    max_cols: 3
  path: living-room
  title: Living Room
  type: custom:vertical-layout
- badges: []
  cards:
  - cards:
    - cards:
      - double_tap_action:
          action: none
        entity: sensor.washing_machine_state
        fill_container: true
        hold_action:
          action: none
        icon_color: yellow
        icon_type: icon
        layout: vertical
        name: ' '
        primary_info: state
        secondary_info: name
        tap_action:
          action: none
        type: custom:mushroom-entity-card
      - card:
          double_tap_action:
            action: none
          entity: sensor.bob_remaining
          fill_container: true
          hold_action:
            action: none
          icon_color: purple
          icon_type: icon
          layout: vertical
          name: Remaining
          primary_info: state
          secondary_info: name
          tap_action:
            action: none
          type: custom:mushroom-entity-card
        conditions:
        - entity: sensor.bob_remaining
          state_not: '0'
        type: conditional
      type: horizontal-stack
    - cards:
      - double_tap_action:
          action: none
        fill_container: true
        hold_action:
          action: none
        icon: mdi:washing-machine-alert
        icon_color: '{{ iif(is_state(''sensor.washing_machine_state'', ''Idle''),
          ''blue-grey'', ''grey'') }}'
        layout: vertical
        picture: ''
        tap_action:
          action: none
        type: custom:mushroom-template-card
      - double_tap_action:
          action: none
        fill_container: true
        hold_action:
          action: none
        icon: mdi:washing-machine
        icon_color: '{{ iif(is_state(''sensor.washing_machine_state'', ''Washing''),
          ''cyan'', ''grey'') }}'
        layout: vertical
        picture: ''
        tap_action:
          action: none
        type: custom:mushroom-template-card
      - double_tap_action:
          action: none
        fill_container: true
        hold_action:
          action: none
        icon: fas:spinner
        icon_color: '{{ iif(is_state(''sensor.washing_machine_state'', ''Spinning''),
          ''purple'', ''grey'') }}'
        layout: vertical
        picture: ''
        tap_action:
          action: none
        type: custom:mushroom-template-card
      - double_tap_action:
          action: none
        fill_container: true
        hold_action:
          action: none
        icon: mdi:dishwasher
        icon_color: '{{ iif(is_state(''sensor.washing_machine_state'', ''Rinsing''),
          ''blue'', ''grey'') }}'
        layout: vertical
        picture: ''
        tap_action:
          action: none
        type: custom:mushroom-template-card
      - double_tap_action:
          action: none
        fill_container: true
        hold_action:
          action: none
        icon: mdi:tumble-dryer
        icon_color: '{{ iif(is_state(''sensor.washing_machine_state'', ''Drying''),
          ''deep-orange'', ''grey'') }}'
        picture: ''
        tap_action:
          action: none
        type: custom:mushroom-template-card
      - double_tap_action:
          action: none
        hold_action:
          action: none
        icon: mdi:check-circle
        icon_color: '{{ iif(is_state(''sensor.washing_machine_state'', ''Cycle Complete''),
          ''green'', ''grey'') }}'
        layout: vertical
        picture: ''
        tap_action:
          action: none
        type: custom:mushroom-template-card
      type: horizontal-stack
    - entities:
      - entity: sensor.bob_duration
        name: Duration
      - entity: sensor.bob_remaining
        name: Remaining
      show_header_toggle: false
      type: entities
    type: vertical-stack
  icon: mdi:washing-machine
  path: utilities
  title: Utilities
- badges: []
  cards:
  - cards:
    - double_tap_action:
        action: none
      fill_container: true
      hold_action:
        action: none
      icon: phu:plex
      icon_color: orange
      picture: ''
      primary: Refresh Libraries
      secondary: ''
      tap_action:
        action: none
      type: custom:mushroom-template-card
    - cards:
      - aspect_ratio: 1/1
        entity_picture: /local/icons/movie.png
        show_entity_picture: true
        size: 60%
        tap_action:
          action: call-service
          service: plex.refresh_library
          service_data:
            library_name: Movies
            server_name: Plex Media Server
        type: custom:button-card
      - aspect_ratio: 1/1
        entity_picture: /local/icons/music.png
        show_entity_picture: true
        size: 60%
        tap_action:
          action: call-service
          service: plex.refresh_library
          service_data:
            library_name: Music
            server_name: Plex Media Server
        type: custom:button-card
      - aspect_ratio: 1/1
        entity_picture: /local/icons/tvshow.png
        show_entity_picture: true
        size: 60%
        tap_action:
          action: call-service
          service: plex.refresh_library
          service_data:
            library_name: TV Shows
            server_name: Plex Media Server
        type: custom:button-card
      - aspect_ratio: 1/1
        confirmation:
          text: '[[[ return `Are you sure you want to toggle ${entity.attributes.friendly_name}?`
            ]]]'
        entity: switch.docker_plex
        icon: mdi:docker
        name: Docker
        show_state: false
        size: 60%
        tap_action:
          action: toggle
        type: custom:button-card
      type: horizontal-stack
    - card:
        type: entities
      filter:
        exclude:
        - state: unavailable
        include:
        - name: Plex Media Server
          type: weblink
          url: http://homeassistant.local:32400/web/index.html#!/
        - name: /[Pp]lex/
      show_empty: false
      sort:
        ignore_case: false
        method: domain
        reverse: false
      type: custom:auto-entities
    type: vertical-stack
    view_layout:
      column: 2
  - cards:
    - entity: input_select.speakers_spotify
      fill_container: false
      icon_color: green
      layout: horizontal
      secondary_info: none
      type: custom:mushroom-select-card
    - cards:
      - badge_icon: ''
        entity: input_select.speakers_spotify
        fill_container: true
        icon: "{%if (states.input_select.speakers_spotify.state == 'Friday') %}\n\
          \    {{ \"phu:nest-audio\" }}\n{%elif  (states.input_select.speakers_spotify.state\
          \ == 'Nest Mini') %}\n    {{ \"phu:nest-mini\" }}\n{%elif  (states.input_select.speakers_spotify.state\
          \ == 'pavanthanuj')  %}\n    {{ \"phu:imac\" }}\n{%elif  (states.input_select.speakers_spotify.state\
          \ == 'Clock')  %}    \n    {{ \"phu:nest-hub\" }}\n{% endif %}"
        icon_color: "{%if (states.input_select.speakers_spotify.state == 'Friday')\
          \ %}\n    {{ \"cyan\" }}\n{%elif  (states.input_select.speakers_spotify.state\
          \ == 'Nest Mini') %}\n    {{ \"white\" }}\n{%elif  (states.input_select.speakers_spotify.state\
          \ == 'pavanthanuj')  %}\n    {{ \"brown\" }}\n{%elif  (states.input_select.speakers_spotify.state\
          \ == 'Clock')  %}    \n    {{ \"pink\" }}\n{% endif %}"
        layout: horizontal
        picture: ''
        primary: '{{states.input_select.speakers_spotify.state}}'
        secondary: ''
        tap_action:
          action: call-service
          data: {}
          service: script.spotify_start
          target: {}
        type: custom:mushroom-template-card
      - fill_container: true
        icon: mdi:play
        icon_color: yellow
        layout: vertical
        primary: ''
        secondary: ''
        tap_action:
          action: call-service
          data: {}
          service: script.spotify_start
          target: {}
        type: custom:mushroom-template-card
      type: horizontal-stack
    type: vertical-stack
    view_layout:
      column: 1
  - card:
      show_header_toggle: false
      state_color: true
      type: entities
    filter:
      exclude:
      - state: unavailable
      - state: 'off'
      - state: standby
      - state: unknown
      - entity_id: '*browser*'
      - entity_id: '*plex*'
      include:
      - domain: media_player
    show_empty: false
    sort:
      method: last_changed
      reverse: true
    type: custom:auto-entities
    view_layout:
      column: 1
  - card:
      icon: phu:sonarr
      show_header_toggle: false
      state_color: false
      title: Sonarr
      type: entities
    filter:
      exclude:
      - state: unavailable
      include:
      - name: Sonarr
        type: weblink
        url: http://homeassistant.local:8989/
      - name: /[Ss]onarr/
    show_empty: false
    sort:
      ignore_case: false
      method: domain
      numeric: false
      reverse: false
    type: custom:auto-entities
    view_layout:
      column: 3
  - all_shadows: false
    date: ddmm
    entity: sensor.recently_added_movies
    flag: false
    image_style: fanart
    max: 3
    title: Recently Added Movies
    type: custom:upcoming-media-card
    view_layout:
      column: 4
  - all_shadows: false
    date: ddmm
    entity: sensor.recently_added_tv
    flag: false
    image_style: fanart
    max: 3
    title: Recently Added TV
    type: custom:upcoming-media-card
    view_layout:
      column: 4
  icon: mdi:play-network
  layout:
    max_cols: 4
  path: media
  title: Media
  type: custom:vertical-layout
  visible:
  - user: 74f7e2ffd3594037b1a2fc4de82d9fea
- badges: []
  cards:
  - cards:
    - custom_fields:
        item:
          card:
            cards:
            - entity: sensor.processor_use_percent
              icon_color: '#01C852'
              name: CPU
              primary_info: state
              secondary_info: name
              type: custom:mushroom-entity-card
            - entity: sensor.memory_use_percent
              icon_color: '#E91E63'
              name: RAM
              primary_info: state
              secondary_info: name
              type: custom:mushroom-entity-card
            - entity: sensor.disk_use_percent
              icon_color: '#FF9101'
              name: Disk
              primary_info: state
              secondary_info: name
              type: custom:mushroom-entity-card
            mode: vertical
            type: custom:stack-in-card
        radial:
          card:
            apex_config:
              legend:
                show: false
              title:
                align: top
                floating: true
            chart_type: radialBar
            header:
              show: false
            series:
            - color: '#01C852'
              entity: sensor.processor_use_percent
            - color: '#E91E63'
              entity: sensor.memory_use_percent
            - color: '#FF9101'
              entity: sensor.disk_use_percent
            type: custom:apexcharts-card
      styles:
        card:
        - border: none
        grid:
        - grid-template-areas: '''item radial'''
        - grid-template-columns: 30% 75%
        - grid-template-rows: 220px
      type: custom:button-card
    - cards:
      - entity: sensor.processor_temperature
        icon_color: red
        name: Processor Temperature
        primary_info: state
        secondary_info: name
        type: custom:mushroom-entity-card
      - entity: sensor.server_last_boot
        icon: mdi:clock
        name: Last Boot
        primary_info: state
        secondary_info: name
        type: custom:mushroom-entity-card
      mode: horizontal
      type: custom:stack-in-card
    mode: vertical
    title: Debian
    type: custom:stack-in-card
  - custom_fields:
      item1:
        card:
          entity: sensor.download_speed
          hold_action:
            action: call-service
            service: homeassistant.update_entity
            service_data:
              entity_id: sensor.speedtest_download
          icon_color: orange
          name: Download
          primary_info: state
          secondary_info: name
          type: custom:mushroom-entity-card
      item2:
        card:
          entity: sensor.upload_speed
          hold_action:
            action: call-service
            service: homeassistant.update_entity
            service_data:
              entity_id: sensor.speedtest_download
          icon_color: blue
          name: Upload
          primary_info: state
          secondary_info: name
          type: custom:mushroom-entity-card
      item3:
        card:
          entity: sensor.speedtest_ping
          icon_color: green
          name: Ping
          primary_info: state
          secondary_info: name
          type: custom:mushroom-entity-card
      line:
        card:
          apex_config:
            chart:
              height: 250px
            legend:
              show: false
            title:
              align: top
          chart_type: line
          graph_span: 3h
          header:
            show: false
          layout: minimal
          series:
          - color: orange
            curve: smooth
            entity: sensor.download_speed
            fill_raw: last
            float_precision: 1
            stroke_width: 2
          - color: skyblue
            curve: smooth
            entity: sensor.upload_speed
            fill_raw: last
            float_precision: 1
            stroke_width: 2
          type: custom:apexcharts-card
    styles:
      card:
      - border: none
      grid:
      - grid-template-areas: '''item1 line'' ''item2 line'' ''item3 line'''
      - grid-template-columns: 33% 65%
      - grid-template-rows: 1fr 1fr 1fr
    type: custom:button-card
  - cards:
    - entity: sensor.database_size
      icon_color: blue-grey
      primary_info: state
      secondary_info: name
      type: custom:mushroom-entity-card
    - entity: sensor.home_assistant_log_size
      icon: mdi:math-log
      icon_color: deep-orange
      name: Homeassistant Log Size
      primary_info: state
      secondary_info: name
      type: custom:mushroom-entity-card
    - double_tap_action:
        action: url
        url_path: https://drive.google.com/drive/folders/1iDzbeGS-PLCnsDwG5i3dcOs1g-Ws4BjOhttps://drive.google.com/drive/folders/1iDzbeGS-PLCnsDwG5i3dcOs1g-Ws4BjO
      entity: sensor.backup_state
      fill_container: false
      icon: mdi:google-drive
      icon_color: yellow
      multiline_secondary: false
      primary: '{{states.sensor.backup_state.attributes.size_in_google_drive}}'
      secondary: Google Drive Backup Size
      type: custom:mushroom-template-card
    - double_tap_action:
        action: url
        url_path: /hassio/backups
      entity: sensor.backup_state
      fill_container: false
      icon: si:homeassistant
      icon_color: blue
      multiline_secondary: false
      primary: '{{states.sensor.backup_state.attributes.size_in_home_assistant}}'
      secondary: Homeassistant Local Backup Size
      tap_action:
        action: none
      type: custom:mushroom-template-card
    - double_tap_action:
        action: none
      fill_container: true
      hold_action:
        action: none
      icon: mdi:harddisk
      icon_color: '{% set percentage = (((states(''sensor.harddisk_free_space'') |
        float) / (states(''sensor.harddisk_total_space'') | float))*100) | round(2)
        | float %}



        {% if percentage > 50.0 %}

        green

        {% elif (percentage <= 50.0) and (percentage > 30.0) %}

        orange

        {% elif (percentage <= 30.0) and (percentage > 0.0) %}

        red

        {% endif %}'
      multiline_secondary: true
      primary: '{{states(''sensor.harddisk_used_space'')}} GB'
      secondary: 'Internal HDD

        {{ (((states(''sensor.harddisk_free_space'') | float) / (states(''sensor.harddisk_total_space'')
        | float))*100) | round(2)}}% free'
      tap_action:
        action: none
      type: custom:mushroom-template-card
    - double_tap_action:
        action: none
      fill_container: false
      hold_action:
        action: none
      icon: phu:seagate-ssd
      icon_color: '{% set percentage = (((states(''sensor.1tb_free_space'') | float)
        / (states(''sensor.1tb_total_space'') | float))*100) | round(2) | float %}



        {% if percentage > 50.0 %}

        green

        {% elif (percentage <= 50.0) and (percentage > 30.0) %}

        orange

        {% elif (percentage <= 30.0) and (percentage > 0.0) %}

        red

        {% endif %}'
      multiline_secondary: true
      primary: '{{states(''sensor.1tb_used_space'')}} GB'
      secondary: '1 TB

        {{ (((states(''sensor.1tb_free_space'') | float) / (states(''sensor.1tb_total_space'')
        | float))*100) | round(2)}}% free'
      tap_action:
        action: none
      type: custom:mushroom-template-card
    - double_tap_action:
        action: none
      fill_container: true
      hold_action:
        action: none
      icon: phu:seagate-ssd
      icon_color: '{% set percentage = (((states(''sensor.5tb_free_space'') | float)
        / (states(''sensor.5tb_total_space'') | float))*100) | round(2) | float %}



        {% if percentage > 50.0 %}

        green

        {% elif (percentage <= 50.0) and (percentage > 30.0) %}

        orange

        {% elif (percentage <= 30.0) and (percentage > 0.0) %}

        red

        {% endif %}'
      multiline_secondary: true
      primary: '{{states(''sensor.5tb_used_space'')}} GB'
      secondary: '5 TB

        {{ (((states(''sensor.5tb_free_space'') | float) / (states(''sensor.5tb_total_space'')
        | float))*100) | round(2)}}% free'
      tap_action:
        action: none
      type: custom:mushroom-template-card
    type: vertical-stack
  - cards:
    - entity: user
      states:
        Pavan Thanuj Upadrasta:
          entities:
          - icon: fab:git
            name: /n00bcodr/homeassistant-ireland
            type: weblink
            url: https://github.com/n00bcodr/homeassistant-ireland
          - entity: sensor.n00bcodr_homeassistant_ireland_latest_commit
            icon: mdi:source-commit-end
            name: Last Commit
          - type: section
          - icon: mdi:text
            name: Suggested Commit - files on {{ now().timestamp() | timestamp_custom('%b
              %d, %Y - %-I:%M %p') }}
            state: ''
            tap_action: none
            type: custom:template-entity-row
          - entity: input_text.git_commit_message
            extend_paper_buttons_row:
              buttons:
              - icon: mdi:close
                tap_action:
                  action: call-service
                  service: input_text.set_value
                  service_data:
                    value: "\u200E"
                  target:
                    entity_id: input_text.git_commit_message
              - icon: fas:paste
                tap_action:
                  action: call-service
                  service: script.git_commit_copy
              position: right
            name: Commit Message
          - type: section
          - buttons:
            - entity: script.git_push
              icon: mdi:upload-multiple
            - entity: script.git_push_ha_version
              icon: mdi:package-up
              name: HA Version Update
            type: custom:paper-buttons-row
          - buttons:
            - icon: hacs:hacs
              name: Push Custom Components
              tap_action:
                action: call-service
                service: shell_command.git_hacs_update
            type: custom:paper-buttons-row
          icon: fab:github
          title: Git
          type: entities
      type: custom:state-switch
    type: vertical-stack
  icon: mdi:server-network
  path: system_monitor
  title: System Monitor
  type: custom:masonry-layout
- badges:
  - entity: person.pavanthanuj
  - entity: person.darragh_clerkin
  - entity: binary_sensor.vibration_vibration
  - entity: script.update_all_phone_sensors
    hold_action:
      action: more-info
    tap_action:
      action: call-service
      service: script.update_all_phone_sensors
  - entity: binary_sensor.living_room_motion_occupancy
    name: Living Room Motion
    style: ":host {\n  --label-badge-blue:\n    {% if is_state('binary_sensor.living_room_motion_occupancy','on')\
      \ %}\n      red\n    {% else %}\n      green\n    {% endif %}\n    ;\n}\n"
  cards:
  - styles:
      --mdc-icon-size: 25px
      --mdc-tab-color-default: white
      --mdc-tab-text-label-color-default: white
      --mdc-theme-secondary: blue
    tabs:
    - attributes:
        icon: mdi:cellphone
        label: Mobile Devices
      card:
        bulk_rename:
        - from: -Battery
          to: ''
        - from: ' Battery'
          to: ''
        - from: Sensor
          to: ''
        - from: e/
          to: 'e and '
        color_gradient:
        - '#ff0000'
        - '#ffff00'
        - '#00ff00'
        entities:
        - charging_state:
            entity_id: binary_sensor.oneplus7t_is_charging
            state: 'on'
          entity: sensor.oneplus7t_battery_level
          name: 7T
          tap_action: more-info
        - charging_state:
            entity_id: binary_sensor.10pro_is_charging
            state: 'on'
          entity: sensor.10pro_battery_level
          name: 10 Pro
          tap_action: more-info
        - charging_state:
            entity_id: binary_sensor.galaxy_watch4_classic_is_charging
            state: 'on'
          entity: sensor.galaxy_watch4_classic_battery_level
          name: Watch Classic
          tap_action: more-info
        - charging_state:
            entity_id: sensor.pavan_thanujs_ipad_battery_state
            state: 'on'
          entity: sensor.pavan_thanujs_ipad_battery_level
          name: iPad Pro
          tap_action: more-info
        type: custom:battery-state-card
      styles:
        --mdc-theme-primary: lightgreen
    - attributes:
        icon: mdi:zigbee
        label: Zigbee Devices
      card:
        color_gradient:
        - '#ff0000'
        - '#ffff00'
        - '#00ff00'
        entities:
        - entity: sensor.den_motion_battery
          tap_action: more-info
        - entity: sensor.living_room_motion_battery
          tap_action: more-info
        - entity: sensor.entrance_motion_battery
          tap_action: more-info
        - entity: sensor.kitchen_motion_battery
          tap_action: more-info
        - entity: sensor.den_door_battery
          tap_action: more-info
        - entity: sensor.temperature_and_humidity_battery
          tap_action: more-info
        - entity: sensor.door_battery
          tap_action: more-info
        - entity: sensor.button_battery
          tap_action: more-info
        - entity: sensor.magic_cube_battery
          tap_action: more-info
        - entity: sensor.vibration_battery
          tap_action: more-info
        - entity: sensor.ikea_multi_button_battery
          tap_action: more-info
        - entity: sensor.ikea_on_off_battery
          tap_action: more-info
        - entity: sensor.curtain_left_battery
          tap_action: more-info
        - entity: sensor.curtain_right_battery
          tap_action: more-info
        type: custom:battery-state-card
      styles:
        --mdc-theme-primary: yellow
    type: custom:tabbed-card
  - cards:
    - cards:
      - cards:
        - align_icon: left
          align_state: center
          decimals: 1
          entities:
          - sensor.den_humidity_2
          font_size: 70
          hours_to_show: 6
          line_color: skyblue
          line_width: 5
          points_per_hour: 10
          show:
            name: false
          type: custom:mini-graph-card
          update_interval: 10
        - align_icon: left
          align_state: center
          color_thresholds:
          - color: '#f39c12'
            value: 25
          - color: '#d35400'
            value: 28
          - color: '#ff1800'
            value: 30
          decimals: 1
          entities:
          - sensor.den_temperature_2
          font_size: 70
          hours_to_show: 6
          line_color: '#e74c3c'
          line_width: 5
          points_per_hour: 10
          show:
            name: false
          type: custom:mini-graph-card
          update_interval: 10
        title: Den
        type: horizontal-stack
      mode: vertical
      type: custom:stack-in-card
    - cards:
      - cards:
        - align_icon: left
          align_state: center
          decimals: 1
          entities:
          - sensor.living_room_humidity
          font_size: 70
          hours_to_show: 6
          line_color: skyblue
          line_width: 5
          points_per_hour: 10
          show:
            name: false
          type: custom:mini-graph-card
          update_interval: 10
        - align_icon: left
          align_state: center
          color_thresholds:
          - color: '#f39c12'
            value: 25
          - color: '#d35400'
            value: 28
          - color: '#ff1800'
            value: 30
          decimals: 1
          entities:
          - sensor.living_room_temperature
          font_size: 70
          hours_to_show: 6
          line_color: '#e74c3c'
          line_width: 5
          points_per_hour: 10
          show:
            name: false
          type: custom:mini-graph-card
          update_interval: 10
        title: Living Room
        type: horizontal-stack
      mode: vertical
      type: custom:stack-in-card
    - align_icon: left
      align_state: center
      entities:
      - color: orange
        entity: sensor.den_light
        name: Den
      - color: aqua
        entity: sensor.living_room_light
        name: Living Room
        show_state: true
      font_size: 90
      hours_to_show: 6
      line_width: 1
      points_per_hour: 10
      show:
        fill: fade
      type: custom:mini-graph-card
      update_interval: 30
    type: vertical-stack
  - styles:
      --mdc-icon-size: 25px
      --mdc-tab-color-default: white
      --mdc-tab-text-label-color-default: white
      --mdc-theme-secondary: blue
      stacked: true
    tabs:
    - attributes:
        icon: mdi:castle
        label: Den
      card:
        card:
          show_header_toggle: false
          state_color: false
          type: entities
        filter:
          exclude: []
          include:
          - name: "/\U0001F3F0/"
          show_empty: true
          sort:
            ignore_case: false
            method: last_triggered
        type: custom:auto-entities
      styles:
        --mdc-theme-primary: cyan
    - attributes:
        icon: mdi:lightbulb
        label: Light
      card:
        card:
          show_header_toggle: false
          state_color: false
          type: entities
        filter:
          exclude: []
          include:
          - name: "/\U0001F4A1/"
          show_empty: true
          sort:
            ignore_case: false
            method: last_triggered
        type: custom:auto-entities
      styles:
        --mdc-theme-primary: yellow
    - attributes:
        icon: mdi:cog
        label: Tools
      card:
        card:
          show_header_toggle: false
          state_color: false
          type: entities
        filter:
          exclude: []
          include:
          - name: "/\u2699\uFE0F/"
          show_empty: true
          sort:
            ignore_case: false
            method: last_triggered
        type: custom:auto-entities
      styles:
        --mdc-theme-primary: tomato
    - attributes:
        icon: mdi:music
        label: Media
      card:
        card:
          show_header_toggle: false
          state_color: false
          type: entities
        filter:
          exclude: []
          include:
          - name: "/\U0001F3B5/"
          - name: "/\U0001F3AC/"
          - name: "/\U0001F4FA/"
          show_empty: true
          sort:
            ignore_case: false
            method: last_triggered
        type: custom:auto-entities
      styles:
        --mdc-theme-primary: skyblue
    - attributes:
        icon: mdi:robot
        label: Others
      card:
        card:
          show_header_toggle: false
          state_color: false
          type: entities
        filter:
          exclude:
          - name: "*\U0001F3B5*"
          - name: "*\U0001F9FA*"
          - name: "*\U0001F4A1*"
          - name: "*\U0001F4A7*"
          - name: "*\U0001F3AC*"
          - name: "*\U0001F3F0*"
          - name: "*\u2699\uFE0F*"
          - name: "*\U0001F4FA*"
          include:
          - domain: automation
          show_empty: true
          sort:
            ignore_case: false
            method: last_triggered
        type: custom:auto-entities
      styles:
        --mdc-theme-primary: lightgreen
    type: custom:tabbed-card
  - card:
      cards:
      - card_mod:
          style:
            ha-markdown:
              $: "ha-markdown-element:first-of-type hr{\n  border-color: #303030;\n\
                }\n"
        content: '<h2> <ha-icon icon=''mdi:shield-half-full''></ha-icon> Watchman
          report<h2> <h3>Missing Entities: {{ states.sensor.watchman_missing_entities.state
          }} </h3> {%- for item in state_attr("sensor.watchman_missing_entities",
          "entities") %} <hr> <table><tr> <td> <ha-icon icon=''mdi: {%- if item.state=="missing"-%}cloud-alert''
          {%- elif item.state=="unavail" -%}cloud-off-outline'' {%- else-%}cloud-question''
          {%- endif -%} ></ha-icon> {{ item.id }} [{{item.state}}] <a title="{{item.occurrences}}">
          {{item.occurrences.split(''/'')[-1].split('':'')[0]}}</a> </td></tr></table>
          {%- endfor %}'
        type: markdown
      - card_mod:
          style:
            ha-markdown:
              $: "ha-markdown-element:first-of-type hr{\n  border-color: #303030;\n\
                }\n"
        content: '<h2 class="some"> <ha-icon icon=''mdi:shield-half-full''></ha-icon>
          Watchman report<h2> <h3> Missing Services: {{ states.sensor.watchman_missing_services.state
          }} </h3> {%- for item in state_attr("sensor.watchman_missing_services",
          "entities") %} <hr><table><tr> <td>  <ha-icon icon=''mdi:cloud-alert''></ha-icon>
          {{ item.id }} <a title="{{item.occurrences}}">{{item.occurrences.split(''/'')[-1].split('':'')[0]}}</a>
          </td></tr></table> {%- endfor %}'
        type: markdown
      - alignment: center
        chips:
        - double_tap_action:
            action: call-service
            service: watchman.report
            service_data:
              data:
                data:
                  parse_mode: html
                parse_config: true
            target: {}
          entity: sensor.watchman_last_updated
          hold_action:
            action: none
          icon: mdi:camera-timer
          name: 'Watchman Last Updated :'
          tap_action:
            action: none
          type: entity
        type: custom:mushroom-chips-card
      type: custom:stack-in-card
    conditions:
    - entity: sensor.watchman_missing_entities
      state_not: '0'
    type: conditional
  - card:
      content: Snapshots are stale! Please visit the "Home Assistant Google Drive
        Backup" add-on status page for details.
      title: Stale Snapshots!
      type: markdown
    conditions:
    - entity: binary_sensor.backups_stale
      state: 'on'
    type: conditional
  - cards:
    - entity: sensor.count_automations
      icon: mdi:robot
      icon_color: red
      name: '# Automations'
      primary_info: state
      secondary_info: name
      type: custom:mushroom-entity-card
    - entity: sensor.count_scripts
      icon: mdi:script
      icon_color: purple
      name: '# Scripts'
      primary_info: state
      secondary_info: name
      type: custom:mushroom-entity-card
    - entity: sensor.count_scenes
      icon: mdi:palette-outline
      icon_color: indigo
      name: '# Scenes'
      primary_info: state
      secondary_info: name
      type: custom:mushroom-entity-card
    - entity: sensor.count_sensors
      icon: ''
      icon_color: blue
      name: '# Sensors'
      primary_info: state
      secondary_info: name
      type: custom:mushroom-entity-card
    - entity: sensor.count_binary_sensors
      icon_color: green
      name: '# Binary Sensors'
      primary_info: state
      secondary_info: name
      type: custom:mushroom-entity-card
    - entity: sensor.count_device_trackers
      icon: mdi:lan-connect
      icon_color: light-green
      name: '# Device Trackers'
      primary_info: state
      secondary_info: name
      type: custom:mushroom-entity-card
    - entity: sensor.count_input_booleans
      icon_color: yellow
      name: '# Input Booleans'
      primary_info: state
      secondary_info: name
      type: custom:mushroom-entity-card
    - entity: sensor.count_switches
      icon: mdi:light-switch
      icon_color: brown
      name: '# Switches'
      primary_info: state
      secondary_info: name
      type: custom:mushroom-entity-card
    - entity: sensor.count_lights
      icon: mdi:lightbulb
      icon_color: deep-orange
      name: '# Lights'
      primary_info: state
      secondary_info: name
      type: custom:mushroom-entity-card
    - entity: sensor.count_media_players
      icon: mdi:cast
      icon_color: amber
      name: '# Media Players'
      primary_info: state
      secondary_info: name
      type: custom:mushroom-entity-card
    - entity: sensor.count_zones
      icon: mdi:map-clock
      name: '# Zones'
      primary_info: state
      secondary_info: name
      type: custom:mushroom-entity-card
    mode: vertical
    type: custom:stack-in-card
  icon: mdi:devices
  path: network
  theme: ''
  title: Network and Devices
  visible:
  - user: 74f7e2ffd3594037b1a2fc4de82d9fea
- badges: []
  cards:
  - entity: mediaquery
    states:
      '(min-width: 800px)':
        card_type: last_result
        f1_font: true
        hide_tracklayout: true
        sensor: sensor.formula_one_sensor_last_result
        show_carnumber: true
        standings:
          show_flag: true
          show_team: true
        title: Last Race
        type: custom:formulaone-card
    type: custom:state-switch
    view_layout:
      column: 1
  - entity: mediaquery
    states:
      '(min-width: 800px)':
        card_type: countdown
        date_locale: in
        f1_font: true
        show_raceinfo: true
        title: Next Race
        type: custom:formulaone-card
    type: custom:state-switch
    view_layout:
      column: 2
  - entity: mediaquery
    states:
      '(min-width: 800px)':
        cards:
        - card_type: driver_standings
          f1_font: true
          show_carnumber: true
          standings:
            show_flag: true
          title: Driver Standings
          translations:
            points: Points
          type: custom:formulaone-card
        - card_type: constructor_standings
          f1_font: true
          standings:
            show_flag: true
            show_team: true
            show_teamlogo: true
          title: Constructor Standings
          translations:
            points: Points
          type: custom:formulaone-card
        type: vertical-stack
    type: custom:state-switch
    view_layout:
      column: 4
  - entity: mediaquery
    states:
      '(min-width: 800px)':
        card_type: results
        f1_font: true
        hide_tracklayout: true
        standings:
          show_flag: true
        title: Race Results
        type: custom:formulaone-card
    type: custom:state-switch
    view_layout:
      column: 5
  - entity: mediaquery
    states:
      '(min-width: 800px)':
        card_type: schedule
        date_locale: in
        f1_font: true
        sensor: sensor.formula_one_sensor_races
        standings:
          show_flag: true
        title: Schedule
        type: custom:formulaone-card
    type: custom:state-switch
    view_layout:
      column: 3
  - entity: mediaquery
    states:
      '(max-width: 800px)':
        options:
          defaultTabIndex: 1
        styles:
          isFadingIndicator: true
          isMinWidthIndicator: true
          minWidth: true
          stacked: true
        tabs:
        - attributes:
            label: Last Race
          card:
            card_type: last_result
            f1_font: true
            hide_tracklayout: true
            sensor: sensor.formula_one_sensor_last_result
            show_carnumber: true
            standings:
              show_flag: true
              show_team: true
            title: Last Race
            type: custom:formulaone-card
          styles:
            --mdc-theme-primary: yellow
        - attributes:
            label: Next Race
          card:
            card_type: countdown
            date_locale: in
            f1_font: true
            show_raceinfo: true
            title: Next Race
            type: custom:formulaone-card
          styles:
            --mdc-theme-primary: red
        - attributes:
            label: Schedule
          card:
            card_type: schedule
            date_locale: in
            f1_font: true
            sensor: sensor.formula_one_sensor_races
            standings:
              show_flag: true
            title: Schedule
            type: custom:formulaone-card
          styles:
            --mdc-theme-primary: cyan
        - attributes:
            label: Driver Standings
          card:
            card_type: driver_standings
            f1_font: true
            show_carnumber: true
            standings:
              show_flag: true
            title: Driver Standings
            translations:
              points: Points
            type: custom:formulaone-card
          styles:
            --mdc-theme-primary: orange
        - attributes:
            label: Constructor Standings
          card:
            card_type: constructor_standings
            f1_font: true
            standings:
              show_flag: true
              show_team: true
              show_teamlogo: true
            title: Constructor Standings
            translations:
              points: Points
            type: custom:formulaone-card
          styles:
            --mdc-theme-primary: purple
        - attributes:
            label: Results
          card:
            card_type: results
            f1_font: true
            hide_tracklayout: true
            standings:
              show_flag: true
            title: Race Results
            type: custom:formulaone-card
          styles:
            --mdc-theme-primary: tomato
        type: custom:tabbed-card
    type: custom:state-switch
  icon: phu:f1
  layout:
    max_cols: 5
  path: formula-1
  theme: null
  title: formula-1
  type: custom:vertical-layout
  visible:
  - user: 74f7e2ffd3594037b1a2fc4de82d9fea
  - user: fb77e2a2d4434c87b9e0816707d9584e
  - user: 163feda9e08447a5b39d67d4b6b1525e
- badges: []
  cards:
  - cards:
    - cards:
      - cards:
        - icon: mdi:mail
          tap_action:
            action: call-service
            service: telegram_bot.send_message
            service_data:
              message: '{{states("sensor.shopping_list")}}'
              title: 'Shopping List:'
          type: custom:button-card
        - icon: mdi:check-all
          tap_action:
            action: call-service
            service: script.check_shopping_list
          type: custom:button-card
        - icon: mdi:notification-clear-all
          tap_action:
            action: call-service
            service: script.clear_shopping_list
          type: custom:button-card
        type: horizontal-stack
      - type: shopping-list
      type: vertical-stack
    - cards:
      - card_type: grid
        cards:
        - name: Coffee
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: Coffee
          template: list_button
          type: custom:button-card
        - name: Tea
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: Tea
          template: list_button
          type: custom:button-card
        - name: Sugar
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: Sugar
          template: list_button
          type: custom:button-card
        - name: Salt
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: Salt
          template: list_button
          type: custom:button-card
        - name: Surf
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: Surf
          template: list_button
          type: custom:button-card
        - name: Comfort
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: Comfort
          template: list_button
          type: custom:button-card
        square: false
        type: custom:hui-element
      - card_type: grid
        cards:
        - name: "\u0C2C\u0C3F\u0C2F\u0C4D\u0C2F\u0C02"
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: "\u0C2C\u0C3F\u0C2F\u0C4D\u0C2F\u0C02"
          template: list_button
          type: custom:button-card
        - name: "\u0C2A\u0C32\u0C4D\u0C32\u0C3F\u0C32\u0C41"
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: "\u0C2A\u0C32\u0C4D\u0C32\u0C3F\u0C32\u0C41"
          template: list_button
          type: custom:button-card
        - name: "\u0C36\u0C28\u0C17\u0C2A\u0C2A\u0C4D\u0C2A\u0C41"
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: "\u0C36\u0C28\u0C17\u0C2A\u0C2A\u0C4D\u0C2A\u0C41"
          template: list_button
          type: custom:button-card
        - name: "\u0C15\u0C02\u0C26\u0C3F\u0C2A\u0C2A\u0C4D\u0C2A\u0C41"
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: "\u0C15\u0C02\u0C26\u0C3F\u0C2A\u0C2A\u0C4D\u0C2A\u0C41"
          template: list_button
          type: custom:button-card
        - name: "\u0C2C\u0C02\u0C17\u0C3E\u0C33\u0C26\u0C41\u0C02\u0C2A"
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: "\u0C2C\u0C02\u0C17\u0C3E\u0C33\u0C26\u0C41\u0C02\u0C2A"
          template: list_button
          type: custom:button-card
        - name: "\u0C1F\u0C2E\u0C3E\u0C1F\u0C4B"
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: "\u0C1F\u0C2E\u0C3E\u0C1F\u0C4B"
          template: list_button
          type: custom:button-card
        - name: "\u0C15\u0C3E\u0C30\u0C46\u0C1F\u0C4D"
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: "\u0C15\u0C3E\u0C30\u0C46\u0C1F\u0C4D"
          template: list_button
          type: custom:button-card
        - name: "\u0C2C\u0C02\u0C21\u0C15\u0C3E\u0C2F"
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: "\u0C2C\u0C02\u0C21\u0C15\u0C3E\u0C2F"
          template: list_button
          type: custom:button-card
        - name: "\u0C26\u0C4A\u0C02\u0C21\u0C15\u0C3E\u0C2F"
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: "\u0C26\u0C4A\u0C02\u0C21\u0C15\u0C3E\u0C2F"
          template: list_button
          type: custom:button-card
        - name: "\u0C35\u0C02\u0C15\u0C3E\u0C2F"
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: "\u0C35\u0C02\u0C15\u0C3E\u0C2F"
          template: list_button
          type: custom:button-card
        - name: "\u0C15\u0C4D\u0C2F\u0C3E\u0C2C\u0C47\u0C1C\u0C40"
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: "\u0C15\u0C4D\u0C2F\u0C3E\u0C2C\u0C47\u0C1C\u0C40"
          template: list_button
          type: custom:button-card
        - name: "\u0C15\u0C3E\u0C32\u0C40\u0C2B\u0C4D\u0C32\u0C35\u0C30\u0C41"
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: "\u0C15\u0C3E\u0C32\u0C40\u0C2B\u0C4D\u0C32\u0C35\u0C30\u0C41"
          template: list_button
          type: custom:button-card
        - name: "\u0C17\u0C4B\u0C30\u0C41 \u0C1A\u0C3F\u0C15\u0C4D\u0C15\u0C41\u0C21\
            \u0C41"
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: "\u0C17\u0C4B\u0C30\u0C41 \u0C1A\u0C3F\u0C15\u0C4D\u0C15\u0C41\
                \u0C21\u0C41"
          template: list_button
          type: custom:button-card
        - name: "\u0C2C\u0C4A\u0C2C\u0C4D\u0C2C\u0C30 \u0C1A\u0C3F\u0C15\u0C4D\u0C15\
            \u0C41\u0C21\u0C41"
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: "\u0C2C\u0C4A\u0C2C\u0C4D\u0C2C\u0C30 \u0C1A\u0C3F\u0C15\u0C4D\
                \u0C15\u0C41\u0C21\u0C41"
          template: list_button
          type: custom:button-card
        - name: null
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: null
          template: list_button
          type: custom:button-card
        - name: "\u0C35\u0C46\u0C32\u0C4D\u0C32\u0C41\u0C32\u0C4D\u0C32\u0C3F"
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: "\u0C35\u0C46\u0C32\u0C4D\u0C32\u0C41\u0C32\u0C4D\u0C32\u0C3F"
          template: list_button
          type: custom:button-card
        - name: "\u0C09\u0C32\u0C4D\u0C32\u0C3F\u0C2A\u0C3E\u0C2F"
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: "\u0C09\u0C32\u0C4D\u0C32\u0C3F\u0C2A\u0C3E\u0C2F"
          template: list_button
          type: custom:button-card
        - name: "\u0C2A\u0C1A\u0C4D\u0C1A\u0C3F \u0C2E\u0C3F\u0C30\u0C2A\u0C15\u0C3E\
            \u0C2F"
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: "\u0C2A\u0C1A\u0C4D\u0C1A\u0C3F \u0C2E\u0C3F\u0C30\u0C2A\u0C15\
                \u0C3E\u0C2F"
          template: list_button
          type: custom:button-card
        - name: "\u0C05\u0C32\u0C4D\u0C32\u0C02"
          tap_action:
            service: input_text.set_value
            service_data:
              entity_id: input_text.shopping_list
              value: "\u0C05\u0C32\u0C4D\u0C32\u0C02"
          template: list_button
          type: custom:button-card
        square: false
        type: custom:hui-element
      type: vertical-stack
    type: horizontal-stack
  - cards:
    - double_tap_action:
        action: fire-dom-event
        browser_mod:
          data:
            browser_id: THIS
            content:
              cards:
              - content: "<h2><center> <ha-icon icon='mdi:podium'></ha-icon> Constructors\
                  \ Standings</h2>  <center><table border= \"1\" style=\"width: 80%;\
                  \ text-align: center;border-collapse: collapse;\"> <tr>\n  <th><b>Position</th>\n\
                  \  <th><b>Constructor</th>\n  <th><b>Wins</th>\n  <th><b>Points</th>\n\
                  </tr> {%- for item in state_attr(\"sensor.f1_constructor_standings\"\
                  , \"standings\") %}  <tr>  <td> {{ item.Position }} </td> <td>\n\
                  \ {{item.Constructor}}\n</td> <td> {{item.Wins}} </td> <td> {{item.Points}}\
                  \ </td> </tr> {%- endfor %}"
                type: markdown
              - content: "<h2> <center><ha-icon icon='mdi:racing-helmet'></ha-icon>\
                  \ Driver Standings</h2> <center><table border= \"1\" style=\"width:\
                  \ 80%; text-align: center;\"> <tr>\n  <th><b>Position</th>\n  <th><b>Driver</th>\n\
                  \  <th><b>Team</th>\n  <th><b>Points</th>\n</tr> {%- for item in\
                  \ state_attr(\"sensor.f1_driver_standings\", \"standings\") %} \
                  \ <tr>  <td> {{ item.Position }} </td> <td>\n {{item.Driver}}\n\
                  </td> <td> {{item.Team}} </td><td> {{item.Points}} </td> </tr> {%-\
                  \ endfor %}"
                type: markdown
              parameters:
                autoHeight: true
                effect: fade
              type: custom:swipe-card
            title: Standings
          service: browser_mod.popup
      entity_picture: /local/f1/F1.png
      show_entity_picture: true
      type: custom:button-card
    - entity: '{% if (states.sensor.ics_1.attributes.remaining > 5) %} wait {% elif
        (states.sensor.ics_1.attributes.remaining <= 5) and (states.sensor.ics_1.attributes.remaining
        >= 1) %} race_weekend {% elif (states.sensor.ics_1.attributes.remaining ==
        0) %} race_day {% endif %}'
      states:
        race_day:
          cards:
          - content: "<h1><center>\U0001F3C1 Race Day \U0001F3C1</center></h1>\n<h2><em><center><img\n\
              \          height=\"18\"\n          src=\"{{(states.sensor.formula_1.attributes.flag)}}\"\
              >{{(states.sensor.formula_1.attributes.grand_prix) |\nreplace (\"FORMULA\
              \ 1\", \"\") }}</em></h2>\n<h2><center> {{ states.sensor.ics_1.attributes.description\
              \  | replace (\"Grand Prix \",\"\")}}\n      \n{{ as_timestamp(states.sensor.ics_1.attributes.start)\
              \ |\ntimestamp_custom('at %-I:%M %p') }}</center> </h2>"
            type: markdown
          - cards:
            - content: " <img src=\"{{(states.sensor.formula_1.attributes.circuit_image)}}\"\
                \n  alt=\"{{(states.sensor.ics_1.attributes.description) | replace\
                \ (\"Qualifying \",\n  \"\")}} Circuit\">"
              theme: Google Light Theme
              type: markdown
            - content: "<p><a href=\"{{(states.sensor.formula_1.attributes.circuit_link)}}\"\
                >\n<img src=\"/local/f1/circuit_stats/{{(states.sensor.ics_1.attributes.location)}}.png\"\
                \n              alt=\"{{(states.sensor.ics_1.attributes.description)\
                \ | replace (\"Qualifying \",\n              \"\")}} Circuit\"> </a></p>"
              type: markdown
            type: custom:swipe-card
          type: vertical-stack
        race_weekend:
          content: <h1><center>Race this weekend</center>       <h2><center><img height="18"
            src="{{(states.sensor.formula_1.attributes.flag)}}"> {{(states.sensor.ics_1.attributes.description)
            | replace ("Qualifying ", "")}} <br>
          type: markdown
        wait:
          content: '<h1><center><img height="18"       src="{{(states.sensor.formula_1.attributes.flag)}}">
            {{(states.sensor.ics_1.attributes.description) | replace ("Qualifying
            ", "")}} </center> <h2><center>{{(states.sensor.ics_1.attributes.remaining)}}
            days to go </center> '
          type: markdown
      type: custom:state-switch
    type: custom:stack-in-card
    view_layout:
      column: 1
  icon: mdi:cart
  path: shopping
  theme: null
  title: Shopping
  type: panel
  visible: []
