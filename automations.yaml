- id: homeassistant_update_notification
  alias: ⚙️HomeAssistant Update notification
  triggers:
  - entity_id:
    - update.home_assistant_core_update
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
    trigger: state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.minor_version_update
        state: 'on'
      sequence:
      - action: notify.mobile_app_pixel8pro
        data:
          message: "Auto updating {{states.update.home_assistant_core_update.attributes.installed_version\n
            }} → {{ states.update.home_assistant_core_update.attributes.latest_version
            }}"
          title: "\U0001F195 Minor version Updating!"
          data:
            notification_icon: mdi:package-up
            subject: Home Assistant {{states.update.home_assistant_core_update.attributes.latest_version}}
              is available.
            tag: update
            clickAction: /lovelace/updates
            icon_url: /local/images/party.png
            sticky: 'true'
      - action: update.install
        metadata: {}
        data:
          backup: true
        target:
          entity_id: update.home_assistant_core_update
    - conditions:
      - condition: state
        entity_id: binary_sensor.minor_version_update
        state: 'off'
      sequence:
      - action: notify.mobile_app_pixel8pro
        data:
          message: "{{states.update.home_assistant_core_update.attributes.installed_version\n
            }} → {{ states.update.home_assistant_core_update.attributes.latest_version
            }}"
          title: "\U0001F195 Update Available!"
          data:
            notification_icon: mdi:package-up
            subject: Home Assistant {{states.update.home_assistant_core_update.attributes.latest_version}}
              is available.
            tag: update
            clickAction: /lovelace/updates
            icon_url: /local/images/party.png
            sticky: 'true'
  mode: single
- id: spotify_playback
  alias: "\U0001F3B5Spotify Selected Device Force playback"
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.speakers_spotify
  condition: []
  action:
  - action: script.spotify_start
  mode: single
- id: music_spotify
  alias: "\U0001F3B5Music Jukebox"
  trigger:
  - platform: event
    event_type: tag_scanned
  condition:
  - condition: template
    value_template: '{{ trigger.event.data.tag_id in tags }}'
  action:
  - variables:
      uri: '{{ tags[trigger.event.data.tag_id].uri }}'
  - action: spotcast.start
    data:
      device_name: '{% if is_state(''media_player.spotify'', ''playing'') %} {{state_attr("media_player.spotify",
        "source")}} {%else%}{{ states(''input_select.speakers_spotify'') }}{%endif%}'
      uri: '{{ uri }}'
      random_song: true
      force_playback: true
      shuffle: true
  mode: restart
  variables:
    tags:
      04-BD-F1-F2-03-68-80:
        uri: spotify:playlist:2OTjSlEoXXnrv6L5ryw3sV?si=a00c6c678ef446c5
      04-C5-F1-F2-03-68-80:
        uri: spotify:playlist:5QTClPorWVvK650livXyEr?si=69a587c913554a73
      04-60-50-0A-22-6F-81:
        uri: spotify:playlist:37i9dQZF1DZ06evO1SVXaM
      04-5C-51-0A-22-6F-81:
        uri: spotify:artist:4DHXXUP4qza7DacDKVT23G?si=k7eCA-BRRsaXNTzN0ulD5w
      04-6A-50-0A-22-6F-81:
        uri: spotify:playlist:7zozfVwEIRnlZVhWAjCvh4?si=ef9e4f4789d24d93
      04-73-50-0A-22-6F-81:
        uri: spotify:playlist:4McZ2miIU3GteSwmAAxCrJ?si=F0Vg19zkRTi3g3Y4DyQeMA
      04-77-51-0A-22-6F-81:
        uri: spotify:playlist:2DsO6uDqyONHtelhjUbYix?si=mFYPVbLaTnGI-IAQQiAYa
      04-53-51-0A-22-6F-81:
        uri: spotify:playlist:37i9dQZF1DZ06evO0KEAbC?si=be9f74962433475f
      04-4B-51-0A-22-6F-81:
        uri: spotify:playlist:10N88juIQN9zO7a2FdPpAr?si=puXar2w3QmS-byDzvCr5Mw
      04-3B-51-0A-22-6F-81:
        uri: spotify:playlist:42WlES4C0cTGvjO4aquO7f?si=IlBYKTckTnGxSz7chv6GpQ
      04-43-51-0A-22-6F-81:
        uri: spotify:playlist:113zomdc3VfahCRJ0vuVML?si=434e184ad0914c94
      04-10-51-0A-22-6F-81:
        uri: spotify:playlist:1DRN46YWHKyrZ6CmF1ykJw?si=pKimy_gJQJiBQeVzVXeoCA
      04-18-51-0A-22-6F-81:
        uri: spotify:playlist:7kWWQq0gZHaGmy4NfjnOj5?si=KDeC7IiATtSp3Qsro5njeg
      04-20-51-0A-22-6F-81:
        uri: spotify:playlist:37i9dQZF1DZ06evO1MVYmm?si=ZQxQ1t9zTzKq7lRgvfMP2Q
      04-33-51-0A-22-6F-81:
        uri: spotify:playlist:37i9dQZEVXcWjFlf2abaJx?si=c4588564cf784c02
      04-28-51-0A-22-6F-81:
        uri: spotify:artist:6XyY86QOPPrYVGvF9ch6wz?si=ANPiWS39QSGCWHBBMMW1Ow
      04-50-50-0A-22-6F-81:
        uri: spotify:album:4m2880jivSbbyEGAKfITCa?si=pacROChHSFSDEs5XIYtzTQ
      04-D5-F1-F2-03-68-80:
        uri: spotify:playlist:37i9dQZF1EJMBmrEbDk6wO?si=577fdf28736140e5
      04-CD-F1-F2-03-68-80:
        uri: spotify:playlist:37i9dQZF1EJBSlh2ABgMAk?si=7f1ec20760fc407d
      04-DD-F1-F2-03-68-80:
        uri: spotify:playlist:2XPCqkfm5o7HHjLZ4b4ntS?si=45d4f05eeaf04eff
      04-F5-F1-F2-03-68-80:
        uri: spotify:playlist:37i9dQZF1DZ06evO3vNCZb
- id: player_controls
  alias: "\U0001F3B5Player Controls"
  description: ''
  trigger:
  - platform: event
    event_type: tag_scanned
  condition:
  - condition: template
    value_template: '{{ trigger.event.data.tag_id in tags }}'
  action:
  - variables:
      action: '{{ tags[trigger.event.data.tag_id].service }}'
  - action: '{{ action }}'
    target:
      entity_id: media_player.spotify
  mode: restart
  variables:
    tags:
      previous:
        action: media_player.media_previous_track
      play/pause:
        action: media_player.media_play_pause
      next:
        action: media_player.media_next_track
- id: '1636123727125'
  alias: ⚙️Shopping list update
  description: ''
  trigger:
  - platform: state
    entity_id: input_text.shopping_list
  condition: []
  action:
  - action: script.add_shopping_list
    data: {}
  mode: single
- id: '1638974963835'
  alias: ⚙️Homeassistant Start/Stop
  description: Runs various automations based on homeassistant starting or stopping.
  triggers:
  - event: shutdown
    id: shutdown
    trigger: homeassistant
  - event: start
    id: start
    trigger: homeassistant
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id: shutdown
      sequence: []
    - conditions:
      - condition: trigger
        id: start
      sequence:
      - action: pyscript.f1driverstandings
        data: {}
      - action: pyscript.f1constructorstandings
        data: {}
      - action: rest_command.reload_google_sheets_music
        data: {}
      - action: rest_command.reload_google_sheets_weight
        data: {}
      - action: rest_command.reload_google_sheets_weight2
        data: {}
    default: []
  mode: single
- id: '1654855874344'
  alias: ⚙️Convert Lovelace configuration to yaml
  description: ''
  trigger:
  - platform: event
    event_type: lovelace_updated
    event_data: {}
  condition: []
  action:
  - action: shell_command.lovelace_default_convert
    data: {}
  mode: single
- id: '1655137751596'
  alias: ⚙️Tag Github with version when core updated
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - action: hassio.addon_restart
    metadata: {}
    data:
      addon: core_git_pull
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - condition: template
    value_template: '{{states.sensor.current_version.state > states.sensor.n00bcodr_homeassistant_latest_tag.state}}'
  - action: notify.mobile_app_pixel8pro
    data:
      message: Update tag in GitHub?
      title: Home Assistant Core Updated!
      data:
        tag: update
        notification_icon: mdi:git
        icon_url: /local/images/HA_logo.png
        color: red
        actions:
        - action: tag_update
          title: Update!
        - action: URI
          title: Open Repo
          uri: https://github.com/n00bcodr/homeassistant
  mode: single
- id: '1655814095516'
  alias: "\U0001F3ACCapture Shared URL - Google TV"
  description: Captures the URL shared and updates input_text ccgtv_share_url
  trigger:
  - platform: event
    event_type: mobile_app.share
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data|regex_search(''com.netflix'', ignorecase=TRUE)
          }}'
      sequence:
      - action: input_text.set_value
        data:
          value: '{{ trigger.event.data.text|regex_findall_index(find=''(http.*)'',
            ignorecase=TRUE) }}

            '
        target:
          entity_id: input_text.ccgtv_share_url
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data|regex_search(''com.amazon'', ignorecase=TRUE)
          }}'
      sequence:
      - action: input_text.set_value
        data:
          value: '{{ trigger.event.data.text|regex_findall_index(find=''(http.*)'',
            ignorecase=true)|replace ("&ref_=atv_dp_share_seas&r=web", "") }}

            '
        target:
          entity_id: input_text.ccgtv_share_url
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data|regex_search(''startv.hotstar'', ignorecase=TRUE)
          }}'
      sequence:
      - action: input_text.set_value
        data:
          value: '{{ trigger.event.data.text|regex_findall_index(find=''(http.*)'',
            ignorecase=TRUE) }}

            '
        target:
          entity_id: input_text.ccgtv_share_url
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data|regex_search(''youtu.be'', ignorecase=TRUE)
          }}'
      sequence:
      - action: input_text.set_value
        data:
          value: '{{ trigger.event.data.url|regex_findall_index(find=''(http.*)'',
            ignorecase=TRUE) }}

            '
        target:
          entity_id: input_text.ccgtv_share_url
    default:
    - action: notify.persistent_notification
      data:
        message: '{{ states(''input_text.ccgtv_share_url'') }}'
  - action: androidtv.adb_command
    data:
      entity_id: media_player.google_tv
      command: HOME
  - action: script.load_share_url_googletv
    data: {}
  mode: single
- id: '1670537821206'
  alias: "\U0001F3F0Den off"
  description: Turns off all things in DEN when I exit.
  trigger:
  - platform: tag
    tag_id: 5f5bedc8-6a15-486a-ab22-49ce237dde40
    enabled: true
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: Den_OFF
  - platform: state
    entity_id:
    - input_boolean.den
    from: 'on'
    to: 'off'
  - platform: device
    domain: mqtt
    device_id: 3fd72c6a517024c03b9531259c2d55d9
    type: action
    subtype: long
    discovery_id: 0x00124b001eaa8251 action_long
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{(states.media_player.spotify.attributes.source) != ''Pixel
          8 Pro''}}'
      sequence:
      - action: scene.create
        data:
          scene_id: den_as_it_was
          snapshot_entities:
          - switch.workstation
          - light.light
          - media_player.spotify
          - light.shapes
          - climate.heater
      - action: homeassistant.turn_off
        data: {}
        target:
          entity_id:
          - switch.workstation
          - light.shapes
          - light.light
          - climate.heater
      - action: media_player.media_pause
        data: {}
        target:
          entity_id:
          - media_player.spotify
    - conditions:
      - condition: template
        value_template: '{{(states.media_player.spotify.attributes.source) == ''Pixel
          8 Pro''}}'
      sequence:
      - action: scene.create
        data:
          scene_id: den_as_it_was
          snapshot_entities:
          - switch.workstation
          - light.light
          - light.shapes
      - action: homeassistant.turn_off
        data: {}
        target:
          entity_id:
          - switch.workstation
          - light.shapes
          - light.light
  mode: single
- id: '1670578939434'
  alias: "\U0001F3F0Den Button"
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 3fd72c6a517024c03b9531259c2d55d9
    type: action
    subtype: single
    discovery_id: 0x00124b001eaa8251 action_single
    id: click
  - platform: device
    domain: mqtt
    device_id: 3fd72c6a517024c03b9531259c2d55d9
    type: action
    subtype: double
    discovery_id: 0x00124b001eaa8251 action_double
    id: doubleclick
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: click
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: light.light
            state: 'on'
          sequence:
          - action: homeassistant.turn_off
            data: {}
            target:
              entity_id: light.light
        - conditions:
          - condition: state
            entity_id: light.light
            state: 'off'
          sequence:
          - action: light.turn_on
            data:
              color_temp: 153
              brightness_pct: 100
            target:
              entity_id: light.light
        default: []
    - conditions:
      - condition: trigger
        id: doubleclick
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: light.light
            state: 'on'
          sequence:
          - action: homeassistant.turn_off
            target:
              entity_id: light.light
            data: {}
        - conditions:
          - condition: state
            entity_id: light.light
            state: 'off'
          sequence:
          - action: light.turn_on
            data:
              color_temp: 500
              brightness_pct: 100
            target:
              entity_id: light.light
        default: []
    default: []
  mode: single
- id: '1671637864679'
  alias: "\U0001F3F0Den as it was"
  description: Returns Den State to back what it was when Den OFF was triggered.
  trigger:
  - platform: state
    entity_id:
    - input_boolean.den
    from: 'off'
    to: 'on'
  condition: []
  action:
  - action: scene.turn_on
    data: {}
    entity_id: scene.den_as_it_was
  mode: single
- id: '1671638012875'
  alias: "\U0001F3F0Send notification if no motion in Den"
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.den_motion_occupancy
    to: 'off'
    for: 00:04:00
    from: 'on'
  condition:
  - condition: and
    conditions:
    - condition: time
      after: 09:00:00
      before: '21:00:00'
      enabled: false
    - condition: or
      conditions:
      - condition: state
        entity_id: switch.workstation
        state: 'on'
    - condition: state
      entity_id: binary_sensor.chair_occupancy
      state: 'off'
      enabled: true
      for:
        hours: 0
        minutes: 5
        seconds: 0
  action:
  - action: notify.mobile_app_pixel8pro
    data:
      title: Are you there?
      message: 'No motion detected in Den in the last 5 minutes. '
      data:
        actions:
        - action: Den_OFF
          title: 'NO'
        notification_icon: mdi:motion-sensor-off
        tag: den_off
        icon_url: /local/images/ninja.png
  mode: single
- id: '1671638403506'
  alias: "\U0001F3F0Desk Presence Detection"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.vibration_vibration
    to: 'on'
  condition:
  - condition: and
    conditions:
    - condition: time
      after: 08:00:00
      before: '22:00:00'
    - condition: state
      entity_id: switch.workstation
      state: 'off'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.den
        state: 'off'
      sequence:
      - action: automation.trigger
        target:
          entity_id: automation.den_as_it_was
        data: {}
    - conditions:
      - condition: state
        entity_id: input_boolean.den
        state: 'on'
      sequence:
      - action: homeassistant.turn_on
        data: {}
        target:
          entity_id: switch.workstation
    default: []
  mode: single
- id: '1672227190927'
  alias: "\U0001F3F0Clear Notification when motion is detected"
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.den_motion_occupancy
    from: 'off'
    to: 'on'
    enabled: false
  - platform: state
    entity_id:
    - binary_sensor.chair_occupancy
    from: 'off'
    to: 'on'
  condition: []
  action:
  - action: notify.mobile_app_pixel8pro
    data:
      data:
        tag: den_off
      message: clear_notification
  mode: single
- id: '1672404137791'
  alias: "\U0001F3F0 Bed IFTTT"
  description: ''
  trigger:
    platform: event
    event_type: ifttt_webhook_received
    event_data:
      action: call_service
  action:
    service_template: '{{ trigger.event.data.service }}'
    data_template:
      entity_id: '{{ trigger.event.data.entity_id }}'
- id: '1674758476057'
  alias: "\U0001F4A1Living Room Light Presence"
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.living_room_presence
    to: 'on'
    from: 'off'
    id: presence
    trigger: state
  - entity_id:
    - binary_sensor.living_room_presence
    to: 'off'
    from: 'on'
    id: clear
    trigger: state
  conditions:
  - condition: or
    conditions:
    - condition: sun
      before: sunrise
      after: sunset
    - condition: numeric_state
      entity_id: sensor.presence_sensor_light_level
      below: 40
  - condition: and
    conditions:
    - condition: state
      entity_id: light.led_strip
      state: 'off'
    - condition: state
      entity_id: media_player.google_tv_streamer_remote
      state: 'off'
    - condition: state
      entity_id: light.chandelier
      state: 'off'
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - presence
      sequence:
      - action: light.turn_on
        data:
          color_temp: 500
          brightness: 255
        target:
          entity_id: light.living_room_lamp
    - conditions:
      - condition: trigger
        id:
        - clear
      sequence:
      - action: homeassistant.turn_off
        data: {}
        target:
          entity_id: light.living_room_lamp
  mode: queued
  max: 10
- id: '1675093554282'
  alias: "\U0001F9FA\U0001F4F3Wash Cycle Notification"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.washing_machine_state
    from: Spinning
    to: Idle
    id: wash
  - platform: state
    entity_id:
    - sensor.washing_machine_state
    from: Drying
    to: Idle
    id: dry
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: wash
      sequence:
      - action: notify.all_phones
        data:
          data:
            tag: wash_cycle
          message: clear_notification
        alias: Clear Existing Notifications
      - wait_for_trigger:
        - platform: state
          entity_id:
          - sensor.washing_machine_state
          to: Cycle Complete
        continue_on_timeout: false
      - action: notify.all_phones
        data:
          message: at {{ as_timestamp(now()) | timestamp_custom('%-I:%M %p')}}
          data:
            notification_icon: mdi:washing-machine
            icon_url: /local/images/washing_machine.png
            sticky: 'true'
            image: /local/images/washing_machine.png
            tag: wash_cycle
          title: "\U0001F9FA Wash Cycle Complete"
    - conditions:
      - condition: trigger
        id: dry
      sequence:
      - action: notify.all_phones
        data:
          data:
            tag: wash_cycle
          message: clear_notification
        alias: Clear Existing Notifications
      - wait_for_trigger:
        - platform: state
          entity_id:
          - sensor.washing_machine_state
          to: Cycle Complete
        continue_on_timeout: false
      - action: notify.all_phones
        data:
          message: at {{ as_timestamp(now()) | timestamp_custom('%-I:%M %p')}}
          data:
            notification_icon: mdi:washing-machine
            image: /local/images/washing_machine.png
            tag: wash_cycle
            sticky: 'true'
          title: "\U0001F9FA Dry Cycle Complete"
  mode: single
- id: '1675437001659'
  alias: "\U0001F6AE\U0001F4F3Bin Pickup Notification"
  description: ''
  triggers:
  - at: '11:00:00'
    id: morning
    enabled: true
    trigger: time
  - at: '21:00:00'
    id: night
    trigger: time
  conditions:
  - alias: Check if the collection is in the next two days
    condition: template
    value_template: '{{ state_attr(''sensor.black_bin'', ''next_collection'') <= 2
      or state_attr(''sensor.blue_bin'', ''next_collection'') <= 2 }}

      '
  actions:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{(state_attr("sensor.black_bin", "next_collection")) ==
          2 }}'
        alias: Black Bin Next Collection is in 2 Days
      - condition: trigger
        id:
        - morning
      sequence:
      - action: notify.all_phones
        data:
          data:
            tag: bin_pickup
          message: clear_notification
      - action: notify.all_phones
        data:
          data:
            activationMode: foreground
            notification_icon: mdi:trash-can-outline
            icon_url: /local/images/black_bin.png
            tag: bin_pickup
            color: black
            image: /local/images/black_bin.png
          message: Pickup is in two days on {{ states.sensor.black_bin.state}}
          title: Black Bin
    - conditions:
      - alias: Black Bin Next Collection is tomorrow
        condition: template
        value_template: '{{(state_attr("sensor.black_bin", "next_collection")) ==
          1 }}'
      - condition: trigger
        id:
        - morning
      sequence:
      - action: notify.all_phones
        data:
          data:
            tag: bin_pickup
          message: clear_notification
      - action: notify.all_phones
        data:
          data:
            notification_icon: mdi:trash-can-outline
            icon_url: /local/images/black_bin.png
            color: black
            tag: bin_pickup
            image: /local/images/black_bin.png
          message: Pickup is tomorrow, {{ states.sensor.black_bin.state}}
          title: Black Bin
      alias: Black Bin collection is tomorrow and it is 11 AM
    - conditions:
      - condition: template
        value_template: '{{(state_attr("sensor.black_bin", "next_collection")) ==
          1 }}'
        alias: Black Bin Next Collection is in 1 Day
      sequence:
      - repeat:
          sequence:
          - action: notify.all_phones
            data:
              data:
                tag: bin_pickup
              message: clear_notification
          - action: notify.all_phones
            data:
              data:
                notification_icon: mdi:trash-can
                color: black
                icon_url: /local/images/black_bin.png
                tag: bin_pickup
                actions:
                - action: BIN_OUT
                  title: Yeah, the bin is out!
              message: Put the Black Bin out.
              title: Black Bin
          - delay:
              hours: 0
              minutes: 30
              seconds: 0
              milliseconds: 0
          until:
          - condition: template
            value_template: '{{ states.input_boolean.bin.last_updated.timestamp()
              > (as_timestamp(now()) - 3600) }}

              '
      alias: Black Bin collection is tomorrow, is the bin out?
    - conditions:
      - condition: template
        value_template: '{{(state_attr("sensor.blue_bin", "next_collection")) == 2
          }}'
        alias: Blue Bin Next Collection is in 2 Days
      - condition: trigger
        id:
        - morning
      sequence:
      - action: notify.all_phones
        data:
          data:
            tag: bin_pickup
          message: clear_notification
      - action: notify.all_phones
        data:
          data:
            notification_icon: mdi:trash-can
            icon_url: /local/images/blue_bin.png
            image: /local/images/blue_bin.png
            tag: bin_pickup
            color: blue
          message: Pickup is in two days on {{ states.sensor.blue_bin.state}}
          title: Blue Bin
    - conditions:
      - alias: Blue Bin Next Collection is tomorrow
        condition: template
        value_template: '{{(state_attr("sensor.blue_bin", "next_collection")) == 1
          }}'
      - condition: trigger
        id:
        - morning
      sequence:
      - action: notify.all_phones
        data:
          data:
            tag: bin_pickup
          message: clear_notification
      - action: notify.all_phones
        data:
          data:
            notification_icon: mdi:trash-can
            icon_url: /local/images/blue_bin.png
            image: /local/images/blue_bin.png
            tag: bin_pickup
            color: blue
          message: Pickup is tomorrow, {{ states.sensor.blue_bin.state}}
          title: Blue Bin
      alias: Blue Bin Collection is tomorrow and it is 11 AM
    - conditions:
      - condition: template
        value_template: '{{(state_attr("sensor.blue_bin", "next_collection")) == 1
          }}'
        alias: Blue Bin Next Collection is in 1 Day
      sequence:
      - repeat:
          sequence:
          - action: notify.all_phones
            data:
              data:
                tag: bin_pickup
              message: clear_notification
          - action: notify.all_phones
            data:
              data:
                notification_icon: mdi:trash-can
                color: blue
                icon_url: /local/images/blue_bin.png
                tag: bin_pickup
                actions:
                - action: BIN_OUT
                  title: Yeah, the bin is out!
              message: Put the Blue Bin out.
              title: Blue Bin
          - delay:
              hours: 0
              minutes: 30
              seconds: 0
              milliseconds: 0
          until:
          - condition: template
            value_template: '{{ states.input_boolean.bin.last_updated.timestamp()
              > (as_timestamp(now()) - 3600) }}

              '
      alias: Blue Bin collection is tomorrow, is the bin out?
  mode: single
- id: '1677184691191'
  alias: "\U0001F525Start/stop Timer when heating is turned on/off"
  description: ''
  triggers:
  - entity_id:
    - switch.heating
    for:
      hours: 0
      minutes: 0
      seconds: 0
    id: 'on'
    from: 'off'
    to: 'on'
    trigger: state
  - entity_id:
    - switch.heating
    for:
      hours: 0
      minutes: 0
      seconds: 0
    id: 'off'
    from: 'on'
    to: 'off'
    trigger: state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - action: timer.start
        data:
          duration: 01:30:00
        target:
          entity_id: timer.heating
      - action: notify.mobile_app_pixel8pro
        data:
          message: "\U0001F525 Heating"
          data:
            chronometer: true
            when: '{{ ((as_timestamp(now()) + 5400 ) - as_timestamp(''1970-01-01T00:00:00Z''))
              | int }}'
            notification_icon: mdi:heating-coil
            sticky: true
            persistant: true
            tag: heat
            actions:
            - action: URI
              title: Switch
              uri: entityId:switch.heating
            - action: switch.turn_off
              title: 'Off'
              entity_id: switch.heating
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - action: timer.cancel
        data: {}
        target:
          entity_id: timer.heating
      - action: notify.mobile_app_pixel8pro
        data:
          message: clear_notification
          data:
            tag: heat
  mode: single
- id: '1677263065986'
  alias: "\U0001F525Turn off heating after X minutes"
  description: ''
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.heating
  condition:
  - condition: state
    entity_id: switch.heating
    state: 'on'
  action:
  - action: switch.turn_off
    data: {}
    target:
      entity_id: switch.heating
    enabled: true
  - action: notify.all_phones_android
    data:
      message: at  {{ as_timestamp(now()) | timestamp_custom('%-I:%M %p')}}
      title: "\U0001F525 Turned off"
      data:
        notification_icon: mdi:fire
  mode: single
- id: '1679600356905'
  alias: "\U0001F4A1Synchronize states - Backyard Lights"
  description: ''
  use_blueprint:
    path: adchevrier/synchronize-the-on-off-state-of-2-entities.yaml
    input:
      entity_1: light.backyard_lights
      entity_2: switch.backyard_lights_switch
- id: '1680037718271'
  alias: "\U0001F4A1Hallway String Lights Motion"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.hallway_motion_occupancy
    to: 'on'
    from: 'off'
  condition:
  - condition: or
    conditions:
    - condition: sun
      before: sunrise
      after: sunset
    - condition: numeric_state
      entity_id: sensor.hallway_motion_illuminance
      below: 40
  action:
  - action: homeassistant.turn_on
    data: {}
    target:
      entity_id:
      - switch.string_lights
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.hallway_motion_occupancy
      from: 'on'
      to: 'off'
    continue_on_timeout: false
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - action: homeassistant.turn_off
    data: {}
    target:
      entity_id: switch.string_lights
  mode: restart
- id: '1684417211214'
  alias: "\U0001F4A1Synchronize states - String Lights"
  description: ''
  use_blueprint:
    path: adchevrier/synchronize-the-on-off-state-of-2-entities.yaml
    input:
      entity_1: switch.string_lights_switch
      entity_2: switch.string_lights
- id: '1684631799938'
  alias: "\U0001F3F0Bed Routine for curtains"
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.in_bed
    for:
      hours: 0
      minutes: 0
      seconds: 0
    trigger: state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.in_bed
        state: 'on'
      - condition: state
        entity_id: cover.curtains
        state: open
      - condition: time
        after: '21:00:00'
        before: 04:00:00
      sequence:
      - action: cover.close_cover
        data: {}
        target:
          entity_id: cover.curtains
    - conditions:
      - condition: state
        entity_id: binary_sensor.in_bed
        state: 'off'
      - condition: state
        entity_id: cover.curtains
        state: closed
      - condition: time
        after: 06:00:00
        before: '11:59:00'
      sequence:
      - wait_for_trigger:
        - entity_id:
          - sensor.toothbrush
          to: running
          trigger: state
        timeout:
          hours: 0
          minutes: 10
          seconds: 0
          milliseconds: 0
        continue_on_timeout: false
      - action: cover.open_cover
        data: {}
        target:
          entity_id: cover.curtains
  mode: single
- id: '1685201261360'
  alias: "\U0001F4A1Entrance Light Motion"
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: 59ae4f51536e6ef0aad9797908c43c4f
    entity_id: 2469b2b43494bb595c40223eb03614cf
    domain: binary_sensor
  condition:
  - condition: sun
    before: sunrise
    after: sunset
  action:
  - action: homeassistant.turn_on
    data: {}
    target:
      entity_id: switch.porch_light
  - delay:
      hours: 0
      minutes: 0
      seconds: 50
      milliseconds: 0
  - action: homeassistant.turn_off
    data: {}
    target:
      entity_id: switch.porch_light
  mode: single
- id: '1687359882327'
  alias: ⚙️Reload Unavailable Entities
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.speedtest_download
    id: speedtest
    to: unavailable
    for:
      hours: 0
      minutes: 1
      seconds: 30
  - platform: state
    entity_id:
    - sensor.bob_duration
    id: homewhiz
    to: unavailable
    for:
      hours: 0
      minutes: 1
      seconds: 30
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: speedtest
      sequence:
      - action: hassio.addon_start
        data:
          addon: 6b87c29e_speedtest_addon
    - conditions:
      - condition: trigger
        id: homewhiz
      sequence:
      - action: homeassistant.reload_config_entry
        target:
          entity_id:
          - select.bob_state
          - select.bob_programme
          - select.bob_temperature
          - select.bob_spin
          - select.bob_fast
          - select.bob_drying
          - select.bob_custom_duration_level
          - select.bob_rinse_count
          - sensor.bob_sub_state
          - sensor.bob_programme_end_time
          - sensor.bob_duration
          - sensor.bob_remaining
          - switch.bob_prewash
          - switch.bob_extra_rinse
          - switch.bob_smart_anti_crease
          - switch.bob_steam
          - switch.bob_extra_water
          - switch.bob_soaking
          - switch.bob_night_mode
          - switch.bob_anticrease
          - binary_sensor.bob_remote_control
          device_id: []
          area_id: []
        data: {}
  mode: single
- id: '1688497197460'
  alias: "\U0001F3B5Text Search and Play Music on Spotify"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_text.text_spotify
  condition: []
  action:
  - action: spotcast.start
    data:
      force_playback: false
      random_song: false
      repeat: 'off'
      shuffle: false
      offset: 0
      ignore_fully_played: false
      track_name: '{{states.input_text.text_spotify.state}}'
      device_name: '{% if is_state(''media_player.spotify'', ''playing'') %} {{state_attr("media_player.spotify",
        "source")}} {%else%}{{ states(''input_select.speakers_spotify'') }}{%endif%}'
  mode: single
- id: '1689331566546'
  alias: "\U0001F3F0Leaving and Arriving Home"
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.pixel8pro_android_auto
    to: 'on'
    from: 'off'
    trigger: state
  conditions:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  actions:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: time
          after: 07:00:00
          before: 09:00:00
        - condition: state
          entity_id: person.pavanthanuj
          state: home
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - action: notify.mobile_app_pixel8pro
        data:
          message: command_activity
          data:
            intent_uri: https://waze.com/ul?favorite=work&navigate=yes
            intent_package_name: com.waze
            intent_action: android.intent.action.VIEW
      - action: automation.trigger
        data:
          skip_condition: true
        target:
          entity_id: automation.tag_desk_is_scanned
        enabled: true
    - conditions:
      - condition: and
        conditions:
        - condition: time
          after: '15:00:00'
          before: '18:00:00'
        - condition: state
          entity_id: person.pavanthanuj
          state: Work
      sequence:
      - action: notify.mobile_app_pixel8pro
        data:
          message: command_activity
          data:
            intent_uri: https://waze.com/ul?favorite=home&navigate=yes
            intent_package_name: com.waze
            intent_action: android.intent.action.VIEW
      - wait_for_trigger:
        - entity_id: device_tracker.pixel8pro
          zone: zone.home
          event: enter
          trigger: zone
        continue_on_timeout: true
        enabled: true
      - action: automation.trigger
        data:
          skip_condition: true
        target:
          entity_id: automation.den_as_it_was
        enabled: true
  mode: single
- id: '1691773218286'
  alias: "\U0001F3B5Music Jukebox - Living Room"
  description: Music Jukebox for the Living Room
  triggers:
  - event_type: tag_scanned
    trigger: event
  conditions:
  - condition: template
    value_template: '{{ trigger.event.data.tag_id in tags }}'
  actions:
  - variables:
      uri: '{{ tags[trigger.event.data.tag_id].uri }}'
  - action: spotcast.start
    data:
      device_name: '{% if is_state(''remote.google_tv_streamer_remote'', ''on'') %}
        {{''Google TV''}} {%else%}{{''Nest Mini''}}{%endif%}'
      uri: '{{ uri }}'
      random_song: true
      force_playback: true
      shuffle: true
  - if:
    - condition: state
      entity_id: media_player.google_tv_streamer
      state: 'on'
    then:
    - action: media_player.select_source
      data:
        source: Spotify
      target:
        entity_id:
        - media_player.google_tv_streamer
  mode: restart
  variables:
    tags:
      04-23-F3-F2-03-68-81:
        uri: spotify:playlist:37i9dQZF1EJva5huKCwRZ8
- id: '1697306029605'
  alias: "\U0001F4A1Kitchen Light Presence"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.kitchen_presence
    to: 'on'
    from: 'off'
    id: presence
  - platform: state
    entity_id:
    - binary_sensor.kitchen_presence
    to: 'off'
    from: 'on'
    id: clear
  condition:
  - condition: or
    conditions:
    - condition: sun
      before: sunrise
      after: sunset
    - condition: numeric_state
      entity_id: sensor.presence_sensor_light_level
      below: 20
      enabled: true
    - condition: state
      entity_id: switch.kitchen_light
      state: 'on'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - presence
      sequence:
      - action: homeassistant.turn_on
        data: {}
        target:
          entity_id: switch.kitchen_light
    - conditions:
      - condition: trigger
        id:
        - clear
      sequence:
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - condition: state
        entity_id: binary_sensor.kitchen_presence
        state: 'off'
      - action: homeassistant.turn_off
        data: {}
        target:
          entity_id: switch.kitchen_light
  mode: parallel
  max: 10
- id: '1698150976885'
  alias: "\U0001F4F3Calvin and Hobbes Notifications"
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    offset: 0
    id: sunrise
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - choose:
    - conditions:
      - condition: trigger
        id:
        - sunrise
      sequence:
      - action: telegram_bot.send_message
        data:
          target:
          - -1002143785244
          message: 'Calvin and Hobbes - <a href="{{ states.sensor.calvin_and_hobbes.state}}">{{as_timestamp(strptime(states.sensor.calvin_and_hobbes.attributes.publishedDate,''%Y/%m/%d''))
            | timestamp_custom(''%-d %b, %Y'') }}</a>


            <a href= "{{states.sensor.calvin_and_hobbes.attributes.goComicsUrl}}">
            GoComics URL</a>'
          parse_mode: html
    default:
    - action: notify.mobile_app_pixel8pro
      data:
        message: ''
        data:
          sticky: 'true'
          color: '#2DF56D'
          notification_icon: mdi:thought-bubble
          image: '{{states.sensor.calvin_and_hobbes.state}}'
          actions:
          - action: URI
            title: Open Image
            uri: '{{states.sensor.calvin_and_hobbes.state}}'
          - action: URI
            title: '{{as_timestamp(strptime(states.sensor.calvin_and_hobbes.attributes.publishedDate,''%Y/%m/%d''))
              | timestamp_custom(''%-d %b, %Y'') }}'
            uri: /lovelace/calvinandhobbes
  mode: single
- id: '1698602804746'
  alias: "\U0001F3F0 Bed Routine"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.in_bed
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition:
  - condition: or
    conditions:
    - condition: device
      type: is_on
      device_id: dff84bd584c07eb8fe0319805d37fb40
      entity_id: aae986f563864b62471636d435e625a3
      domain: light
    - condition: device
      type: is_on
      device_id: 22d3b83188e1ace9ced42e13d76ce319
      entity_id: light.shapes
      domain: light
  action:
  - action: script.bed_routine_script
    data: {}
  mode: single
- id: '1699609843837'
  alias: "\U0001F3F0Toggle Phone to Vibrate when at Work"
  description: ''
  trigger:
  - platform: zone
    entity_id: person.pavanthanuj
    zone: zone.work
    event: enter
    id: work
  - platform: state
    entity_id:
    - sensor.pixel8pro_wifi_connection
    to: EWA@INTERNET
    id: work
  - platform: zone
    entity_id: person.pavanthanuj
    zone: zone.work
    event: leave
    id: leave work
  - platform: state
    entity_id:
    - sensor.pixel8pro_wifi_connection
    to: Mad House
    id: leave work
  condition: []
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - work
        - condition: template
          value_template: '{{ states(''sensor.pixel8pro_ringer_mode'') != ''vibrate''
            }}'
      sequence:
      - action: notify.mobile_app_pixel8pro
        data:
          message: command_ringer_mode
          data:
            command: vibrate
        alias: Silence Phone when at Work
      - alias: Send Notification
        action: notify.mobile_app_pixel8pro
        data:
          message: Shhh..
          data:
            notification_icon: mdi:vibrate
            timeout: 60
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - leave work
        - condition: template
          value_template: '{{ states(''sensor.pixel8pro_ringer_mode'') == ''vibrate''
            }}'
      sequence:
      - alias: Ringer when leaving work
        action: notify.mobile_app_pixel8pro
        data:
          message: command_ringer_mode
          data:
            command: normal
      - alias: Send Notification
        action: notify.mobile_app_pixel8pro
        data:
          data:
            notification_icon: mdi:volume-high
            timeout: 30
          message: ' '
  mode: restart
- id: '1699724589577'
  alias: Hilary Exit
  description: ''
  trigger:
  - platform: tag
    tag_id: c37fef6a-a97d-4b46-83a9-f563b9f9a61d
  condition: []
  action:
  - action: homeassistant.turn_off
    data: {}
    target:
      entity_id:
      - light.bed_lamp
      - switch.heater
  mode: single
- id: '1700567569365'
  alias: "\U0001F6AE\U0001F4F3Is the Bin Outside?"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.back_door_contact
    from: 'off'
    to: 'on'
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: BIN_OUT
  condition: []
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: time
          after: '21:00:00'
          before: 02:00:00
        - condition: or
          conditions:
          - condition: template
            value_template: '{{(state_attr("sensor.blue_bin", "next_collection"))
              <= 1 }}'
          - condition: template
            value_template: '{{(state_attr("sensor.black_bin", "next_collection"))
              <= 1 }}'
      sequence:
      - action: input_boolean.turn_on
        target:
          entity_id: input_boolean.bin
        data: {}
      - action: notify.all_phones
        data:
          data:
            tag: bin_pickup
          message: clear_notification
      - action: notify.all_phones
        data:
          data:
            notification_icon: mdi:delete-empty
            color: green
            timeout: 600
            activationMode: foreground
          message: ' '
          title: The bin is outside.
    - conditions:
      - condition: or
        conditions:
        - condition: template
          value_template: '{{(state_attr("sensor.blue_bin", "next_collection")) !=
            0 }}'
        - condition: template
          value_template: '{{(state_attr("sensor.black_bin", "next_collection")) !=
            0 }}'
      sequence:
      - action: input_boolean.turn_off
        target:
          entity_id: input_boolean.bin
        data: {}
  mode: single
- id: '1701294630770'
  alias: "\U0001F3B5Move Music to Friday"
  description: ''
  triggers:
  - tag_id: b7e48c34-d74d-4a6b-be87-491037aff87f
    id: tag
    trigger: tag
  - entity_id:
    - sensor.pixel8pro_charger_type
    to: wireless
    id: phone
    trigger: state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - tag
      sequence:
      - action: spotcast.start
        data:
          limit: 20
          force_playback: true
          random_song: false
          repeat: 'off'
          shuffle: true
          offset: 0
          ignore_fully_played: false
          device_name: Friday
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id:
          - phone
        - condition: template
          value_template: '{{ is_state_attr(''media_player.spotify'', ''source'',
            ''Pixel 8 Pro'') }}'
      sequence:
      - action: spotcast.start
        data:
          limit: 20
          force_playback: false
          random_song: false
          repeat: 'off'
          shuffle: false
          offset: 0
          ignore_fully_played: false
          device_name: Friday
  mode: single
- id: '1704124907970'
  alias: Darragh's Button
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 0f7674241f0842e51cb6ba901f3f0604
    type: action
    subtype: 'on'
    discovery_id: 0x70ac08fffe71ecfc action_on
    id: single
  - platform: device
    domain: mqtt
    device_id: 0f7674241f0842e51cb6ba901f3f0604
    type: action
    subtype: 'off'
    discovery_id: 0x70ac08fffe71ecfc action_off
    id: double
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - single
      sequence:
      - action: media_player.media_play_pause
        target:
          entity_id: media_player.darragh_s_nest_hub
        data: {}
    - conditions:
      - condition: trigger
        id:
        - double
      sequence:
      - action: homeassistant.turn_on
        target:
          entity_id:
          - switch.kettle
        data: {}
  mode: single
- id: '1704137731926'
  alias: Hilary's Button
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: b6f8b4147e2c746231ccf83a15c53889
    type: action
    subtype: 'on'
    discovery_id: 0x70ac08fffe71f036 action_on
    id: single
  - platform: device
    domain: mqtt
    device_id: b6f8b4147e2c746231ccf83a15c53889
    type: action
    subtype: 'off'
    discovery_id: 0x70ac08fffe71f036 action_off
    id: double
  - platform: device
    domain: mqtt
    device_id: b6f8b4147e2c746231ccf83a15c53889
    type: action
    subtype: brightness_move_up
    discovery_id: 0x70ac08fffe71f036 action_brightness_move_up
    id: hold
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - single
      sequence:
      - action: homeassistant.toggle
        data: {}
        target:
          entity_id: light.bed_lamp
    - conditions:
      - condition: trigger
        id:
        - double
      sequence:
      - action: homeassistant.toggle
        data: {}
        target:
          entity_id: switch.heater
    - conditions:
      - condition: trigger
        id:
        - hold
      sequence:
      - action: homeassistant.toggle
        data: {}
        target:
          entity_id: switch.heating_blanket
  mode: single
- id: '1704234098620'
  alias: "\U0001F3F0Curtains - Ikea Remote"
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 2b20c2dcd73f02e2c283f6786b16a489
    type: action
    subtype: 'off'
    discovery_id: 0xb4e3f9fffe8c1f22 action_off
    id: close
  - platform: device
    domain: mqtt
    device_id: 2b20c2dcd73f02e2c283f6786b16a489
    type: action
    subtype: 'on'
    discovery_id: 0xb4e3f9fffe8c1f22 action_on
    id: open
  - platform: device
    domain: mqtt
    device_id: 2b20c2dcd73f02e2c283f6786b16a489
    type: action
    subtype: brightness_move_down
    discovery_id: 0xb4e3f9fffe8c1f22 action_brightness_move_down
    id: hold
  - platform: device
    domain: mqtt
    device_id: 2b20c2dcd73f02e2c283f6786b16a489
    type: action
    subtype: brightness_move_up
    discovery_id: 0xb4e3f9fffe8c1f22 action_brightness_move_up
    id: hold
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - close
      sequence:
      - action: cover.open_cover
        data: {}
        target:
          entity_id: cover.curtains
    - conditions:
      - condition: trigger
        id:
        - open
      sequence:
      - action: cover.close_cover
        data: {}
        target:
          entity_id: cover.curtains
    - conditions:
      - condition: trigger
        id:
        - hold
      sequence:
      - action: cover.stop_cover
        data: {}
        target:
          entity_id: cover.curtains
  mode: parallel
  max: 10
- id: '1705166594977'
  alias: ⚙️ SpeedTest
  description: Runs SpeedTest every 3 hours
  triggers:
  - hours: /3
    trigger: time_pattern
  - trigger: homeassistant
    event: start
  conditions: []
  actions:
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - action: hassio.addon_start
    metadata: {}
    data:
      addon: 6b87c29e_speedtest_addon
  mode: single
- id: '1707523697172'
  alias: "\U0001F3F0 Turn on Workstation"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.theaterofdreams_sessionstate
    to: Unlocked
  condition:
  - condition: state
    entity_id: switch.workstation
    state: 'off'
  action:
  - action: switch.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: switch.workstation
  mode: single
- id: '1708182186928'
  alias: ⚙️Lovelace Reload
  description: ''
  trigger:
  - platform: event
    event_type: lovelace_updated
    event_data:
      url_path: dashboard-tablet
    context: {}
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 20
      milliseconds: 0
  - action: button.press
    metadata: {}
    data: {}
    target:
      entity_id: button.nexus_7_load_start_url
  mode: single
- id: '1708682275062'
  alias: "\U0001F4F3Notify New Wifi Device"
  description: ''
  trigger:
  - platform: event
    event_type: entity_registry_updated
    event_data:
      action: create
  condition:
  - condition: template
    value_template: '{{ id.split(''.'')[0] == ''device_tracker'' }}'
  - condition: template
    value_template: '{{ id in integration_entities(''tplink_deco'') }}'
  action:
  - alias: Wait a little while to make sure the entity has updated with new state
    wait_template: '{{ states(id) not in [''unknown'', ''unavailable''] }}'
    timeout:
      minutes: 1
  - action: notify.mobile_app_pixel8pro
    data:
      title: '{{ state_attr(id, ''friendly_name'') or id }} connected to WiFi'
      message: "{{ id }} connected to {{ state_attr(id, 'interface') }} {{\n  state_attr(id,
        'connection_type')\n    | regex_replace('band', '')\n    | regex_replace('_',
        '.')\n    | regex_replace('$', 'G')\n}} through {{ state_attr(id, 'deco_device')
        }}"
      data:
        group: wifi-new-device
        clickAction: entityId:{{ id }}
  mode: parallel
  max: 100
  variables:
    id: '{{ trigger.event.data.entity_id }}'
- id: '1708687666073'
  alias: "\U0001F50BBattery Replaced"
  description: Battery Replaced
  trigger:
  - platform: event
    event_type: battery_notes_battery_increased
  condition: []
  action:
  - action: battery_notes.set_battery_replaced
    data:
      device_id: '{{ trigger.event.data.device_id }}'
  mode: queued
- id: '1709064572878'
  alias: "\U0001F3B5Bathroom Speaker - Hook"
  description: ''
  use_blueprint:
    path: EPMatt/media_player.yaml
    input:
      controller_device: 97ca075758792ef9bbde00dd0db2f808
      controller_entity: sensor.ikea_multi_button_action
      controller_model: IKEA E1524/E1810 TRÅDFRI Wireless 5-Button Remote
      media_player: media_player.bathroom_speaker
      volume_steps_short: 10
      volume_steps_long: 20
- id: '1709064643084'
  alias: "\U0001F3B5Bathroom Speaker Button"
  description: ''
  use_blueprint:
    path: EPMatt/ikea_e1524_e1810.yaml
    input:
      integration: Zigbee2MQTT
      controller_device: 97ca075758792ef9bbde00dd0db2f808
      controller_entity: sensor.ikea_multi_button_action
      helper_last_controller_event: input_text.multibutton_last_state
      action_button_left_short: []
      action_button_center_short: []
      action_button_up_short: []
      action_button_down_release: []
      action_button_down_short: []
      action_button_right_double: []
      action_button_left_double: []
      action_button_center_long: []
      action_button_center_double:
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.bathroom_speaker
            state: playing
          sequence:
          - action: media_player.media_pause
            target:
              entity_id: media_player.spotify
            data: {}
        - conditions:
          - condition: state
            entity_id: media_player.bathroom_speaker
            state: paused
          sequence:
          - action: media_player.media_play
            target:
              entity_id: media_player.bathroom_speaker
            data: {}
        default: []
- id: '1710081581692'
  alias: "\U0001F50BBattery Increased Notification"
  description: Battery Increased Notification
  trigger:
  - platform: event
    event_type: battery_notes_battery_increased
  condition:
  - condition: template
    value_template: '{{trigger.event.data.device_name != ''Porch Motion''}}'
  action:
  - action: persistent_notification.create
    data:
      title: '{{ trigger.event.data.device_name }} Battery Increased

        '
      message: 'The device has increased its battery level, you probably want to mark
        it as replaced

        '
  mode: queued
- id: '1710081720910'
  alias: "\U0001F50BBattery Notes - Battery Not Reported"
  description: ''
  use_blueprint:
    path: andrew-codechimp/battery_notes_battery_not_reported.yaml
    input:
      excluded_devices:
      - null
- id: '1715598723988'
  alias: "\U0001F514Doorbell"
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.doorbell_visitor
    from: 'off'
    to: 'on'
    id: doorbell
    trigger: state
  - entity_id:
    - binary_sensor.doorbell_person
    - binary_sensor.porch_motion_occupancy
    from: 'off'
    to: 'on'
    id: person
    trigger: state
  conditions: []
  actions:
  - variables:
      timestamp: '{{ as_timestamp(trigger.to_state.last_changed) | timestamp_custom(''%Y-%m-%d_%H-%M-%S'')
        }}'
      camera_snapshot: '{{ timestamp }}.jpg'
  - action: camera.snapshot
    metadata: {}
    data:
      filename: /config/www/doorbell/{{camera_snapshot}}
      entity_id: camera.doorbell_snapshots_fluent
    alias: Take a Camera Snapshot
  - alias: Take a Camera Snapshot - Cam SNAPSHOT
    action: camera.snapshot
    metadata: {}
    data:
      filename: /config/www/cam_snapshot.jpg
    target:
      entity_id: camera.doorbell_snapshots_fluent
  - parallel:
    - alias: Choose between motion and doorbell press
      choose:
      - conditions:
        - condition: trigger
          id:
          - person
        sequence:
        - action: notify.all_phones
          metadata: {}
          data:
            message: ' '
            title: "Someone's at the front door \U0001F464"
            data:
              ttl: 0
              tag: doorbell
              entity_id: camera.doorbell_fluent
              notification_icon: mdi:doorbell-video
              activationMode: foreground
              channel: Doorbell
              push:
                interruption-level: time-sensitive
                category: camera
              actions:
              - action: URI
                title: Open
                uri: /lovelace/camera
                icon: sfsymbols:camera.viewfinder
              - action: package
                title: Package
                icon: sfsymbols:cube.box
              - action: be_there
                title: Will be there
                icon: sfsymbols:person.crop.circle.badge.checkmark
              image: /local/doorbell/{{camera_snapshot}}
        - action: notify.theaterofdreams
          data:
            message: ' '
            title: "Someone's at the front door \U0001F464"
            data:
              image: /local/doorbell/{{camera_snapshot}}
              tag: doorbell
      - conditions:
        - condition: trigger
          id:
          - doorbell
        sequence:
        - action: notify.all_phones
          metadata: {}
          data:
            message: "Doorbell \U0001F514"
            data:
              ttl: 0
              tag: bell
              entity_id: camera.doorbell_fluent
              notification_icon: mdi:doorbell-video
              activationMode: foreground
              car_ui: true
              channel: Doorbell
              push:
                interruption-level: time-sensitive
                category: camera
              actions:
              - action: URI
                title: Open
                uri: /lovelace/camera
                icon: sfsymbols:camera.viewfinder
              - action: package
                title: Package
                icon: sfsymbols:cube.box
              - action: be_there
                title: Will be there
                icon: sfsymbols:person.crop.circle.badge.checkmark
              image: /local/doorbell/{{camera_snapshot}}
        - delay:
            hours: 0
            minutes: 0
            seconds: 10
            milliseconds: 0
    - if:
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.google_tv
          state: 'off'
      then:
      - action: notify.google_tv
        data:
          message: Someone's at the front door
          title: ''
          data:
            duration: 4
            position: top-right
            fontsize: medium
            color: teal
            transparency: 50%
            image:
              path: /config/www/doorbell/{{camera_snapshot}}
      alias: Send Notification on Google TV if it is on.
    - alias: Send Notification on Google TV Streamer if it is on.
      if:
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.google_tv_streamer
          state: 'off'
      then:
      - action: notify.google_tv_streamer
        data:
          message: Someone's at the front door
          title: ''
          data:
            duration: 4
            position: top-right
            fontsize: medium
            color: teal
            transparency: 50%
            image:
              path: /config/www/doorbell/{{camera_snapshot}}
  - action: google_generative_ai_conversation.generate_content
    data:
      prompt: Very briefly describe what you see in this image from my doorbell camera.
        Your message needs to be short to fit in a phone notification. Don't describe
        buildings or cars.
      image_filename: /config/www/doorbell/{{camera_snapshot}}
    response_variable: generated_content
    enabled: false
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  mode: single
- id: '1716218179726'
  alias: "⚙️\U0001F4F3Update Weight to Google Sheets"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.mi_scale_weight
  condition:
  - condition: numeric_state
    entity_id: sensor.mi_scale_weight
    below: 86
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - action: notify.mobile_app_pixel8pro
    data:
      title: '⚖️ Just weighed in! '
      message: '{{states.sensor.mi_scale_weight.state}} KGs'
      data:
        tag: weight
        actions:
        - action: upload
          title: Upload
        - action: ignore
          title: Ignore
  - alias: Wait for notification action
    wait_for_trigger:
      platform: event
      event_type: mobile_app_notification_action
    continue_on_timeout: true
    timeout:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - alias: Upload reading to google sheets?
    choose:
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == ''upload'' }}'
        alias: If Upload is selected
      sequence:
      - action: google_sheets.append_sheet
        data:
          config_entry: 4bcb43c8e6f2f8104c4f5b04b9e0afa4
          data:
            Basal metabolism: '{{ states.sensor.mi_scale_basal_metabolism.state }}'
            Bmi: '{{ states.sensor.mi_scale_bmi.state }}'
            Body fat: '{{ states.sensor.mi_scale_body_fat.state }}'
            Body score: '{{ states.sensor.mi_scale_body_score.state }}'
            Bone mass: '{{ states.sensor.mi_scale_bone_mass.state }}'
            Lean body mass: '{{ states.sensor.mi_scale_lean_body_mass.state }}'
            Metabolic age: '{{ states.sensor.mi_scale_metabolic_age.state }}'
            Muscle mass: '{{ states.sensor.mi_scale_muscle_mass.state }}'
            Protein: '{{ states.sensor.mi_scale_protein.state }}'
            Visceral fat: '{{ states.sensor.mi_scale_visceral_fat.state }}'
            Water: '{{ states.sensor.mi_scale_water.state }}'
            Weight: '{{ states.sensor.mi_scale_weight.state }}'
      alias: Upload
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == ''ignore'' }}'
      sequence:
      - stop: Selected Don't Upload
      alias: Don't Upload
    default:
    - action: google_sheets.append_sheet
      data:
        config_entry: 4bcb43c8e6f2f8104c4f5b04b9e0afa4
        data:
          Basal metabolism: '{{ states.sensor.mi_scale_basal_metabolism.state }}'
          Bmi: '{{ states.sensor.mi_scale_bmi.state }}'
          Body fat: '{{ states.sensor.mi_scale_body_fat.state }}'
          Body score: '{{ states.sensor.mi_scale_body_score.state }}'
          Bone mass: '{{ states.sensor.mi_scale_bone_mass.state }}'
          Lean body mass: '{{ states.sensor.mi_scale_lean_body_mass.state }}'
          Metabolic age: '{{ states.sensor.mi_scale_metabolic_age.state }}'
          Muscle mass: '{{ states.sensor.mi_scale_muscle_mass.state }}'
          Protein: '{{ states.sensor.mi_scale_protein.state }}'
          Visceral fat: '{{ states.sensor.mi_scale_visceral_fat.state }}'
          Water: '{{ states.sensor.mi_scale_water.state }}'
          Weight: '{{ states.sensor.mi_scale_weight.state }}'
      alias: Uploads by default if not ignored
    - action: notify.mobile_app_pixel8pro
      metadata: {}
      data:
        message: clear_notification
        data:
          tag: weight
  mode: single
- id: '1716839209540'
  alias: ⚙️Notification Actions
  description: This listens to all notification actions and acts based on the action
    chosen.
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
  condition: []
  action:
  - alias: Run action based on notification choice
    choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.action == ''package'' }}'
      sequence:
      - action: select.select_option
        data:
          option: Hi, please leave the package at the door. We will get it later.
        target:
          entity_id: select.doorbell_play_quick_reply_message
      alias: 'Doorbell: Quick Reply | Package'
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.action == ''be_there'' }}'
      sequence:
      - action: select.select_option
        data:
          option: Hi, we will be right there. Please wait a moment
        target:
          entity_id: select.doorbell_play_quick_reply_message
      alias: 'Doorbell: Quick Reply | We will be right there'
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data.action == ''tag_update'' }}'
      sequence:
      - action: shell_command.git_core_update_push
        data: {}
      alias: 'Git : Core version push'
  mode: single
- id: '1718996843066'
  alias: Darragh's Weight Tracking
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.mi_scale_weight
  condition:
  - condition: numeric_state
    entity_id: sensor.mi_scale_weight
    above: 86
  action:
  - action: google_sheets.append_sheet
    data:
      config_entry: 70169feef8a863b382a05cc09db71fb1
      data:
        Basal metabolism: '{{ states.sensor.mi_scale_basal_metabolism.state }}'
        Bmi: '{{ states.sensor.mi_scale_bmi.state }}'
        Body fat: '{{ states.sensor.mi_scale_body_fat.state }}'
        Body score: '{{ states.sensor.mi_scale_body_score.state }}'
        Bone mass: '{{ states.sensor.mi_scale_bone_mass.state }}'
        Lean body mass: '{{ states.sensor.mi_scale_lean_body_mass.state }}'
        Metabolic age: '{{ states.sensor.mi_scale_metabolic_age.state }}'
        Muscle mass: '{{ states.sensor.mi_scale_muscle_mass.state }}'
        Protein: '{{ states.sensor.mi_scale_protein.state }}'
        Visceral fat: '{{ states.sensor.mi_scale_visceral_fat.state }}'
        Water: '{{ states.sensor.mi_scale_water.state }}'
        Weight: '{{ states.sensor.mi_scale_weight.state }}'
    alias: Upload Weight
  - action: notify.mobile_app_op7t
    data:
      title: '⚖️ Just weighed in! '
      message: '{{states.sensor.mi_scale_weight.state}} KGs'
  mode: single
- id: '1720523835406'
  alias: "\U0001F50BBattery Notes - Battery Threshold"
  description: ''
  trigger:
  - platform: event
    event_type: battery_notes_battery_threshold
    event_data:
      battery_low: true
    id: low
    alias: Battery went low
  - platform: event
    event_type: battery_notes_battery_threshold
    event_data:
      battery_low: false
    id: high
    alias: Battery went high
  condition:
  - condition: template
    value_template: '{{ trigger.event.data.device_id not in excluded_devices}}'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - low
      sequence:
      - if:
        - condition: template
          value_template: '{{ low_notification }}'
        then:
        - action: persistent_notification.create
          data:
            title: '{{ trigger.event.data.device_name }} Battery Low

              '
            notification_id: battery_notes_threshold {{ trigger.event.data.device_id
              }}-{{ trigger.event.data.source_entity_id }}
            message: 'The device has a battery level of {{ trigger.event.data.battery_level
              }}% {{ ''\n'' -}} You need {{ trigger.event.data.battery_quantity }}×
              {{ trigger.event.data.battery_type }}

              '
        - action: notify.mobile_app_pixel8pro
          data:
            title: '{{ trigger.event.data.device_name }} Battery Low

              '
            message: 'The device has a battery level of {{ trigger.event.data.battery_level
              }}% {{ ''\n'' -}} You need {{ trigger.event.data.battery_quantity }}×
              {{ trigger.event.data.battery_type }}

              '
            data:
              tag: battery
              notification_icon: mdi:battery-alert
              color: red
      - alias: Run user on low actions
        choose: []
        default: []
    - conditions:
      - condition: trigger
        id:
        - high
      sequence:
      - if:
        - condition: template
          value_template: '{{ low_notification }}'
        then:
        - action: persistent_notification.dismiss
          data:
            notification_id: battery_notes_threshold {{ trigger.event.data.device_id
              }}-{{ trigger.event.data.source_entity_id }}
      - alias: Run user on high actions
        choose: []
        default: []
  variables:
    low_notification: true
    high_notification: true
    excluded_devices:
    - null
  mode: queued
- id: '1720633512902'
  alias: ⚙️Magic Cube
  description: ''
  use_blueprint:
    path: SirGoodenough/Zigbee2MQTT-Xiaomi_Cube_Controller_MQTT_Triggered.yaml
    input:
      topic: zigbee2mqtt/MagicCube
      rotate_cw_face_4:
      - action: media_player.volume_up
        metadata: {}
        data: {}
        target:
          entity_id: media_player.spotify
      rotate_ccw_face_4:
      - action: media_player.volume_down
        target:
          entity_id:
          - media_player.spotify
        data: {}
      doubletap_face_4:
      - action: media_player.media_play_pause
        metadata: {}
        data: {}
        target:
          entity_id: media_player.spotify
      doubletap_face_1:
      - action: light.toggle
        metadata: {}
        data: {}
        target:
          entity_id: light.light
      rotate_cw_face_1:
      - action: light.turn_on
        metadata: {}
        target:
          entity_id: light.light
        data:
          brightness_pct: '{{ relative_degrees | float }}'
      rotate_ccw_face_1:
      - action: light.turn_on
        metadata: {}
        target:
          entity_id: light.light
        data:
          brightness_pct: '{{ relative_degrees | float }}'
- id: '1721641858827'
  alias: "\U0001F50BBattery Notes - Check Battery Low"
  description: ''
  trigger:
  - platform: time
    at: '10:00:00'
  condition: []
  action:
  - action: battery_notes.check_battery_low
    data: {}
  mode: single
- id: '1723386197132'
  alias: "\U0001F3ACPause Google TV when no one is watching"
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.living_room_presence
    to: 'off'
    from: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 10
    trigger: state
  conditions:
  - condition: or
    conditions:
    - condition: state
      entity_id: media_player.google_tv_streamer_cast
      state: playing
  actions:
  - action: script.tv_seek
    metadata: {}
    data:
      seek_amount: '-40'
  - action: media_player.media_pause
    metadata: {}
    data: {}
    target:
      entity_id:
      - media_player.google_tv_streamer_cast
      - media_player.google_tv_streamer
      - media_player.google_tv_streamer_remote
  mode: single
- id: '1723527982327'
  alias: "\U0001F4FANotify downloads on Jellyfin"
  description: Notifies when downloads of a new episode or a movie complete
  triggers:
  - entity_id:
    - sensor.sonarr_queue
    id: sonarr
    enabled: true
    trigger: state
    to:
  - entity_id:
    - sensor.radarr_queue
    id: radarr
    enabled: true
    trigger: state
    to:
  conditions:
  - condition: template
    value_template: '{{ trigger.to_state.state | float < trigger.from_state.state
      | float }}'
  actions:
  - sequence:
    - action: button.press
      metadata: {}
      data: {}
      target:
        entity_id: button.jellyfin_rescan_libraries
    - wait_for_trigger:
      - entity_id:
        - sensor.jellyfin_movies
        trigger: state
      - entity_id:
        - sensor.jellyfin_episodes
        trigger: state
      timeout:
        hours: 0
        minutes: 2
        seconds: 0
        milliseconds: 0
      continue_on_timeout: false
    - choose:
      - conditions:
        - condition: trigger
          id:
          - sonarr
        sequence:
        - action: notify.mobile_app_pixel8pro
          data:
            message: <b>{{ state_attr( "sensor.jellyfin_episodes", "data")[1].title
              }} - {{ state_attr( "sensor.jellyfin_episodes", "data")[1].number }}
              </b> is downloaded and is available on Jellyfin.
            data:
              notification_icon: mdi:television-box
              image: '{{ state_attr( "sensor.jellyfin_episodes", "data")[1].fanart}}'
        - action: notify.mobile_app_pavan_thanujs_ipad_3rd_gen
          data:
            message: '{{ state_attr( "sensor.jellyfin_episodes", "data")[1].title
              }} - {{ state_attr( "sensor.jellyfin_episodes", "data")[1].number }}
              is downloaded and is available on Jellyfin.'
            data:
              notification_icon: mdi:television-box
              image: '{{ state_attr( "sensor.jellyfin_episodes", "data")[1].fanart}}'
      - conditions:
        - condition: trigger
          id:
          - radarr
        sequence:
        - action: notify.mobile_app_pixel8pro
          data:
            message: <b>{{ state_attr( "sensor.jellyfin_movies", "data")[1].title
              }}</b> is downloaded and is available on Jellyfin.
            data:
              notification_icon: mdi:movie-check
              image: '{{ state_attr( "sensor.jellyfin_movies", "data")[1].fanart}}'
        - action: notify.mobile_app_pavan_thanujs_ipad_3rd_gen
          data:
            message: '{{ state_attr( "sensor.jellyfin_movies", "data")[1].title }}
              is downloaded and is available on Jellyfin.'
            data:
              notification_icon: mdi:movie-check
              image: '{{ state_attr( "sensor.jellyfin_movies", "data")[1].fanart}}'
  mode: queued
  max: 10
- id: '1725362683046'
  alias: Launch oral-b app when toothbrush is running
  description: Launch oral-b app when toothbrush is running
  trigger:
  - platform: state
    entity_id:
    - sensor.toothbrush
    to: running
  action:
  - action: notify.mobile_app_pixel8pro
    data:
      message: command_launch_app
      data:
        package_name: com.pg.oralb.oralbapp
  mode: single
- id: '1731189297613'
  alias: ⚙️Doorbell Night Mode
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - light.porch_light
    to: 'on'
    from: 'off'
    id: 'on'
  - trigger: state
    entity_id:
    - light.porch_light
    to: 'off'
    from: 'on'
    id: 'off'
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - 'on'
      sequence:
      - action: select.select_option
        metadata: {}
        data:
          option: color
        target:
          entity_id: select.doorbell_day_night_mode
    - conditions:
      - condition: trigger
        id:
        - 'off'
      sequence:
      - action: select.select_option
        metadata: {}
        data:
          option: auto
        target:
          entity_id: select.doorbell_day_night_mode
  mode: single
