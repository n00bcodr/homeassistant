- id: homeassistant_update_notification
  alias: ⚙️HomeAssistant Update notification
  trigger:
  - platform: state
    entity_id:
    - update.home_assistant_core_update
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - service: notify.mobile_app_10pro
    data:
      message: Home Assistant {{states.update.home_assistant_core_update.attributes.latest_version}}
        is available.
      title: "\U0001F195 Update Available!"
      data:
        notification_icon: mdi:package-up
        subject: "You are running {{states.update.home_assistant_core_update.attributes.installed_version
          }}, the latest\n    version is {{ states.update.home_assistant_core_update.attributes.latest_version
          }}."
        clickAction: /config/dashboard
        icon_url: /local/images/party.png
        sticky: 'true'
  mode: single
- id: spotify_playback
  alias: "\U0001F3B5Spotify Selected Device Force playback"
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.speakers_spotify
  condition: []
  action:
  - service: script.spotify_start
  mode: single
- id: movies_on_plex
  alias: "\U0001F3ACMovies"
  trigger:
  - platform: event
    event_type: tag_scanned
  condition:
  - condition: template
    value_template: '{{ trigger.event.data.tag_id in tags }}'
  action:
  - variables:
      media_content_id: '{{ tags[trigger.event.data.tag_id].media_content_id }}'
      media_content_type: '{{ tags[trigger.event.data.tag_id].media_content_type }}'
      announce_name: '{{ tags[trigger.event.data.tag_id].announce_name }}'
  - choose:
    - conditions:
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.google_tv
          state: Plex
          attribute: source
      sequence:
      - service: media_player.select_source
        target:
          entity_id: media_player.google_tv
        data:
          source: Plex
      - wait_template: '{{ not is_state(''media_player.plex_plex_for_android_tv_google_tv'',
          ''unavailable'') }}'
        timeout: 00:00:10
      - service: media_player.play_media
        target:
          entity_id: media_player.plex_plex_for_android_tv_google_tv
        data:
          media_content_id: '{{ media_content_id }}'
          media_content_type: '{{ media_content_type }}'
    - conditions:
      - condition: state
        entity_id: media_player.google_tv
        state: Plex
        attribute: source
      sequence:
      - service: androidtv.adb_command
        data:
          entity_id: media_player.google_tv
          command: BACK
      - service: media_player.media_stop
        target:
          entity_id: media_player.plex_plex_for_android_tv_google_tv
        data: {}
      - service: media_player.select_source
        target:
          entity_id: media_player.google_tv
        data:
          source: Plex
      - service: media_player.play_media
        target:
          entity_id: media_player.plex_plex_for_android_tv_google_tv
        data:
          media_content_id: '{{ media_content_id }}'
          media_content_type: '{{ media_content_type }}'
    default: []
  mode: parallel
  max_exceeded: silent
  variables:
    media_players:
      device_id: media_player.plex_plex_for_android_tv_google_tv
    tags:
      D7-02-2C-7B:
        media_content_id: '{ "library_name": "Movies", "title": "sontham"}'
        media_content_type: movie
        announce_name: Playing Sonthham
      87-1A-2D-7B:
        media_content_id: '{ "library_name": "Movies", "title": "tamasha"}'
        media_content_type: movie
        announce_name: Playing Tamasha
      37-A5-38-7B:
        media_content_id: '{"library_name": "Movies", "title": "Raanjhanaa"}'
        media_content_type: movie
        announce_name: Playing Raanjhanaa
      87-D2-29-7B:
        media_content_id: '{"library_name": "Movies", "title": "rudraveena"}'
        media_content_type: movie
        announce_name: Playing Rudraveena
      17-EA-2F-7B:
        media_content_id: '{"library_name": "Movies", "title": "vedam"}'
        media_content_type: movie
        announce_name: PLaying Vedam
      37-FA-2A-7B:
        media_content_id: '{ "library_name": "Movies", "title": "96"}'
        media_content_type: movie
        announce_name: Playing 96
      F7-57-2B-7B:
        media_content_id: '{ "playlist_name": "Mayabazar", "shuffle": "1" }'
        media_content_type: playlist
        announce_name: Playing Mayabazaar
      07-5F-2B-7B:
        media_content_id: '{ "playlist_name": "Friends", "shuffle": "1" }'
        media_content_type: playlist
        announce_name: Playing a Friends Episode
      E7-2B-3A-7B:
        media_content_id: '{ "playlist_name": "Batman Trilogy", "shuffle": "1" }'
        media_content_type: playlist
        announce_name: Playing a movie from the Batman Trilogy
      07-CE-2C-7B:
        media_content_id: '{ "playlist_name": "MCU", "shuffle": "1" }'
        media_content_type: playlist
        announce_name: Playing A movie from MCU
      77-FD-37-7B:
        media_content_id: '{ "playlist_name": "DC", "shuffle": "1" }'
        media_content_type: playlist
        announce_name: Playing A movie from DC EU
      17-58-39-7B:
        media_content_id: '{ "playlist_name": "K Vishwanath Movies", "shuffle": "1"}'
        media_content_type: playlist
        announce_name: Playing a movie by K Vishwanath
      47-26-28-7B:
        media_content_id: '{ "playlist_name": "Doctor Who", "shuffle": "1"}'
        media_content_type: playlist
        announce_name: Playing a Doctor Who Episode
      47-F6-36-7B:
        media_content_id: '{ "playlist_name": "John Wick", "shuffle": "1" }'
        media_content_type: playlist
        announce_name: Playing a John Wick Movie
      17-9A-2C-7B:
        media_content_id: '{ "playlist_name": "Star Wars", "shuffle": "1" }'
        media_content_type: playlist
        announce_name: Playing A Star Wars Movie
      27-58-30-7B:
        media_content_id: '{ "playlist_name": "Tarantino", "shuffle": "1" }'
        media_content_type: playlist
        announce_name: Playing a Quentin Tarantino Movie
      77-EA-31-7B:
        media_content_id: '{ "playlist_name": "Agam", "shuffle": "1" }'
        media_content_type: playlist
      37-60-2D-7B:
        media_content_id: '{ "playlist_name": "Matrix", "shuffle": "1" }'
        media_content_type: playlist
        announce_name: Playing a Matrix Movie
      87-F4-2F-7B:
        media_content_id: '{ "library_name": "Movies", "title": "The Pursuit of Happyness"}'
        media_content_type: movie
        announce_name: Playing The Pursuit of Happyness
      F7-85-31-7B:
        media_content_id: '{ "library_name": "Movies", "title": "The Terminal"}'
        media_content_type: movie
        announce_name: Playing The Terminal
  max: 10
- id: music_spotify
  alias: "\U0001F3B5Music Jukebox"
  trigger:
  - platform: event
    event_type: tag_scanned
  condition:
  - condition: template
    value_template: '{{ trigger.event.data.tag_id in tags }}'
  action:
  - variables:
      uri: '{{ tags[trigger.event.data.tag_id].uri }}'
  - service: spotcast.start
    data:
      device_name: '{% if is_state(''media_player.spotify'', ''playing'') %} {{state_attr("media_player.spotify",
        "source")}} {%else%}{{ states(''input_select.speakers_spotify'') }}{%endif%}'
      uri: '{{ uri }}'
      random_song: true
      force_playback: true
      shuffle: true
  mode: restart
  variables:
    tags:
      04-BD-F1-F2-03-68-80:
        uri: spotify:playlist:2OTjSlEoXXnrv6L5ryw3sV?si=a00c6c678ef446c5
      04-C5-F1-F2-03-68-80:
        uri: spotify:playlist:5QTClPorWVvK650livXyEr?si=69a587c913554a73
      04-60-50-0A-22-6F-81:
        uri: spotify:playlist:37i9dQZF1DXaTIN6XNquoW?si=214e0d9999164539
      04-5C-51-0A-22-6F-81:
        uri: spotify:artist:4DHXXUP4qza7DacDKVT23G?si=k7eCA-BRRsaXNTzN0ulD5w
      04-6A-50-0A-22-6F-81:
        uri: spotify:playlist:7zozfVwEIRnlZVhWAjCvh4?si=ef9e4f4789d24d93
      04-73-50-0A-22-6F-81:
        uri: spotify:playlist:4McZ2miIU3GteSwmAAxCrJ?si=F0Vg19zkRTi3g3Y4DyQeMA
      04-77-51-0A-22-6F-81:
        uri: spotify:playlist:2DsO6uDqyONHtelhjUbYix?si=mFYPVbLaTnGI-IAQQiAYa
      04-53-51-0A-22-6F-81:
        uri: spotify:playlist:37i9dQZF1DZ06evO0KEAbC?si=be9f74962433475f
      04-4B-51-0A-22-6F-81:
        uri: spotify:playlist:10N88juIQN9zO7a2FdPpAr?si=puXar2w3QmS-byDzvCr5Mw
      04-3B-51-0A-22-6F-81:
        uri: spotify:playlist:42WlES4C0cTGvjO4aquO7f?si=IlBYKTckTnGxSz7chv6GpQ
      04-43-51-0A-22-6F-81:
        uri: spotify:playlist:113zomdc3VfahCRJ0vuVML?si=434e184ad0914c94
      04-10-51-0A-22-6F-81:
        uri: spotify:playlist:1DRN46YWHKyrZ6CmF1ykJw?si=pKimy_gJQJiBQeVzVXeoCA
      04-18-51-0A-22-6F-81:
        uri: spotify:playlist:7kWWQq0gZHaGmy4NfjnOj5?si=KDeC7IiATtSp3Qsro5njeg
      04-20-51-0A-22-6F-81:
        uri: spotify:playlist:37i9dQZF1DZ06evO1MVYmm?si=ZQxQ1t9zTzKq7lRgvfMP2Q
      04-33-51-0A-22-6F-81:
        uri: spotify:playlist:37i9dQZEVXcWjFlf2abaJx?si=c4588564cf784c02
      04-28-51-0A-22-6F-81:
        uri: spotify:artist:6XyY86QOPPrYVGvF9ch6wz?si=ANPiWS39QSGCWHBBMMW1Ow
      04-50-50-0A-22-6F-81:
        uri: spotify:album:4m2880jivSbbyEGAKfITCa?si=pacROChHSFSDEs5XIYtzTQ
      04-D5-F1-F2-03-68-80:
        uri: spotify:playlist:37i9dQZF1EJMBmrEbDk6wO?si=577fdf28736140e5
      04-CD-F1-F2-03-68-80:
        uri: spotify:playlist:37i9dQZF1EJBSlh2ABgMAk?si=7f1ec20760fc407d
      04-DD-F1-F2-03-68-80:
        uri: spotify:playlist:2XPCqkfm5o7HHjLZ4b4ntS?si=45d4f05eeaf04eff
- id: player_controls
  alias: "\U0001F3B5Player Controls"
  description: ''
  trigger:
  - platform: event
    event_type: tag_scanned
  condition:
  - condition: template
    value_template: '{{ trigger.event.data.tag_id in tags }}'
  action:
  - variables:
      service: '{{ tags[trigger.event.data.tag_id].service }}'
  - service: '{{ service }}'
    target:
      entity_id: media_player.spotify
  mode: restart
  variables:
    tags:
      previous:
        service: media_player.media_previous_track
      play/pause:
        service: media_player.media_play_pause
      next:
        service: media_player.media_next_track
- id: '1636123727125'
  alias: ⚙️Shopping list update
  description: ''
  trigger:
  - platform: state
    entity_id: input_text.shopping_list
  condition: []
  action:
  - service: script.add_shopping_list
    data: {}
  mode: single
- id: '1636974013216'
  alias: ⚙️Lovelace Reload
  description: ''
  trigger:
  - platform: event
    event_type: lovelace_updated
    event_data:
      url_path: lovelace-wallmount
    id: wallmount
  - platform: event
    event_type: lovelace_updated
    event_data:
      url_path:
    id: lovelace
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 20
      milliseconds: 0
  - choose:
    - conditions:
      - condition: trigger
        id: wallmount
      sequence:
      - service: browser_mod.refresh
        data: {}
        target:
          device_id: 534f77b165463f8e653c72beaa4d9399
    default: []
  mode: queued
- id: '1638974963835'
  alias: ⚙️Homeassistant Start/Stop
  description: Runs various automations based on homeassistant starting or stopping.
  trigger:
  - platform: homeassistant
    event: shutdown
    id: shutdown
  - platform: homeassistant
    event: start
    id: start
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: shutdown
      sequence: []
    - conditions:
      - condition: trigger
        id: start
      sequence:
      - service: pyscript.f1driverstandings
        data: {}
      - service: pyscript.f1constructorstandings
        data: {}
    default: []
  mode: single
- id: '1642654396519'
  alias: ⚙️Low battery level detection & notification for all battery sensors
  description: ''
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      actions:
      - service: notify.mobile_app_10pro
        data:
          message: '{{sensors}}'
          data:
            notification_icon: mdi:battery-alert
            color: red
            sticky: 'true'
      threshold: 15
- id: '1654855874344'
  alias: ⚙️Convert Lovelace configuration to yaml
  description: ''
  trigger:
  - platform: event
    event_type: lovelace_updated
    event_data: {}
  condition: []
  action:
  - service: shell_command.lovelace_default_convert
    data: {}
  - service: shell_command.lovelace_wallmount_convert
    data: {}
  mode: single
- id: '1655137751596'
  alias: ⚙️Tag Github with version when core updated
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition:
  - condition: template
    value_template: '{{states.sensor.current_version.state > states.sensor.n00bcodr_homeassistant_ireland_latest_tag.state}}'
  action:
  - service: notify.mobile_app_10pro
    data:
      message: Update tag in GitHub?
      title: Home Assistant Core Updated!
      data:
        notification_icon: mdi:git
        icon_url: /local/images/HA_logo.png
        color: red
        actions:
        - action: tag_update
          title: Update!
        - action: URI
          title: Open Repo
          uri: https://github.com/n00bcodr/homeassistant-ireland
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: tag_update
    continue_on_timeout: false
  - service: shell_command.git_core_update_push
    data: {}
  mode: single
- id: '1655814095516'
  alias: "\U0001F3AC\U0001F3F0Capture Shared URL - Google TV"
  description: Captures the URL shared and updates input_text ccgtv_share_url
  trigger:
  - platform: event
    event_type: mobile_app.share
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data|regex_search(''com.netflix'', ignorecase=TRUE)
          }}'
      sequence:
      - service: input_text.set_value
        data:
          value: '{{ trigger.event.data.text|regex_findall_index(find=''(http.*)'',
            ignorecase=TRUE) }}

            '
        target:
          entity_id: input_text.ccgtv_share_url
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data|regex_search(''com.amazon'', ignorecase=TRUE)
          }}'
      sequence:
      - service: input_text.set_value
        data:
          value: '{{ trigger.event.data.text|regex_findall_index(find=''(http.*)'',
            ignorecase=true)|replace ("&ref_=atv_dp_share_seas&r=web", "") }}

            '
        target:
          entity_id: input_text.ccgtv_share_url
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data|regex_search(''startv.hotstar'', ignorecase=TRUE)
          }}'
      sequence:
      - service: input_text.set_value
        data:
          value: '{{ trigger.event.data.text|regex_findall_index(find=''(http.*)'',
            ignorecase=TRUE) }}

            '
        target:
          entity_id: input_text.ccgtv_share_url
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data|regex_search(''youtu.be'', ignorecase=TRUE)
          }}'
      sequence:
      - service: input_text.set_value
        data:
          value: '{{ trigger.event.data.url|regex_findall_index(find=''(http.*)'',
            ignorecase=TRUE) }}

            '
        target:
          entity_id: input_text.ccgtv_share_url
    default:
    - service: notify.persistent_notification
      data:
        message: '{{ states(''input_text.ccgtv_share_url'') }}

          '
  - service: androidtv.adb_command
    data:
      entity_id: media_player.google_tv
      command: HOME
  - service: script.load_share_url_googletv
    data: {}
  mode: single
- id: '1659935815150'
  alias: ⚙️Update Formula1 Standings after every Race
  description: ''
  trigger:
  - platform: calendar
    event: end
    offset: 0:0:0
    entity_id: calendar.formula1_2022
  condition: []
  action:
  - service: pyscript.f1driverstandings
    data: {}
  - service: pyscript.f1constructorstandings
    data: {}
  mode: single
- id: '1670537821206'
  alias: "\U0001F3F0Den off"
  description: Turns off all things in DEN when I exit.
  trigger:
  - platform: tag
    tag_id: 73a21e41-133b-484e-a5a7-e8a2a7df1085
    enabled: false
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: Den_OFF
  - platform: device
    domain: mqtt
    device_id: 3fd72c6a517024c03b9531259c2d55d9
    type: action
    subtype: long
    discovery_id: 0x00124b001eaa8251 action_long
    id: hold
  - platform: state
    entity_id:
    - input_boolean.den
    from: 'on'
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.den_state
        state: 'off'
      sequence:
      - service: homeassistant.turn_on
        data: {}
        target:
          entity_id:
          - switch.monitor_1_socket_1
          - input_boolean.den_state
      - service: media_player.play_media
        target:
          entity_id: media_player.friday
        data:
          media_content_id: media-source://tts/cloud?message=Welcome+Back+Sir.&language=en-IE&gender=male
          media_content_type: provider
        metadata:
          title: Welcome Back Sir.
          thumbnail: https://brands.home-assistant.io/_/cloud/logo.png
          media_class: app
          children_media_class:
          navigateIds:
          - {}
          - media_content_type: app
            media_content_id: media-source://tts
          - media_content_type: provider
            media_content_id: media-source://tts/cloud?message=Welcome+Back+Sir.&language=en-IE&gender=male
    - conditions:
      - condition: state
        entity_id: input_boolean.den_state
        state: 'on'
      sequence:
      - service: scene.create
        data:
          scene_id: den_as_it_was
          snapshot_entities:
          - switch.monitor_1_socket_1
          - switch.monitor_2_socket_1
          - light.light
          - media_player.spotify
          - light.shapes
          - switch.heater_socket_1
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id:
          - switch.monitor_1_socket_1
          - switch.monitor_2_socket_1
          - input_boolean.den_state
          - light.shapes
          - light.light
          - switch.heater_socket_1
      - service: media_player.media_pause
        data: {}
        target:
          entity_id:
          - media_player.spotify
  mode: single
- id: '1670578939434'
  alias: "\U0001F3F0Button"
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 3fd72c6a517024c03b9531259c2d55d9
    type: action
    subtype: single
    discovery_id: 0x00124b001eaa8251 action_single
    id: click
  - platform: device
    domain: mqtt
    device_id: 3fd72c6a517024c03b9531259c2d55d9
    type: action
    subtype: double
    discovery_id: 0x00124b001eaa8251 action_double
    id: doubleclick
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: click
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: switch.backyard_light_socket_1
            state: 'on'
          sequence:
          - service: homeassistant.turn_off
            data: {}
            target:
              entity_id: switch.backyard_light_socket_1
        - conditions:
          - condition: state
            entity_id: switch.backyard_light_socket_1
            state: 'off'
          sequence:
          - service: homeassistant.turn_on
            data: {}
            target:
              entity_id: switch.backyard_light_socket_1
        default: []
    - conditions:
      - condition: trigger
        id: doubleclick
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: switch.backyard_light_socket_1
            state: 'on'
          sequence:
          - service: homeassistant.turn_off
            target:
              entity_id: switch.backyard_light_socket_1
            data: {}
        - conditions:
          - condition: state
            entity_id: switch.backyard_light_socket_1
            state: 'off'
          sequence:
          - service: homeassistant.turn_on
            data: {}
            target:
              entity_id: switch.backyard_light_socket_1
        default: []
    default: []
  mode: single
- id: '1670800244266'
  alias: "\U0001F3F0 Bed Routine"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.in_bed
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: or
    conditions:
    - condition: device
      type: is_on
      device_id: e7927153f5bb66e41b55bdb929403d8a
      entity_id: light.light
      domain: light
    - condition: device
      type: is_on
      device_id: 6d1dbea0f4601c12e1d4c9814c77d0f2
      entity_id: light.main_door_light
      domain: light
    - condition: device
      type: is_on
      device_id: 22d3b83188e1ace9ced42e13d76ce319
      entity_id: light.shapes
      domain: light
  action:
  - service: script.new_script
    data: {}
  mode: single
- id: '1670844577464'
  alias: ⚡Full charge notification
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.10pro_is_charging
    to: 'on'
    id: 10pro
  - platform: state
    entity_id:
    - sensor.pavan_thanujs_ipad_battery_state
    to: 'on'
    id: ipad
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: sensor.10pro_battery_level
        state: '100'
      - condition: trigger
        id: 10pro
      sequence:
      - service: notify.mobile_app_10pro
        data:
          message: ⚡Charging Complete⚡
          data:
            notification_icon: mdi:battery-charging-high
            color: red
    - conditions:
      - condition: state
        entity_id: sensor.pavan_thanujs_ipad_battery_level
        state: '100'
      - condition: trigger
        id: ipad
      sequence:
      - service: notify.mobile_app_10pro
        data:
          message: ⚡iPad Charging Complete⚡
          data:
            notification_icon: mdi:battery-charging-high
            color: red
  mode: single
- id: '1671021630739'
  alias: "\U0001F3F0[Z2M] Generic Ikea Remote Control"
  description: ''
  use_blueprint:
    path: pavax/z2m-ikea-remote-controls.yaml
    input:
      remote: sensor.ikea_on_off_action
      on_button_short:
      - service: homeassistant.turn_on
        data: {}
        target:
          entity_id: light.light
      off_button_short:
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id: light.light
- id: '1671637864679'
  alias: "\U0001F3F0Den as it was"
  description: Returns Den State to back what it was when Den OFF was triggered.
  trigger:
  - platform: state
    entity_id:
    - input_boolean.den_state
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - input_boolean.den
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: homeassistant.turn_on
    target:
      entity_id: input_boolean.den_state
    data: {}
  - service: scene.turn_on
    data: {}
    entity_id: scene.den_as_it_was
  mode: single
- id: '1671638012875'
  alias: "\U0001F3F0Send notification if no motion in Den."
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.den_motion_occupancy
    to: 'off'
    for: 00:04:00
    from: 'on'
  condition:
  - condition: and
    conditions:
    - condition: time
      after: 09:00:00
      before: '21:00:00'
      enabled: false
    - condition: or
      conditions:
      - condition: state
        entity_id: switch.monitor_1_socket_1
        state: 'on'
    - condition: state
      entity_id: binary_sensor.chair_occupancy
      state: 'off'
      enabled: true
      for:
        hours: 0
        minutes: 5
        seconds: 0
  action:
  - service: notify.mobile_app_10pro
    data:
      title: Are you there?
      message: 'No motion detected in Den in the last 5 minutes. '
      data:
        actions:
        - action: Den_OFF
          title: 'NO'
        notification_icon: mdi:motion-sensor-off
        tag: den_off
        icon_url: /local/images/ninja.png
  mode: single
- id: '1671638172636'
  alias: "\U0001F3F0Replicate Monitor State"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.monitor_1_socket_1
    id: 'on'
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - switch.monitor_1_socket_1
    id: 'off'
    from: 'on'
    to: 'off'
  condition:
  - condition: time
    before: 00:00:00
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    after: 00:00:00
    enabled: false
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.monitor_2_socket_1
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.monitor_2_socket_1
    default: []
  mode: single
- id: '1671638403506'
  alias: "\U0001F3F0Desk Presence Detection"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.vibration_vibration
    from: 'off'
    to: 'on'
  condition:
  - condition: or
    conditions:
    - condition: time
      after: 08:00:00
      before: '10:00:00'
    - condition: state
      entity_id: switch.monitor_1_socket_1
      state: 'off'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.den_state
        state: 'off'
      sequence:
      - service: automation.trigger
        target:
          entity_id: automation.den_as_it_was
        data: {}
    - conditions:
      - condition: state
        entity_id: input_boolean.den_state
        state: 'on'
      sequence:
      - service: homeassistant.turn_on
        data: {}
        target:
          entity_id: switch.monitor_1_socket_1
    default: []
  mode: single
- id: '1672227190927'
  alias: "\U0001F3F0Clear Notification when motion is detected"
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.den_motion_occupancy
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: notify.mobile_app_10pro
    data:
      data:
        tag: den_off
        sticky: 'true'
      message: clear_notification
  mode: single
- id: '1672388963171'
  alias: "\U0001F3F0\U0001F3B5Controller - TRÅDFRI Wireless 5-Button Remote"
  description: ''
  use_blueprint:
    path: EPMatt/ikea_e1524_e1810.yaml
    input:
      integration: Zigbee2MQTT
      controller_device: 97ca075758792ef9bbde00dd0db2f808
      controller_entity: sensor.ikea_multi_button_action
      helper_last_controller_event: input_text.multibutton_last_state
      action_button_left_short: []
      action_button_center_short: []
      action_button_up_short: []
      action_button_down_release: []
      action_button_down_short: []
      action_button_right_double: []
      action_button_left_double: []
      action_button_center_long:
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.spotify
            state: playing
          sequence:
          - service: media_player.media_pause
            target:
              entity_id: media_player.spotify
            data: {}
        - conditions:
          - condition: state
            entity_id: media_player.spotify
            state: paused
          sequence:
          - service: media_player.media_play
            target:
              entity_id: media_player.spotify
            data: {}
        - conditions:
          - condition: state
            entity_id: media_player.spotify
            state: idle
          sequence:
          - service: spotcast.start
            data:
              device_name: '{% if is_state(''media_player.spotify'', ''playing'')
                %} {{state_attr("media_player.spotify", "source")}} {%else%}{{ states(''input_select.speakers_spotify'')
                }}{%endif%}'
              force_playback: true
              random_song: true
              shuffle: true
        default: []
      action_button_center_double:
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.spotify
            state: playing
          sequence:
          - service: media_player.media_pause
            target:
              entity_id: media_player.spotify
            data: {}
        - conditions:
          - condition: state
            entity_id: media_player.spotify
            state: paused
          sequence:
          - service: media_player.media_play
            target:
              entity_id: media_player.spotify
            data: {}
        - conditions:
          - condition: state
            entity_id: media_player.spotify
            state: idle
          sequence:
          - service: spotcast.start
            data:
              device_name: '{% if is_state(''media_player.spotify'', ''playing'')
                %} {{state_attr("media_player.spotify", "source")}} {%else%}{{ states(''input_select.speakers_spotify'')
                }}{%endif%}'
              force_playback: true
              random_song: true
              shuffle: true
        default: []
- id: '1672388988293'
  alias: "\U0001F3F0\U0001F3B5Hook - Media Player"
  description: ''
  use_blueprint:
    path: EPMatt/media_player.yaml
    input:
      controller_device: 97ca075758792ef9bbde00dd0db2f808
      controller_entity: sensor.ikea_multi_button_action
      controller_model: IKEA E1524/E1810 TRÅDFRI Wireless 5-Button Remote
      media_player: media_player.spotify
      volume_steps_short: 10
      volume_steps_long: 20
- id: '1672404137791'
  alias: "\U0001F3F0 Bed IFTTT"
  description: ''
  trigger:
    platform: event
    event_type: ifttt_webhook_received
    event_data:
      action: call_service
  action:
    service_template: '{{ trigger.event.data.service }}'
    data_template:
      entity_id: '{{ trigger.event.data.entity_id }}'
- id: '1673376314894'
  alias: "\U0001F3F0Turn off light when phone is wireless charging"
  description: ''
  trigger:
  - type: plugged_in
    platform: device
    device_id: 9d22afdfaf70765bd616973f27d2b9e1
    entity_id: binary_sensor.10pro_is_charging
    domain: binary_sensor
  condition:
  - condition: state
    entity_id: sensor.10pro_charger_type
    state: wireless
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.light
  mode: single
- id: '1673799717377'
  alias: "\U0001F3F0Diffuser Scene"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.diffuser
  condition:
  - condition: template
    value_template: '{{ trigger.to_state != trigger.from_state }}'
  action:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: '{{ states(''input_select.diffuser'') }}'
  mode: single
- id: '1674758476057'
  alias: "\U0001F4A1Living Room Light Motion"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.living_room_motion_occupancy
    to: 'on'
    from: 'off'
  condition:
  - condition: sun
    before: sunrise
    after: sunset
  - condition: state
    entity_id: light.chandelier
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.living_room_light
    below: 10
  action:
  - service: homeassistant.turn_on
    data: {}
    target:
      entity_id: light.living_room_lamp
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.living_room_motion_occupancy
      from: 'on'
      to: 'off'
    continue_on_timeout: false
  - delay:
      hours: 0
      minutes: 3
      seconds: 0
      milliseconds: 0
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id: light.living_room_lamp
  mode: single
- id: '1675093554282'
  alias: "\U0001F9FA Wash Cycle"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.washing_machine_state
    from: Spinning
    to: Idle
    id: wash
  - platform: state
    entity_id:
    - sensor.washing_machine_state
    from: Drying
    to: Idle
    id: dry
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: wash
      sequence:
      - wait_for_trigger:
        - platform: state
          entity_id:
          - sensor.washing_machine_state
          to: Cycle Complete
        continue_on_timeout: false
      - service: notify.all_phones
        data:
          message: at {{ as_timestamp(now()) | timestamp_custom('%-I:%M:%S %p')}}
          data:
            notification_icon: mdi:washing-machine
            icon_url: /local/images/washing_machine.png
            sticky: 'true'
          title: "\U0001F9FA Wash Cycle Complete"
    - conditions:
      - condition: trigger
        id: dry
      sequence:
      - wait_for_trigger:
        - platform: state
          entity_id:
          - sensor.washing_machine_state
          to: Cycle Complete
        continue_on_timeout: false
      - service: notify.all_phones
        data:
          message: at {{ as_timestamp(now()) | timestamp_custom('%-I:%M:%S %p')}}
          data:
            notification_icon: mdi:washing-machine
            icon_url: /local/images/washing_machine.png
            sticky: 'true'
          title: "\U0001F9FA Dry Cycle Complete"
  mode: single
- id: '1675437001659'
  alias: "\U0001F6AEBin Pickup Notification"
  description: ''
  trigger:
  - platform: time
    at: '11:00:00'
    id: morning
  - platform: time
    at: '20:00:00'
    id: night
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{(state_attr("sensor.black_bin", "next_collection")) ==
          2 }}'
      sequence:
      - service: notify.all_phones
        data:
          data:
            notification_icon: mdi:trash-can-outline
            icon_url: /local/images/black_bin.png
          message: Pickup is in two days on {{ states.sensor.black_bin.state}}
          title: Black Bin
    - conditions:
      - condition: template
        value_template: '{{(state_attr("sensor.black_bin", "next_collection")) ==
          1 }}'
      sequence:
      - service: notify.all_phones
        data:
          data:
            notification_icon: mdi:trash-can-outline
            icon_url: /local/images/black_bin.png
          message: Pickup is tomorrow on {{ states.sensor.black_bin.state}}
          title: Black Bin
    - conditions:
      - condition: template
        value_template: '{{(state_attr("sensor.blue_bin", "next_collection")) == 2
          }}'
      sequence:
      - service: notify.all_phones
        data:
          data:
            notification_icon: mdi:trash-can
            icon_url: /local/images/blue_bin.png
          message: Pickup is in two days on {{ states.sensor.blue_bin.state}}
          title: Blue Bin
    - conditions:
      - condition: template
        value_template: '{{(state_attr("sensor.blue_bin", "next_collection")) == 1
          }}'
      sequence:
      - service: notify.all_phones
        data:
          data:
            notification_icon: mdi:trash-can
            icon_url: /local/images/blue_bin.png
          message: Pickup is tomorrow on {{ states.sensor.blue_bin.state}}
          title: Blue Bin
  mode: single
- id: '1677184691191'
  alias: "\U0001F525Start/stop Timer when heating is turned on/off"
  description: ''
  trigger:
  - platform: device
    type: turned_on
    device_id: 3d06ea4b9a5706c224b9bab4c5e5d012
    entity_id: switch.heating
    domain: switch
    for:
      hours: 0
      minutes: 0
      seconds: 0
    id: 'on'
  - platform: device
    type: turned_off
    device_id: 3d06ea4b9a5706c224b9bab4c5e5d012
    entity_id: switch.heating
    domain: switch
    id: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - service: timer.start
        data:
          duration: 01:30:00
        target:
          entity_id: timer.heating
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.heating
  mode: single
- id: '1677263065986'
  alias: "\U0001F525Turn off heating after X minutes"
  description: ''
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.heating
  condition:
  - condition: state
    entity_id: switch.heating
    state: 'on'
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.heating
    enabled: true
  - service: notify.all_phones
    data:
      message: at  {{ as_timestamp(now()) | timestamp_custom('%-I:%M %p')}}
      title: "\U0001F525 Turned off"
      data:
        notification_icon: mdi:fire
  mode: single
