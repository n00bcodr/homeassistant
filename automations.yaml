- id: homeassistant_update_notification
  alias: ⚙️HomeAssistant Update notification
  trigger:
  - platform: state
    entity_id:
    - update.home_assistant_core_update
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - service: notify.mobile_app_10pro
    data:
      message: Home Assistant {{states.update.home_assistant_core_update.attributes.latest_version}}
        is available.
      title: "\U0001F195 Update Available!"
      data:
        notification_icon: mdi:package-up
        subject: "You are running {{states.update.home_assistant_core_update.attributes.installed_version
          }}, the latest\n    version is {{ states.update.home_assistant_core_update.attributes.latest_version
          }}."
        clickAction: /config/dashboard
        icon_url: /local/images/party.png
        sticky: 'true'
  mode: single
- id: spotify_playback
  alias: "\U0001F3B5Spotify Selected Device Force playback"
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.speakers_spotify
  condition: []
  action:
  - service: script.spotify_start
  mode: single
- id: movies_on_plex
  alias: "\U0001F3ACMovies"
  trigger:
  - platform: event
    event_type: tag_scanned
  condition:
  - condition: template
    value_template: '{{ trigger.event.data.tag_id in tags }}'
  action:
  - variables:
      media_content_id: '{{ tags[trigger.event.data.tag_id].media_content_id }}'
      media_content_type: '{{ tags[trigger.event.data.tag_id].media_content_type }}'
  - choose:
    - conditions:
      - condition: not
        conditions:
        - condition: state
          entity_id: media_player.google_tv
          state: Plex
          attribute: source
      sequence:
      - service: media_player.select_source
        target:
          entity_id: media_player.google_tv
        data:
          source: Plex
      - wait_template: '{{ not is_state(''media_player.plex_plex_for_android_tv_google_tv'',
          ''unavailable'') }}'
        timeout: 00:00:10
      - service: media_player.play_media
        target:
          entity_id: media_player.plex_plex_for_android_tv_google_tv
        data:
          media_content_id: '{{ media_content_id }}'
          media_content_type: '{{ media_content_type }}'
    - conditions:
      - condition: state
        entity_id: media_player.google_tv
        state: Plex
        attribute: source
      sequence:
      - service: media_player.play_media
        target:
          entity_id: media_player.plex_plex_for_android_tv_google_tv
        data:
          media_content_id: '{{ media_content_id }}'
          media_content_type: '{{ media_content_type }}'
    default: []
    enabled: true
  - service: media_player.play_media
    target:
      entity_id: media_player.plex_plex_for_android_tv_google_tv
    data:
      media_content_id: '{{ media_content_id }}'
      media_content_type: '{{ media_content_type }}'
  mode: restart
  variables:
    media_players:
      device_id: media_player.plex_plex_for_android_tv_google_tv
    tags:
      D7-02-2C-7B:
        media_content_id: '{ "library_name": "Movies", "title": "sontham"}'
        media_content_type: movie
      87-1A-2D-7B:
        media_content_id: '{ "library_name": "Movies", "title": "tamasha"}'
        media_content_type: movie
      37-A5-38-7B:
        media_content_id: '{"library_name": "Movies", "title": "Raanjhanaa"}'
        media_content_type: movie
      87-D2-29-7B:
        media_content_id: '{"library_name": "Movies", "title": "rudraveena"}'
        media_content_type: movie
      17-EA-2F-7B:
        media_content_id: '{"library_name": "Movies", "title": "vedam"}'
        media_content_type: movie
      37-FA-2A-7B:
        media_content_id: '{ "library_name": "Movies", "title": "96"}'
        media_content_type: movie
      F7-57-2B-7B:
        media_content_id: '{ "playlist_name": "Mayabazar", "shuffle": "1" }'
        media_content_type: playlist
      07-5F-2B-7B:
        media_content_id: '{ "playlist_name": "Friends", "shuffle": "1" }'
        media_content_type: playlist
      E7-2B-3A-7B:
        media_content_id: '{ "playlist_name": "Batman Trilogy", "shuffle": "1" }'
        media_content_type: playlist
      07-CE-2C-7B:
        media_content_id: '{ "playlist_name": "MCU", "shuffle": "1" }'
        media_content_type: playlist
      77-FD-37-7B:
        media_content_id: '{ "playlist_name": "DC", "shuffle": "1" }'
        media_content_type: playlist
      17-58-39-7B:
        media_content_id: '{ "playlist_name": "K Vishwanath Movies", "shuffle": "1"}'
        media_content_type: playlist
      47-26-28-7B:
        media_content_id: '{ "playlist_name": "Doctor Who", "shuffle": "1"}'
        media_content_type: playlist
      47-F6-36-7B:
        media_content_id: '{ "playlist_name": "John Wick", "shuffle": "1" }'
        media_content_type: playlist
      17-9A-2C-7B:
        media_content_id: '{ "playlist_name": "Star Wars", "shuffle": "1" }'
        media_content_type: playlist
      27-58-30-7B:
        media_content_id: '{ "playlist_name": "Tarantino", "shuffle": "1" }'
        media_content_type: playlist
      77-EA-31-7B:
        media_content_id: '{ "playlist_name": "Agam", "shuffle": "1" }'
        media_content_type: playlist
      37-60-2D-7B:
        media_content_id: '{ "playlist_name": "Matrix", "shuffle": "1" }'
        media_content_type: playlist
      87-F4-2F-7B:
        media_content_id: '{ "library_name": "Movies", "title": "The Pursuit of Happyness"}'
        media_content_type: movie
      F7-85-31-7B:
        media_content_id: '{ "library_name": "Movies", "title": "The Terminal"}'
        media_content_type: movie
- id: music_spotify
  alias: "\U0001F3B5Music Jukebox"
  trigger:
  - platform: event
    event_type: tag_scanned
  condition:
  - condition: template
    value_template: '{{ trigger.event.data.tag_id in tags }}'
  action:
  - variables:
      uri: '{{ tags[trigger.event.data.tag_id].uri }}'
  - service: spotcast.start
    data:
      device_name: '{% if is_state(''media_player.spotify'', ''playing'') %} {{state_attr("media_player.spotify",
        "source")}} {%else%}{{ states(''input_select.speakers_spotify'') }}{%endif%}'
      uri: '{{ uri }}'
      random_song: true
      force_playback: true
      shuffle: true
  mode: restart
  variables:
    tags:
      04-BD-F1-F2-03-68-80:
        uri: spotify:playlist:2OTjSlEoXXnrv6L5ryw3sV?si=a00c6c678ef446c5
      04-C5-F1-F2-03-68-80:
        uri: spotify:playlist:5QTClPorWVvK650livXyEr?si=69a587c913554a73
      04-60-50-0A-22-6F-81:
        uri: spotify:playlist:37i9dQZF1DZ06evO1SVXaM
      04-5C-51-0A-22-6F-81:
        uri: spotify:artist:4DHXXUP4qza7DacDKVT23G?si=k7eCA-BRRsaXNTzN0ulD5w
      04-6A-50-0A-22-6F-81:
        uri: spotify:playlist:7zozfVwEIRnlZVhWAjCvh4?si=ef9e4f4789d24d93
      04-73-50-0A-22-6F-81:
        uri: spotify:playlist:4McZ2miIU3GteSwmAAxCrJ?si=F0Vg19zkRTi3g3Y4DyQeMA
      04-77-51-0A-22-6F-81:
        uri: spotify:playlist:2DsO6uDqyONHtelhjUbYix?si=mFYPVbLaTnGI-IAQQiAYa
      04-53-51-0A-22-6F-81:
        uri: spotify:playlist:37i9dQZF1DZ06evO0KEAbC?si=be9f74962433475f
      04-4B-51-0A-22-6F-81:
        uri: spotify:playlist:10N88juIQN9zO7a2FdPpAr?si=puXar2w3QmS-byDzvCr5Mw
      04-3B-51-0A-22-6F-81:
        uri: spotify:playlist:42WlES4C0cTGvjO4aquO7f?si=IlBYKTckTnGxSz7chv6GpQ
      04-43-51-0A-22-6F-81:
        uri: spotify:playlist:113zomdc3VfahCRJ0vuVML?si=434e184ad0914c94
      04-10-51-0A-22-6F-81:
        uri: spotify:playlist:1DRN46YWHKyrZ6CmF1ykJw?si=pKimy_gJQJiBQeVzVXeoCA
      04-18-51-0A-22-6F-81:
        uri: spotify:playlist:7kWWQq0gZHaGmy4NfjnOj5?si=KDeC7IiATtSp3Qsro5njeg
      04-20-51-0A-22-6F-81:
        uri: spotify:playlist:37i9dQZF1DZ06evO1MVYmm?si=ZQxQ1t9zTzKq7lRgvfMP2Q
      04-33-51-0A-22-6F-81:
        uri: spotify:playlist:37i9dQZEVXcWjFlf2abaJx?si=c4588564cf784c02
      04-28-51-0A-22-6F-81:
        uri: spotify:artist:6XyY86QOPPrYVGvF9ch6wz?si=ANPiWS39QSGCWHBBMMW1Ow
      04-50-50-0A-22-6F-81:
        uri: spotify:album:4m2880jivSbbyEGAKfITCa?si=pacROChHSFSDEs5XIYtzTQ
      04-D5-F1-F2-03-68-80:
        uri: spotify:playlist:37i9dQZF1EJMBmrEbDk6wO?si=577fdf28736140e5
      04-CD-F1-F2-03-68-80:
        uri: spotify:playlist:37i9dQZF1EJBSlh2ABgMAk?si=7f1ec20760fc407d
      04-DD-F1-F2-03-68-80:
        uri: spotify:playlist:2XPCqkfm5o7HHjLZ4b4ntS?si=45d4f05eeaf04eff
      04-F5-F1-F2-03-68-80:
        uri: spotify:playlist:37i9dQZF1DZ06evO3vNCZb
- id: player_controls
  alias: "\U0001F3B5Player Controls"
  description: ''
  trigger:
  - platform: event
    event_type: tag_scanned
  condition:
  - condition: template
    value_template: '{{ trigger.event.data.tag_id in tags }}'
  action:
  - variables:
      service: '{{ tags[trigger.event.data.tag_id].service }}'
  - service: '{{ service }}'
    target:
      entity_id: media_player.spotify
  mode: restart
  variables:
    tags:
      previous:
        service: media_player.media_previous_track
      play/pause:
        service: media_player.media_play_pause
      next:
        service: media_player.media_next_track
- id: '1636123727125'
  alias: ⚙️Shopping list update
  description: ''
  trigger:
  - platform: state
    entity_id: input_text.shopping_list
  condition: []
  action:
  - service: script.add_shopping_list
    data: {}
  mode: single
- id: '1638974963835'
  alias: ⚙️Homeassistant Start/Stop
  description: Runs various automations based on homeassistant starting or stopping.
  trigger:
  - platform: homeassistant
    event: shutdown
    id: shutdown
  - platform: homeassistant
    event: start
    id: start
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: shutdown
      sequence: []
    - conditions:
      - condition: trigger
        id: start
      sequence:
      - service: pyscript.f1driverstandings
        data: {}
      - service: pyscript.f1constructorstandings
        data: {}
    default: []
  mode: single
- id: '1642654396519'
  alias: ⚙️Low battery level detection & notification for all battery sensors
  description: ''
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      actions:
      - service: notify.mobile_app_10pro
        data:
          message: '{{sensors}}'
          data:
            notification_icon: mdi:battery-alert
            color: red
            sticky: 'true'
      threshold: 15
      exclude:
        entity_id:
        - sensor.hilary_s_phone_battery_level
        - sensor.7t_battery_level
        - sensor.contact_sensor_battery
- id: '1654855874344'
  alias: ⚙️Convert Lovelace configuration to yaml
  description: ''
  trigger:
  - platform: event
    event_type: lovelace_updated
    event_data: {}
  condition: []
  action:
  - service: shell_command.lovelace_default_convert
    data: {}
  mode: single
- id: '1655137751596'
  alias: ⚙️Tag Github with version when core updated
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition:
  - condition: template
    value_template: '{{states.sensor.current_version.state > states.sensor.n00bcodr_homeassistant_ireland_latest_tag.state}}'
  action:
  - service: notify.mobile_app_10pro
    data:
      message: Update tag in GitHub?
      title: Home Assistant Core Updated!
      data:
        notification_icon: mdi:git
        icon_url: /local/images/HA_logo.png
        color: red
        actions:
        - action: tag_update
          title: Update!
        - action: URI
          title: Open Repo
          uri: https://github.com/n00bcodr/homeassistant-ireland
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: tag_update
    continue_on_timeout: false
  - service: shell_command.git_core_update_push
    data: {}
  mode: single
- id: '1655814095516'
  alias: "\U0001F3AC\U0001F3F0Capture Shared URL - Google TV"
  description: Captures the URL shared and updates input_text ccgtv_share_url
  trigger:
  - platform: event
    event_type: mobile_app.share
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data|regex_search(''com.netflix'', ignorecase=TRUE)
          }}'
      sequence:
      - service: input_text.set_value
        data:
          value: '{{ trigger.event.data.text|regex_findall_index(find=''(http.*)'',
            ignorecase=TRUE) }}

            '
        target:
          entity_id: input_text.ccgtv_share_url
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data|regex_search(''com.amazon'', ignorecase=TRUE)
          }}'
      sequence:
      - service: input_text.set_value
        data:
          value: '{{ trigger.event.data.text|regex_findall_index(find=''(http.*)'',
            ignorecase=true)|replace ("&ref_=atv_dp_share_seas&r=web", "") }}

            '
        target:
          entity_id: input_text.ccgtv_share_url
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data|regex_search(''startv.hotstar'', ignorecase=TRUE)
          }}'
      sequence:
      - service: input_text.set_value
        data:
          value: '{{ trigger.event.data.text|regex_findall_index(find=''(http.*)'',
            ignorecase=TRUE) }}

            '
        target:
          entity_id: input_text.ccgtv_share_url
    - conditions:
      - condition: template
        value_template: '{{ trigger.event.data|regex_search(''youtu.be'', ignorecase=TRUE)
          }}'
      sequence:
      - service: input_text.set_value
        data:
          value: '{{ trigger.event.data.url|regex_findall_index(find=''(http.*)'',
            ignorecase=TRUE) }}

            '
        target:
          entity_id: input_text.ccgtv_share_url
    default:
    - service: notify.persistent_notification
      data:
        message: '{{ states(''input_text.ccgtv_share_url'') }}'
  - service: androidtv.adb_command
    data:
      entity_id: media_player.google_tv
      command: HOME
  - service: script.load_share_url_googletv
    data: {}
  mode: single
- id: '1659935815150'
  alias: ⚙️Update Formula1 Standings after every Race
  description: ''
  trigger:
  - platform: calendar
    event: end
    offset: 0:0:0
    entity_id: calendar.formula1_2022
  condition: []
  action:
  - service: pyscript.f1driverstandings
    data: {}
  - service: pyscript.f1constructorstandings
    data: {}
  mode: single
- id: '1670537821206'
  alias: "\U0001F3F0Den off"
  description: Turns off all things in DEN when I exit.
  trigger:
  - platform: tag
    tag_id: 5f5bedc8-6a15-486a-ab22-49ce237dde40
    enabled: true
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: Den_OFF
  - platform: state
    entity_id:
    - input_boolean.den
    from: 'on'
    to: 'off'
  - platform: device
    domain: mqtt
    device_id: 3fd72c6a517024c03b9531259c2d55d9
    type: action
    subtype: long
    discovery_id: 0x00124b001eaa8251 action_long
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{(states.media_player.spotify.attributes.source) != ''Theater
          of Dreams''}}'
      sequence:
      - service: scene.create
        data:
          scene_id: den_as_it_was
          snapshot_entities:
          - switch.workstation
          - light.light
          - media_player.spotify
          - light.shapes
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id:
          - switch.workstation
          - light.shapes
          - light.light
      - service: media_player.media_pause
        data: {}
        target:
          entity_id:
          - media_player.spotify
    - conditions:
      - condition: template
        value_template: '{{(states.media_player.spotify.attributes.source) == ''Theater
          of Dreams''}}'
      sequence:
      - service: scene.create
        data:
          scene_id: den_as_it_was
          snapshot_entities:
          - switch.workstation
          - light.light
          - light.shapes
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id:
          - switch.workstation
          - light.shapes
          - light.light
  mode: single
- id: '1670578939434'
  alias: "\U0001F3F0Button"
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 3fd72c6a517024c03b9531259c2d55d9
    type: action
    subtype: single
    discovery_id: 0x00124b001eaa8251 action_single
    id: click
  - platform: device
    domain: mqtt
    device_id: 3fd72c6a517024c03b9531259c2d55d9
    type: action
    subtype: double
    discovery_id: 0x00124b001eaa8251 action_double
    id: doubleclick
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: click
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: light.light
            state: 'on'
          sequence:
          - service: homeassistant.turn_off
            data: {}
            target:
              entity_id: light.light
        - conditions:
          - condition: state
            entity_id: light.light
            state: 'off'
          sequence:
          - service: light.turn_on
            data:
              color_temp: 153
              brightness_pct: 100
            target:
              entity_id: light.light
        default: []
    - conditions:
      - condition: trigger
        id: doubleclick
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: light.light
            state: 'on'
          sequence:
          - service: homeassistant.turn_off
            target:
              entity_id: light.light
            data: {}
        - conditions:
          - condition: state
            entity_id: light.light
            state: 'off'
          sequence:
          - service: light.turn_on
            data:
              color_temp: 500
              brightness_pct: 100
            target:
              entity_id: light.light
        default: []
    default: []
  mode: single
- id: '1670800244266'
  alias: "\U0001F3F0 Bed Routine"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.in_bed
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: or
    conditions:
    - condition: device
      type: is_on
      device_id: e7927153f5bb66e41b55bdb929403d8a
      entity_id: light.light
      domain: light
    - condition: device
      type: is_on
      device_id: 6d1dbea0f4601c12e1d4c9814c77d0f2
      entity_id: light.entrance_light
      domain: light
    - condition: device
      type: is_on
      device_id: 22d3b83188e1ace9ced42e13d76ce319
      entity_id: light.shapes
      domain: light
  action:
  - service: script.new_script
    data: {}
  mode: single
- id: '1670844577464'
  alias: ⚡Full charge notification
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.10pro_is_charging
    to: 'on'
    id: 10pro
  - platform: state
    entity_id:
    - sensor.pavan_thanujs_ipad_battery_state
    to: 'on'
    id: ipad
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: sensor.10pro_battery_level
        state: '100'
      - condition: trigger
        id: 10pro
      sequence:
      - service: notify.mobile_app_10pro
        data:
          message: ⚡Charging Complete⚡
          data:
            notification_icon: mdi:battery-charging-high
            color: red
    - conditions:
      - condition: state
        entity_id: sensor.pavan_thanujs_ipad_battery_level
        state: '100'
      - condition: trigger
        id: ipad
      sequence:
      - service: notify.mobile_app_10pro
        data:
          message: ⚡iPad Charging Complete⚡
          data:
            notification_icon: mdi:battery-charging-high
            color: red
  mode: single
- id: '1671021630739'
  alias: "\U0001F3F0Curtains - Ikea Remote"
  description: ''
  use_blueprint:
    path: pavax/z2m-ikea-remote-controls.yaml
    input:
      remote: sensor.ikea_on_off_action
      on_button_short:
      - service: cover.close_cover
        data: {}
        target:
          entity_id: cover.curtains
      off_button_short:
      - service: cover.open_cover
        data: {}
        target:
          entity_id: cover.curtains
      on_button_long:
      - service: cover.stop_cover
        data: {}
        target:
          entity_id: cover.curtains
      off_button_long:
      - service: cover.stop_cover
        data: {}
        target:
          entity_id: cover.curtains
- id: '1671637864679'
  alias: "\U0001F3F0Den as it was"
  description: Returns Den State to back what it was when Den OFF was triggered.
  trigger:
  - platform: state
    entity_id:
    - input_boolean.den
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: scene.turn_on
    data: {}
    entity_id: scene.den_as_it_was
  mode: single
- id: '1671638012875'
  alias: "\U0001F3F0Send notification if no motion in Den"
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.den_motion_occupancy
    to: 'off'
    for: 00:04:00
    from: 'on'
  condition:
  - condition: and
    conditions:
    - condition: time
      after: 09:00:00
      before: '21:00:00'
      enabled: false
    - condition: or
      conditions:
      - condition: state
        entity_id: switch.workstation
        state: 'on'
    - condition: state
      entity_id: binary_sensor.chair_occupancy
      state: 'off'
      enabled: true
      for:
        hours: 0
        minutes: 5
        seconds: 0
  action:
  - service: notify.mobile_app_10pro
    data:
      title: Are you there?
      message: 'No motion detected in Den in the last 5 minutes. '
      data:
        actions:
        - action: Den_OFF
          title: 'NO'
        notification_icon: mdi:motion-sensor-off
        tag: den_off
        icon_url: /local/images/ninja.png
  mode: single
- id: '1671638403506'
  alias: "\U0001F3F0Desk Presence Detection"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.vibration_vibration
    to: 'on'
  condition:
  - condition: and
    conditions:
    - condition: time
      after: 08:00:00
      before: '22:00:00'
    - condition: state
      entity_id: switch.workstation
      state: 'off'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.den
        state: 'off'
      sequence:
      - service: automation.trigger
        target:
          entity_id: automation.den_as_it_was
        data: {}
    - conditions:
      - condition: state
        entity_id: input_boolean.den
        state: 'on'
      sequence:
      - service: homeassistant.turn_on
        data: {}
        target:
          entity_id: switch.workstation
    default: []
  mode: single
- id: '1672227190927'
  alias: "\U0001F3F0Clear Notification when motion is detected"
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.den_motion_occupancy
    from: 'off'
    to: 'on'
    enabled: false
  - platform: state
    entity_id:
    - binary_sensor.chair_occupancy
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: notify.mobile_app_10pro
    data:
      data:
        tag: den_off
      message: clear_notification
  mode: single
- id: '1672388963171'
  alias: "\U0001F3F0\U0001F3B5Controller - TRÅDFRI Wireless 5-Button Remote"
  description: ''
  use_blueprint:
    path: EPMatt/ikea_e1524_e1810.yaml
    input:
      integration: Zigbee2MQTT
      controller_device: 97ca075758792ef9bbde00dd0db2f808
      controller_entity: sensor.ikea_multi_button_action
      helper_last_controller_event: input_text.multibutton_last_state
      action_button_left_short: []
      action_button_center_short: []
      action_button_up_short: []
      action_button_down_release: []
      action_button_down_short: []
      action_button_right_double: []
      action_button_left_double: []
      action_button_center_long:
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.spotify
            state: playing
          sequence:
          - service: media_player.media_pause
            target:
              entity_id: media_player.spotify
            data: {}
        - conditions:
          - condition: state
            entity_id: media_player.spotify
            state: paused
          sequence:
          - service: media_player.media_play
            target:
              entity_id: media_player.spotify
            data: {}
        - conditions:
          - condition: state
            entity_id: media_player.spotify
            state: idle
          sequence:
          - service: spotcast.start
            data:
              device_name: '{% if is_state(''media_player.spotify'', ''playing'')
                %} {{state_attr("media_player.spotify", "source")}} {%else%}{{ states(''input_select.speakers_spotify'')
                }}{%endif%}'
              force_playback: true
              random_song: true
              shuffle: true
        default: []
      action_button_center_double:
      - choose:
        - conditions:
          - condition: state
            entity_id: media_player.spotify
            state: playing
          sequence:
          - service: media_player.media_pause
            target:
              entity_id: media_player.spotify
            data: {}
        - conditions:
          - condition: state
            entity_id: media_player.spotify
            state: paused
          sequence:
          - service: media_player.media_play
            target:
              entity_id: media_player.spotify
            data: {}
        - conditions:
          - condition: state
            entity_id: media_player.spotify
            state: idle
          sequence:
          - service: spotcast.start
            data:
              device_name: '{% if is_state(''media_player.spotify'', ''playing'')
                %} {{state_attr("media_player.spotify", "source")}} {%else%}{{ states(''input_select.speakers_spotify'')
                }}{%endif%}'
              force_playback: true
              random_song: true
              shuffle: true
        default: []
- id: '1672388988293'
  alias: "\U0001F3F0\U0001F3B5Hook - Media Player"
  description: ''
  use_blueprint:
    path: EPMatt/media_player.yaml
    input:
      controller_device: 97ca075758792ef9bbde00dd0db2f808
      controller_entity: sensor.ikea_multi_button_action
      controller_model: IKEA E1524/E1810 TRÅDFRI Wireless 5-Button Remote
      media_player: media_player.spotify
      volume_steps_short: 10
      volume_steps_long: 20
- id: '1672404137791'
  alias: "\U0001F3F0 Bed IFTTT"
  description: ''
  trigger:
    platform: event
    event_type: ifttt_webhook_received
    event_data:
      action: call_service
  action:
    service_template: '{{ trigger.event.data.service }}'
    data_template:
      entity_id: '{{ trigger.event.data.entity_id }}'
- id: '1673376314894'
  alias: "\U0001F3F0Turn off light when phone is wireless charging"
  description: ''
  trigger:
  - type: plugged_in
    platform: device
    device_id: 9d22afdfaf70765bd616973f27d2b9e1
    entity_id: binary_sensor.10pro_is_charging
    domain: binary_sensor
  condition:
  - condition: state
    entity_id: sensor.10pro_charger_type
    state: wireless
  action:
  - service: script.new_script
    data: {}
  mode: single
- id: '1674758476057'
  alias: "\U0001F4A1Living Room Light Motion"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.living_room_motion_occupancy
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: light.chandelier
    state: 'off'
  - condition: state
    entity_id: media_player.google_tv
    state: 'off'
  - condition: or
    conditions:
    - condition: sun
      before: sunrise
      after: sunset
    - condition: numeric_state
      entity_id: sensor.living_room_motion_illuminance
      below: 60
  - condition: state
    entity_id: light.led_strip
    state: 'off'
  action:
  - service: light.turn_on
    data:
      color_temp: 500
      brightness: 255
    target:
      entity_id: light.living_room_lamp
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.living_room_motion_occupancy
      from: 'on'
      to: 'off'
    continue_on_timeout: false
  - delay:
      hours: 0
      minutes: 3
      seconds: 0
      milliseconds: 0
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id: light.living_room_lamp
  mode: parallel
  max: 10
- id: '1675093554282'
  alias: "\U0001F9FA Wash Cycle"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.washing_machine_state
    from: Spinning
    to: Idle
    id: wash
  - platform: state
    entity_id:
    - sensor.washing_machine_state
    from: Drying
    to: Idle
    id: dry
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: wash
      sequence:
      - service: notify.all_phones
        data:
          data:
            tag: wash_cycle
          message: clear_notification
        alias: Clear Existing Notifications
      - service: notify.all_phones_ios
        data:
          data:
            tag: wash_cycle
          message: clear_notification
        alias: Clear Existing Notifications
      - wait_for_trigger:
        - platform: state
          entity_id:
          - sensor.washing_machine_state
          to: Cycle Complete
        continue_on_timeout: false
      - service: notify.all_phones
        data:
          message: at {{ as_timestamp(now()) | timestamp_custom('%-I:%M %p')}}
          data:
            notification_icon: mdi:washing-machine
            icon_url: /local/images/washing_machine.png
            sticky: 'true'
            tag: wash_cycle
          title: "\U0001F9FA Wash Cycle Complete"
      - service: notify.all_phones_ios
        data:
          message: at {{ as_timestamp(now()) | timestamp_custom('%-I:%M %p')}}
          data:
            notification_icon: mdi:washing-machine
            image: /local/images/washing_machine.png
            tag: wash_cycle
          title: "\U0001F9FA Wash Cycle Complete"
    - conditions:
      - condition: trigger
        id: dry
      sequence:
      - service: notify.all_phones
        data:
          data:
            tag: wash_cycle
          message: clear_notification
        alias: Clear Existing Notifications
      - service: notify.all_phones_ios
        data:
          data:
            tag: wash_cycle
          message: clear_notification
        alias: Clear Existing Notifications
      - wait_for_trigger:
        - platform: state
          entity_id:
          - sensor.washing_machine_state
          to: Cycle Complete
        continue_on_timeout: false
      - service: notify.all_phones
        data:
          message: at {{ as_timestamp(now()) | timestamp_custom('%-I:%M %p')}}
          data:
            notification_icon: mdi:washing-machine
            image: /local/images/washing_machine.png
            tag: wash_cycle
          title: "\U0001F9FA Dry Cycle Complete"
      - service: notify.all_phones_ios
        data:
          message: at {{ as_timestamp(now()) | timestamp_custom('%-I:%M %p')}}
          data:
            notification_icon: mdi:washing-machine
            icon_url: /local/images/washing_machine.png
            sticky: 'true'
            tag: wash_cycle
          title: "\U0001F9FA Dry Cycle Complete"
  mode: single
- id: '1675437001659'
  alias: "\U0001F6AEBin Pickup Notification"
  description: ''
  trigger:
  - platform: time
    at: '11:00:00'
    id: morning
    enabled: true
  - platform: time
    at: '20:00:00'
    id: night
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{(state_attr("sensor.black_bin", "next_collection")) ==
          2 }}'
        alias: Black Bin Next Collection is in 2 Days
      - condition: trigger
        id:
        - morning
      sequence:
      - service: notify.all_phones
        data:
          data:
            tag: bin_pickup
          message: clear_notification
      - service: notify.all_phones_ios
        data:
          data:
            tag: bin_pickup
          message: clear_notification
      - service: notify.all_phones
        data:
          data:
            notification_icon: mdi:trash-can-outline
            icon_url: /local/images/black_bin.png
            tag: bin_pickup
          message: Pickup is in two days on {{ states.sensor.black_bin.state}}
          title: Black Bin
      - service: notify.all_phones_ios
        data:
          data:
            notification_icon: mdi:trash-can-outline
            image: /local/images/black_bin.png
            tag: bin_pickup
          message: Pickup is in two days on {{ states.sensor.black_bin.state}}
          title: Black Bin
    - conditions:
      - condition: template
        value_template: '{{(state_attr("sensor.black_bin", "next_collection")) ==
          1 }}'
        alias: Black Bin Next Collection is in 1 Day
      sequence:
      - repeat:
          while:
          - condition: template
            value_template: '{{ states(''input_button.bin_outside'') | as_datetime
              > (now() - timedelta(hours=1)) }}'
          sequence:
          - service: notify.all_phones
            data:
              data:
                tag: bin_pickup
              message: clear_notification
          - service: notify.all_phones_ios
            data:
              data:
                tag: bin_pickup
              message: clear_notification
          - service: notify.all_phones
            data:
              data:
                notification_icon: mdi:trash-can-outline
                icon_url: /local/images/black_bin.png
                tag: bin_pickup
              message: Pickup is tomorrow on {{ states.sensor.black_bin.state}}
              title: Black Bin
          - service: notify.all_phones_ios
            data:
              data:
                notification_icon: mdi:trash-can-outline
                image: /local/images/black_bin.png
                tag: bin_pickup
              message: Pickup is tomorrow on {{ states.sensor.black_bin.state}}
              title: Black Bin
    - conditions:
      - condition: template
        value_template: '{{(state_attr("sensor.blue_bin", "next_collection")) == 2
          }}'
        alias: Blue Bin Next Collection is in 2 Days
      - condition: trigger
        id:
        - morning
      sequence:
      - service: notify.all_phones
        data:
          data:
            tag: bin_pickup
          message: clear_notification
      - service: notify.all_phones_ios
        data:
          data:
            tag: bin_pickup
          message: clear_notification
      - service: notify.all_phones
        data:
          data:
            notification_icon: mdi:trash-can
            icon_url: /local/images/blue_bin.png
            tag: bin_pickup
          message: Pickup is in two days on {{ states.sensor.blue_bin.state}}
          title: Blue Bin
    - conditions:
      - condition: template
        value_template: '{{(state_attr("sensor.blue_bin", "next_collection")) == 1
          }}'
        alias: Blue Bin Next Collection is in 1 Day
      sequence:
      - service: notify.all_phones
        data:
          data:
            tag: bin_pickup
          message: clear_notification
      - service: notify.all_phones_ios
        data:
          data:
            tag: bin_pickup
          message: clear_notification
      - service: notify.all_phones
        data:
          data:
            notification_icon: mdi:trash-can
            icon_url: /local/images/blue_bin.png
            tag: bin_pickup
          message: Pickup is tomorrow on {{ states.sensor.blue_bin.state}}
          title: Blue Bin
  mode: single
- id: '1677184691191'
  alias: "\U0001F525Start/stop Timer when heating is turned on/off"
  description: ''
  trigger:
  - platform: device
    type: turned_on
    device_id: 3d06ea4b9a5706c224b9bab4c5e5d012
    entity_id: switch.heating
    domain: switch
    for:
      hours: 0
      minutes: 0
      seconds: 0
    id: 'on'
  - platform: device
    type: turned_off
    device_id: 3d06ea4b9a5706c224b9bab4c5e5d012
    entity_id: switch.heating
    domain: switch
    id: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      sequence:
      - service: timer.start
        data:
          duration: 01:30:00
        target:
          entity_id: timer.heating
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.heating
  mode: single
- id: '1677263065986'
  alias: "\U0001F525Turn off heating after X minutes"
  description: ''
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.heating
  condition:
  - condition: state
    entity_id: switch.heating
    state: 'on'
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.heating
    enabled: true
  - service: notify.all_phones
    data:
      message: at  {{ as_timestamp(now()) | timestamp_custom('%-I:%M %p')}}
      title: "\U0001F525 Turned off"
      data:
        notification_icon: mdi:fire
  mode: single
- id: '1679600356905'
  alias: "\U0001F4A1Synchronize states - Backyard Lights"
  description: ''
  use_blueprint:
    path: adchevrier/synchronize-the-on-off-state-of-2-entities.yaml
    input:
      entity_1: switch.backyard_lights_socket_1
      entity_2: switch.backyard_lights
- id: '1680023994781'
  alias: "\U0001F4A1Kitchen Motion Blueprint"
  description: ''
  use_blueprint:
    path: freakshock88/motion_illuminance_activated_entity.yaml
    input:
      motion_sensor: binary_sensor.kitchen_motion_occupancy
      target_entity: switch.kitchen_light
      illuminance_sensor: sensor.kitchen_motion_illuminance
      illuminance_cutoff: input_number.kitchen_illuminance_cutoff
      no_motion_wait: input_number.kitchen_light_turn_off
- id: '1680037718271'
  alias: "\U0001F4A1Entrance String Lights Motion"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.entrance_motion_occupancy
    to: 'on'
    from: 'off'
  condition:
  - condition: sun
    before: sunrise
    after: sunset
    after_offset: -01:00:00
  action:
  - service: homeassistant.turn_on
    data: {}
    target:
      entity_id:
      - switch.string_lights_socket_1
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.entrance_motion_occupancy
      from: 'on'
      to: 'off'
    continue_on_timeout: false
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id: switch.string_lights_socket_1
  mode: parallel
  max: 10
- id: '1684017771758'
  alias: "\U0001F4FARefresh Plex Library"
  description: Refreshes the plex libraries when a download from sonarr or radarr
    finishes.
  trigger:
  - platform: state
    entity_id:
    - sensor.transmission_active_torrents
    to: '0'
    from: '1'
  - platform: state
    entity_id:
    - switch.transmission_switch
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: script.plex_library_refresh
    data: {}
  mode: queued
  max: 10
- id: '1684020991108'
  alias: "\U0001F4FANotify Sonarr downloads "
  description: Notifies when Sonarr downloads a new episode
  trigger:
  - platform: state
    entity_id:
    - sensor.sonarr_queue
    to: '0'
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 40
      milliseconds: 0
  - service: notify.mobile_app_10pro
    data:
      message: '{{ state_attr( "sensor.recently_added_tv", "data")[1].title }} {{
        state_attr( "sensor.recently_added_tv", "data")[1].number }} is downloaded
        and now available on Plex.'
      data:
        notification_icon: mdi:television-box
        image: '{{ state_attr( "sensor.recently_added_tv", "data")[1].fanart }}'
  mode: restart
- id: '1684414856257'
  alias: "\U0001F4A1Backyard Lights"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.door_contact
  - platform: state
    entity_id:
    - binary_sensor.kitchen_motion_occupancy
  condition:
  - condition: sun
    after: sunset
    before: sunrise
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.kitchen_motion_occupancy
        state: 'on'
      sequence:
      - wait_for_trigger:
        - platform: state
          entity_id:
          - binary_sensor.door_contact
          from: 'off'
          to: 'on'
        continue_on_timeout: false
        timeout:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.backyard_lights
    - conditions:
      - condition: state
        entity_id: binary_sensor.door_contact
        state: 'on'
      sequence:
      - wait_for_trigger:
        - platform: state
          entity_id:
          - binary_sensor.kitchen_motion_occupancy
          from: 'off'
          to: 'on'
        continue_on_timeout: false
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.backyard_lights
  mode: single
- id: '1684417211214'
  alias: "\U0001F4A1Synchronize states - String Lights"
  description: ''
  use_blueprint:
    path: adchevrier/synchronize-the-on-off-state-of-2-entities.yaml
    input:
      entity_1: switch.string_lights_socket_1
      entity_2: switch.string_lights
- id: '1684631799938'
  alias: "\U0001F3F0Bed Routine for curtains"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.in_bed
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.in_bed
        state: 'on'
      - condition: state
        entity_id: cover.curtains
        state: open
      - condition: time
        after: '21:00:00'
        before: 04:00:00
      sequence:
      - service: cover.close_cover
        data: {}
        target:
          entity_id: cover.curtains
    - conditions:
      - condition: state
        entity_id: binary_sensor.in_bed
        state: 'off'
      - condition: state
        entity_id: cover.curtains
        state: closed
      - condition: time
        after: 06:00:00
        before: '11:59:00'
      sequence:
      - service: cover.open_cover
        data: {}
        target:
          entity_id: cover.curtains
  mode: single
- id: '1685201261360'
  alias: "\U0001F4A1Entrance Light Motion"
  description: ''
  trigger:
  - platform: device
    device_id: 88946d0ffcf369169d9dc690798047c2
    domain: nest
    type: camera_motion
  - platform: device
    device_id: 88946d0ffcf369169d9dc690798047c2
    domain: nest
    type: camera_person
  condition:
  - condition: sun
    before: sunrise
    after: sunset
  action:
  - service: homeassistant.turn_on
    data: {}
    target:
      entity_id: switch.entrance_light
  - delay:
      hours: 0
      minutes: 0
      seconds: 50
      milliseconds: 0
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id: switch.entrance_light
  mode: single
- id: '1686132028588'
  alias: "\U0001F3B5Move Music to Nest Audio"
  description: ''
  trigger:
  - platform: tag
    tag_id: b7e48c34-d74d-4a6b-be87-491037aff87f
  condition: []
  action:
  - service: spotcast.start
    data:
      limit: 20
      force_playback: false
      random_song: false
      repeat: 'off'
      shuffle: false
      offset: 0
      ignore_fully_played: false
      device_name: Friday
  mode: single
- id: '1687359882327'
  alias: ⚙Reload Unavailable Entities
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.speedtest_download
    id: speedtest
    to: unavailable
  - platform: state
    entity_id:
    - sensor.bob_duration
    id: homewhiz
    to: unavailable
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: speedtest
      sequence:
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id:
          - sensor.speedtest_ping
          - sensor.speedtest_download
          - sensor.speedtest_upload
    - conditions:
      - condition: trigger
        id: homewhiz
      sequence:
      - service: homeassistant.update_entity
        data: {}
        target:
          entity_id:
          - select.bob_state
          - select.bob_programme
          - select.bob_temperature
          - select.bob_spin
          - select.bob_fast
          - select.bob_drying
          - select.bob_custom_duration_level
          - select.bob_rinse_count
          - select.bob_volume
          - sensor.bob_sub_state
          - sensor.bob_programme_end_time
          - sensor.bob_duration
          - sensor.bob_remaining
          - switch.bob_prewash
          - switch.bob_extra_rinse
          - switch.bob_smart_anti_crease
          - switch.bob_steam
          - switch.bob_extra_water
          - switch.bob_soaking
          - switch.bob_night_mode
          - switch.bob_anticrease
          - binary_sensor.bob_remote_control
          - binary_sensor.bob_warning_door_is_open
          - binary_sensor.bob_warning_no_water
          - binary_sensor.bob_warning_safety
  mode: single
- id: '1687903979617'
  alias: "\U0001F512Door Alarm"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.door_contact
    from: 'off'
    to: 'on'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: device_tracker.oneplus_7t
      state: not_home
    - condition: state
      entity_id: device_tracker.oneplus_10pro
      state: not_home
    - condition: state
      entity_id: device_tracker.hilary_s_phone_2
      state: not_home
  action:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.flashing
  - service: media_player.volume_set
    data:
      volume_level: 1
    target:
      entity_id: media_player.nest_mini
  - service: media_player.play_media
    data:
      media_content_type: audio/mp3
      media_content_id: /local/alarm-sound.mp3
    target:
      entity_id: media_player.nest_mini
  - service: media_player.play_media
    data:
      media_content_type: audio/mp3
      media_content_id: /local/alarm-sound.mp3
    target:
      entity_id: media_player.nest_mini
  mode: single
- id: '1688497197460'
  alias: "\U0001F3B5Text Search and Play Music on Spotify"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_text.text_spotify
  condition: []
  action:
  - service: spotcast.start
    data:
      force_playback: false
      random_song: false
      repeat: 'off'
      shuffle: false
      offset: 0
      ignore_fully_played: false
      search: '{{states.input_text.text_spotify.state}}'
      device_name: '{% if is_state(''media_player.spotify'', ''playing'') %} {{state_attr("media_player.spotify",
        "source")}} {%else%}{{ states(''input_select.speakers_spotify'') }}{%endif%}'
  mode: single
- id: '1688823940913'
  alias: ⚙️Front Door Motion - TV Notification
  description: ''
  trigger:
  - platform: device
    device_id: 88946d0ffcf369169d9dc690798047c2
    domain: nest
    type: camera_person
    id: person
  - platform: device
    device_id: 88946d0ffcf369169d9dc690798047c2
    domain: nest
    type: camera_motion
    id: motion
  - platform: device
    device_id: 88946d0ffcf369169d9dc690798047c2
    domain: nest
    type: doorbell_chime
    id: doorbell
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - motion
      sequence:
      - service: notify.google_tv
        data:
          title: Motion Detected
          message: at the front door
          data:
            fontsize: small
            duration: 8
            color: black
            transparency: 50%
            image: /api/nest/event_media/{{ trigger.event.data.device_id }}/{{ trigger.event.data.nest_event_id
              }}/thumbnail
      - service: notify.mobile_app_10pro
        data:
          data:
            image: /api/nest/event_media/{{ trigger.event.data.device_id }}/{{ trigger.event.data.nest_event_id
              }}/thumbnail
          message: Motion
    - conditions:
      - condition: trigger
        id:
        - person
      sequence:
      - service: notify.google_tv
        data:
          data:
            fontsize: small
            duration: 8
            color: black
            transparency: 50%
            image: /api/nest/event_media/{{ trigger.event.data.device_id }}/{{ trigger.event.data.nest_event_id
              }}/thumbnail
          message: Someone's at the front door
      - service: notify.mobile_app_10pro
        data:
          data:
            image: /api/nest/event_media/{{ trigger.event.data.device_id }}/{{ trigger.event.data.nest_event_id
              }}/thumbnail
          message: Person
    - conditions:
      - condition: trigger
        id:
        - doorbell
      sequence:
      - service: notify.google_tv
        data:
          title: Ding Dong!
          message: Ding Dong!
          data:
            fontsize: small
            duration: 8
            color: black
            transparency: 90%
            image: /api/nest/event_media/{{ trigger.event.data.device_id }}/{{ trigger.event.data.nest_event_id
              }}/thumbnail
      - service: notify.mobile_app_10pro
        data:
          data:
            image: /api/nest/event_media/{{ trigger.event.data.device_id }}/{{ trigger.event.data.nest_event_id
              }}/thumbnail
          message: Doorbell
  mode: single
- id: '1689331566546'
  alias: Launch Navigation when connected to Android Auto
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.10pro_android_auto
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: time
          after: 07:00:00
          before: 09:00:00
        - condition: state
          entity_id: person.pavanthanuj
          state: home
      sequence:
      - service: notify.mobile_app_10pro
        data:
          message: command_activity
          data:
            intent_package_name: com.google.android.apps.maps
            intent_action: android.intent.action.VIEW
            intent_uri: google.navigation:q=Ericsson, Athlone
    - conditions:
      - condition: and
        conditions:
        - condition: time
          after: '15:00:00'
          before: '18:00:00'
        - condition: state
          entity_id: person.pavanthanuj
          state: Work
      sequence:
      - service: notify.mobile_app_10pro
        data:
          message: command_activity
          data:
            intent_package_name: com.google.android.apps.maps
            intent_action: android.intent.action.VIEW
            intent_uri: google.navigation:q=Home
  mode: single
- id: '1690739657772'
  alias: Hilary Good/Bad Days
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: hilary_yes
    id: good day
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: hilary_no
    id: bad day
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - good day
      sequence:
      - service: counter.increment
        data: {}
        target:
          entity_id: counter.hilary_good_days
    - conditions:
      - condition: trigger
        id:
        - bad day
      sequence:
      - service: counter.increment
        data: {}
        target:
          entity_id: counter.hilary_bad_days
      - service: notify.mobile_app_10pro
        data:
          message: Hilary is having a bad day!
          data:
            notification_icon: mdi:alpha-x
  mode: single
- id: '1690740200174'
  alias: Hilary Notification
  description: ''
  trigger:
  - platform: time
    at: '18:00:00'
  condition: []
  action:
  - service: notify.mobile_app_hilary_s_phone
    data:
      message: Are you having a good day?
      title: "Hi Hilary \U0001F60A"
      data:
        actions:
        - action: hilary_yes
          title: "Hell Yeah! \U0001F60E"
        - action: hilary_no
          title: "No \U0001F614"
  mode: single
- id: '1691418078168'
  alias: Doorbell - Notifications
  description: ''
  trigger:
  - platform: device
    device_id: 88946d0ffcf369169d9dc690798047c2
    domain: nest
    type: camera_motion
    id: motion
  - platform: device
    device_id: 88946d0ffcf369169d9dc690798047c2
    domain: nest
    type: camera_person
    id: person
  - platform: device
    device_id: 88946d0ffcf369169d9dc690798047c2
    domain: nest
    type: doorbell_chime
    id: sound
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: motion
      sequence:
      - service: notify.mobile_app_10pro
        data:
          message: Doorbell Motion
          title: Doorbell Motion
          data:
            car_ui: true
            notification_icon: mdi:motion-sensor
            video: /api/nest/event_media/{{ trigger.event.data.device_id }}/{{ trigger.event.data.nest_event_id
              }}
            image: /api/nest/event_media/{{ trigger.event.data.device_id }}/{{ trigger.event.data.nest_event_id
              }}/thumbnail
    - conditions:
      - condition: trigger
        id: person
      sequence:
      - service: notify.mobile_app_10pro
        data:
          message: Doorbell Person
          title: Doorbell Person
          data:
            car_ui: true
            notification_icon: mdi:account
            video: /api/nest/event_media/{{ trigger.event.data.device_id }}/{{ trigger.event.data.nest_event_id
              }}
            image: /api/nest/event_media/{{ trigger.event.data.device_id }}/{{ trigger.event.data.nest_event_id
              }}/thumbnail
    - conditions:
      - condition: trigger
        id: sound
      sequence:
      - service: notify.mobile_app_10pro
        data:
          message: Doorbell
          title: Doorbell
          data:
            car_ui: true
            notification_icon: mdi:doorbell
            video: /api/nest/event_media/{{ trigger.event.data.device_id }}/{{ trigger.event.data.nest_event_id
              }}
            image: /api/nest/event_media/{{ trigger.event.data.device_id }}/{{ trigger.event.data.nest_event_id
              }}/thumbnail
  mode: single
- id: '1691773218286'
  alias: "\U0001F3B5Music Jukebox - Living Room"
  description: Music Jukebox for the Living Room
  trigger:
  - platform: event
    event_type: tag_scanned
  condition:
  - condition: template
    value_template: '{{ trigger.event.data.tag_id in tags }}'
  action:
  - variables:
      uri: '{{ tags[trigger.event.data.tag_id].uri }}'
  - service: spotcast.start
    data:
      device_name: '{% if is_state(''remote.google_tv'', ''on'') %} {{''Google TV''}}
        {%else%}{{''Nest Mini''}}{%endif%}'
      uri: '{{ uri }}'
      random_song: true
      force_playback: true
      shuffle: true
  - if:
    - condition: state
      entity_id: remote.google_tv
      state: 'on'
    then:
    - service: media_player.select_source
      data:
        source: Spotify
      target:
        entity_id: media_player.google_tv
  mode: restart
  variables:
    tags:
      04-23-F3-F2-03-68-81:
        uri: spotify:playlist:37i9dQZF1EJva5huKCwRZ8
- id: '1693250843736'
  alias: Trash Reminder
  description: ''
  use_blueprint:
    path: balloob/trash-pick-up-reminder.yaml
    input:
      bin_put_outside_button: input_button.bin_outside
      trash_calendar: calendar.allied_recycling_black_bin
      notify_device: 9d22afdfaf70765bd616973f27d2b9e1
